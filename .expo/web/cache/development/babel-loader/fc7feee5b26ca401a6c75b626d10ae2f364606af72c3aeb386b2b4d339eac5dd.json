{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umami\\\\Downloads\\\\Y 1.0.8\\\\Telas\\\\RegisterScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth } from '../firebase/config';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { firestore } from '../firebase/config';\nimport { doc, setDoc, getDocs, collection, query, where } from 'firebase/firestore';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterScreen = () => {\n  const navigation = useNavigation();\n  const [isActive, setIsActive] = useState(false);\n  const [nome, setNome] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleRegister = async () => {\n    setErrorMessage('');\n    if (password !== confirmPassword) {\n      setErrorMessage('As senhas não coincidem.');\n      return;\n    }\n    try {\n      const emailExists = await checkEmailExists(email);\n      if (emailExists) {\n        setErrorMessage('Este e-mail já está registrado.');\n        return;\n      }\n      const q = query(collection(firestore, 'users'), where('username', '==', username));\n      const querySnapshot = await getDocs(q);\n      if (querySnapshot.empty) {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        await setDoc(doc(firestore, 'users', user.uid), {\n          uid: user.uid,\n          nome,\n          username,\n          email\n        });\n        navigation.navigate('Perfil');\n      } else {\n        setErrorMessage('Este nome de usuário já está em uso.');\n      }\n    } catch (error) {\n      setErrorMessage('Erro ao criar conta. Tente novamente.');\n    }\n  };\n  const checkEmailExists = async email => {\n    try {\n      const signInMethods = await fetchSignInMethodsForEmail(auth, email);\n      return signInMethods.length > 0;\n    } catch (error) {\n      setErrorMessage('Erro ao verificar o e-mail.');\n      return false;\n    }\n  };\n  const handleGoogleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      await setDoc(doc(firestore, 'users', user.uid), {\n        uid: user.uid,\n        nome: user.displayName,\n        username: user.email.split('@')[0],\n        email: user.email\n      });\n      navigation.navigate('Perfil');\n    } catch (error) {\n      setErrorMessage('Erro ao entrar com o Google. Tente novamente.');\n    }\n  };\n  function handleLogin() {\n    navigation.navigate('Login');\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 55,\n        marginBottom: 40\n      },\n      children: \"\\uD835\\uDD50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 20\n      },\n      children: \"Cadastre-se\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome\",\n      value: nome,\n      onChangeText: setNome,\n      keyboardType: \"default\",\n      autoCapitalize: \"words\",\n      placeholderTextColor: isActive ? '#aaa' : '#ccc',\n      onFocus: () => setIsActive(true),\n      onBlur: () => {\n        if (nome === '') setIsActive(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), errorMessage ? _jsxDEV(Text, {\n      style: styles.error,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }, this) : null, _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#FFF',\n          fontSize: 19\n        },\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleGoogleLogin,\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#FFF',\n          fontSize: 19\n        },\n        children: \"Entrar com Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.registerPrompt,\n      children: \"J\\xE1 possui uma conta?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: handleLogin,\n      children: _jsxDEV(Text, {\n        style: {\n          textDecorationLine: 'underline',\n          color: 'blue'\n        },\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f2f2f2',\n    padding: 20\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingLeft: 15,\n    paddingVertical: 8,\n    marginBottom: 20,\n    fontSize: 16,\n    backgroundColor: '#F5F8FA'\n  },\n  button: {\n    width: '40%',\n    height: 40,\n    backgroundColor: '#1DA1F2',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    marginTop: 20\n  },\n  error: {\n    color: 'red',\n    fontSize: 14,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  registerPrompt: {\n    marginTop: 20,\n    fontSize: 16\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Text","StyleSheet","TouchableOpacity","auth","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","signInWithPopup","GoogleAuthProvider","firestore","doc","setDoc","getDocs","collection","query","where","useNavigation","jsxDEV","_jsxDEV","RegisterScreen","navigation","isActive","setIsActive","nome","setNome","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","handleRegister","emailExists","checkEmailExists","q","querySnapshot","empty","userCredential","user","uid","navigate","error","signInMethods","length","handleGoogleLogin","provider","result","displayName","split","handleLogin","style","styles","container","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","placeholderTextColor","onFocus","onBlur","button","onPress","color","registerPrompt","textDecorationLine","create","flex","justifyContent","alignItems","backgroundColor","padding","width","height","borderColor","borderWidth","borderRadius","paddingLeft","paddingVertical","marginTop","textAlign"],"sources":["C:/Users/umami/Downloads/Y 1.0.8/Telas/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { auth } from '../firebase/config';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { firestore } from '../firebase/config';\nimport { doc, setDoc, getDocs, collection, query, where } from 'firebase/firestore';\nimport { useNavigation } from '@react-navigation/native';\n\nconst RegisterScreen = () => {\n  const navigation = useNavigation();\n  const [isActive, setIsActive] = useState(false);\n  const [nome, setNome] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleRegister = async () => {\n    setErrorMessage('');\n\n    if (password !== confirmPassword) {\n      setErrorMessage('As senhas não coincidem.');\n      return;\n    }\n\n    try {\n      const emailExists = await checkEmailExists(email);\n      if (emailExists) {\n        setErrorMessage('Este e-mail já está registrado.');\n        return;\n      }\n\n      const q = query(collection(firestore, 'users'), where('username', '==', username));\n      const querySnapshot = await getDocs(q);\n\n      if (querySnapshot.empty) {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n\n        await setDoc(doc(firestore, 'users', user.uid), {\n          uid: user.uid,\n          nome,\n          username,\n          email,\n        });\n\n        navigation.navigate('Perfil');\n      } else {\n        setErrorMessage('Este nome de usuário já está em uso.');\n      }\n\n    } catch (error) {\n      setErrorMessage('Erro ao criar conta. Tente novamente.');\n    }\n  };\n\n  const checkEmailExists = async (email) => {\n    try {\n      const signInMethods = await fetchSignInMethodsForEmail(auth, email);\n      return signInMethods.length > 0;\n    } catch (error) {\n      setErrorMessage('Erro ao verificar o e-mail.');\n      return false;\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n\n      // Registre o usuário no Firestore\n      await setDoc(doc(firestore, 'users', user.uid), {\n        uid: user.uid,\n        nome: user.displayName,\n        username: user.email.split('@')[0], // Usa a parte do e-mail como nome de usuário\n        email: user.email,\n      });\n\n      navigation.navigate('Perfil');\n    } catch (error) {\n      setErrorMessage('Erro ao entrar com o Google. Tente novamente.');\n    }\n  };\n\n  function handleLogin() {\n    navigation.navigate('Login');\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ fontSize: 55, marginBottom: 40 }}>𝕐</Text>\n      <Text style={{ fontSize: 20, marginBottom: 20 }}>Cadastre-se</Text>\n\n      {/* Outros TextInput */}\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nome\"\n        value={nome}\n        onChangeText={setNome}\n        keyboardType=\"default\"\n        autoCapitalize=\"words\"\n        placeholderTextColor={isActive ? '#aaa' : '#ccc'}\n        onFocus={() => setIsActive(true)}\n        onBlur={() => { if (nome === '') setIsActive(false); }}\n      />\n      {/* ... outros campos de entrada ... */}\n\n      {errorMessage ? <Text style={styles.error}>{errorMessage}</Text> : null}\n\n      <TouchableOpacity style={styles.button} onPress={handleRegister}>\n        <Text style={{ color: '#FFF', fontSize: 19 }}>Cadastrar</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style={styles.button} onPress={handleGoogleLogin}>\n        <Text style={{ color: '#FFF', fontSize: 19 }}>Entrar com Google</Text>\n      </TouchableOpacity>\n\n      <Text style={styles.registerPrompt}>Já possui uma conta?</Text>\n      <TouchableOpacity onPress={handleLogin}>\n        <Text style={{ textDecorationLine: 'underline', color: 'blue' }}>Entrar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f2f2f2',\n    padding: 20,\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingLeft: 15,\n    paddingVertical: 8,\n    marginBottom: 20,\n    fontSize: 16,\n    backgroundColor: '#F5F8FA',\n  },\n  button: {\n    width: '40%',\n    height: 40,\n    backgroundColor: '#1DA1F2',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    marginTop: 20,\n  },\n  error: {\n    color: 'red',\n    fontSize: 14,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  registerPrompt: {\n    marginTop: 20,\n    fontSize: 16,\n  },\n});\n\nexport default RegisterScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}