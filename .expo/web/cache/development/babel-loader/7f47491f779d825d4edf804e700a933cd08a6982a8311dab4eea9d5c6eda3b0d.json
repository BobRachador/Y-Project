{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umami\\\\Downloads\\\\Y 1.0.8\\\\Telas\\\\LoginScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { auth, firestore } from '../firebase/config';\nimport { signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  const [isActive, setIsActive] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigation = useNavigation();\n  const handleLogin = async () => {\n    setError('');\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      navigation.navigate('Perfil');\n    } catch (err) {\n      setError('E-mail ou senha inválidos');\n    }\n  };\n  const handleRegister = () => {\n    navigation.navigate('Register');\n  };\n  const handleGoogleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      const userDoc = doc(firestore, 'users', user.uid);\n      const userSnapshot = await getDoc(userDoc);\n      if (!userSnapshot.exists()) {\n        await setDoc(userDoc, {\n          uid: user.uid,\n          nome: user.displayName,\n          username: user.email.split('@')[0],\n          email: user.email\n        });\n      }\n      navigation.navigate('Perfil');\n    } catch (error) {\n      setError('Erro ao entrar com o Google. Tente novamente.');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 55,\n        marginBottom: 40\n      },\n      children: \"\\uD835\\uDD50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        fontSize: 20,\n        marginBottom: 20\n      },\n      children: \"Entrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      style: styles.input,\n      placeholderTextColor: isActive ? '#aaa' : '#ccc',\n      onFocus: () => setIsActive(true),\n      onBlur: () => {\n        if (email === '') {\n          setIsActive(false);\n        }\n      },\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: styles.input,\n      placeholderTextColor: isActive ? '#aaa' : '#ccc',\n      onFocus: () => setIsActive(true),\n      onBlur: () => {\n        if (password === '') {\n          setIsActive(false);\n        }\n      },\n      autoCapitalize: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error ? _jsxDEV(Text, {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this) : null, _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#FFF',\n          fontSize: 18\n        },\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: {\n        borderWidth: 1,\n        borderRadius: 24,\n        marginTop: 10,\n        padding: 5,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      onPress: handleGoogleLogin,\n      children: [_jsxDEV(Image, {\n        source: require('../assets/google.png'),\n        style: {\n          width: 16,\n          height: 16,\n          margin: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: '400'\n        },\n        children: \"Entrar com Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: {\n        marginTop: 10\n      },\n      children: \"N\\xE3o possui uma conta?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: handleRegister,\n      children: _jsxDEV(Text, {\n        style: {\n          textDecorationLine: 'underline',\n          color: 'blue'\n        },\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f2f2f2',\n    padding: 20\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: '#E1E8ED',\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingLeft: 15,\n    marginBottom: 20,\n    fontSize: 16,\n    backgroundColor: '#F5F8FA'\n  },\n  button: {\n    width: '80%',\n    height: 45,\n    backgroundColor: '#1DA1F2',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    marginTop: 20\n  },\n  error: {\n    color: 'red',\n    fontSize: 14,\n    marginBottom: 10,\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Text","TouchableOpacity","StyleSheet","Image","auth","firestore","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","useNavigation","doc","setDoc","getDoc","jsxDEV","_jsxDEV","LoginScreen","isActive","setIsActive","email","setEmail","password","setPassword","error","setError","navigation","handleLogin","navigate","err","handleRegister","handleGoogleLogin","provider","result","user","userDoc","uid","userSnapshot","exists","nome","displayName","username","split","style","styles","container","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChangeText","input","placeholderTextColor","onFocus","onBlur","autoCapitalize","secureTextEntry","button","onPress","color","borderWidth","borderRadius","marginTop","padding","flexDirection","justifyContent","alignItems","source","require","width","height","margin","fontWeight","textDecorationLine","create","flex","backgroundColor","borderColor","paddingLeft","textAlign"],"sources":["C:/Users/umami/Downloads/Y 1.0.8/Telas/LoginScreen.js"],"sourcesContent":["// LoginScreen.js\nimport React, { useState } from 'react';\nimport { View, TextInput, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport { auth, firestore } from '../firebase/config'; // Importando a configuração do Firebase\nimport { signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\n\nconst LoginScreen = () => {\n  const [isActive, setIsActive] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const navigation = useNavigation();\n\n  const handleLogin = async () => {\n    setError(''); // Limpa mensagens de erro anteriores\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      navigation.navigate('Perfil'); \n    } catch (err) {\n      setError('E-mail ou senha inválidos');\n    }\n  };\n\n  const handleRegister = () => {\n    navigation.navigate('Register');\n  };\n\n  const handleGoogleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n\n      // Verificar se o usuário já existe no Firestore\n      const userDoc = doc(firestore, 'users', user.uid);\n      const userSnapshot = await getDoc(userDoc);\n\n      if (!userSnapshot.exists()) {\n        // Se não existir, registre o usuário no Firestore\n        await setDoc(userDoc, {\n          uid: user.uid,\n          nome: user.displayName,\n          username: user.email.split('@')[0], // Usa a parte do e-mail como nome de usuário\n          email: user.email,\n        });\n      }\n\n      navigation.navigate('Perfil');\n    } catch (error) {\n      setError('Erro ao entrar com o Google. Tente novamente.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ fontSize: 55, marginBottom: 40 }}>𝕐</Text>\n      <Text style={{ fontSize: 20, marginBottom: 20 }}>Entrar</Text>\n      \n      <TextInput\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        style={styles.input}\n        placeholderTextColor={isActive ? '#aaa' : '#ccc'}\n        onFocus={() => setIsActive(true)}\n        onBlur={() => {\n          if (email === '') {\n            setIsActive(false);\n          }\n        }}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        placeholder=\"Senha\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n        style={styles.input}\n        placeholderTextColor={isActive ? '#aaa' : '#ccc'}\n        onFocus={() => setIsActive(true)}\n        onBlur={() => {\n          if (password === '') {\n            setIsActive(false);\n          }\n        }}\n        autoCapitalize=\"none\"\n      />\n      {error ? <Text style={styles.error}>{error}</Text> : null}\n\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\n        <Text style={{ color: '#FFF', fontSize: 18 }}>Entrar</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity \n        style={{ borderWidth: 1, borderRadius: 24, marginTop: 10, padding: 5, flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }} \n        onPress={handleGoogleLogin}\n      >\n        <Image source={require('../assets/google.png')} style={{ width: 16, height: 16, margin: 5 }} />\n        <Text style={{ fontSize: 16, fontWeight: '400' }}>Entrar com Google</Text>\n      </TouchableOpacity>\n\n      <Text style={{ marginTop: 10 }}>Não possui uma conta?</Text>\n      <TouchableOpacity onPress={handleRegister}>\n        <Text style={{ textDecorationLine: 'underline', color: 'blue' }}>Cadastre-se</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f2f2f2',\n    padding: 20,\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: '#E1E8ED',\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingLeft: 15,\n    marginBottom: 20,\n    fontSize: 16,\n    backgroundColor: '#F5F8FA',\n  },\n  button: {\n    width: '80%',\n    height: 45,\n    backgroundColor: '#1DA1F2',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    marginTop: 20,\n  },\n  error: {\n    color: 'red',\n    fontSize: 14,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}