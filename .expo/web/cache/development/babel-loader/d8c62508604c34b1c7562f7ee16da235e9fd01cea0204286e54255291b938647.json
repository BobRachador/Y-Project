{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { DocumentReference, Timestamp, GeoPoint, Bytes, doc, documentId, serverTimestamp, increment, deleteField, arrayUnion, arrayRemove } from '@react-native-firebase/app/lib/internal/web/firebaseFirestore';\nvar INT_NAN = 0;\nvar INT_NEGATIVE_INFINITY = 1;\nvar INT_POSITIVE_INFINITY = 2;\nvar INT_NULL = 3;\nvar INT_DOCUMENTID = 4;\nvar INT_BOOLEAN_TRUE = 5;\nvar INT_BOOLEAN_FALSE = 6;\nvar INT_DOUBLE = 7;\nvar INT_STRING = 8;\nvar INT_STRING_EMPTY = 9;\nvar INT_ARRAY = 10;\nvar INT_REFERENCE = 11;\nvar INT_GEOPOINT = 12;\nvar INT_TIMESTAMP = 13;\nvar INT_BLOB = 14;\nvar INT_FIELDVALUE = 15;\nvar INT_OBJECT = 16;\nvar INT_INTEGER = 17;\nvar INT_NEGATIVE_ZERO = 18;\nvar INT_UNKNOWN = -999;\nvar TYPE = 'type';\nvar KEY_PATH = 'path';\nvar KEY_DATA = 'data';\nvar KEY_OPTIONS = 'options';\nexport function objectToWriteable(object) {\n  var out = {};\n  for (var _ref of Object.entries(object)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var key = _ref2[0];\n    var value = _ref2[1];\n    out[key] = buildTypeMap(value);\n  }\n  return out;\n}\nexport function arrayToWriteable(array) {\n  return array.map(buildTypeMap);\n}\nexport function readableToObject(firestore, readableMap) {\n  var out = {};\n  for (var _ref3 of Object.entries(readableMap)) {\n    var _ref4 = _slicedToArray(_ref3, 2);\n    var key = _ref4[0];\n    var value = _ref4[1];\n    out[key] = parseTypeMap(firestore, value);\n  }\n  return out;\n}\nexport function readableToArray(firestore, readableArray) {\n  return readableArray.map(function (value) {\n    return parseTypeMap(firestore, value);\n  });\n}\nexport function parseDocumentBatches(firestore, readableArray) {\n  var out = [];\n  for (var map of readableArray) {\n    var write = _defineProperty(_defineProperty({}, TYPE, map[TYPE]), KEY_PATH, map[KEY_PATH]);\n    if (KEY_DATA in map) {\n      write[KEY_DATA] = readableToObject(firestore, map[KEY_DATA]);\n    }\n    if (KEY_OPTIONS in map) {\n      write[KEY_OPTIONS] = map[KEY_OPTIONS];\n    }\n    out.push(write);\n  }\n  return out;\n}\nexport function buildTypeMap(value) {\n  var out = [];\n  if (value === null) {\n    out.push(INT_NULL);\n    return out;\n  }\n  if (typeof value === 'boolean') {\n    if (value) out.push(INT_BOOLEAN_TRUE);else out.push(INT_BOOLEAN_FALSE);\n    return out;\n  }\n  if (typeof value === 'number' && !Number.isInteger(value)) {\n    out.push(INT_DOUBLE);\n    out.push(value);\n    return out;\n  }\n  if (typeof value === 'number' && Number.isInteger(value)) {\n    if (value == Number.NEGATIVE_INFINITY) {\n      out.push(INT_NEGATIVE_INFINITY);\n      return out;\n    }\n    if (value == Number.POSITIVE_INFINITY) {\n      out.push(INT_POSITIVE_INFINITY);\n      return out;\n    }\n    if (isNaN(value)) {\n      out.push(INT_NAN);\n      return out;\n    }\n    out.push(INT_DOUBLE);\n    out.push(value);\n    return out;\n  }\n  if (typeof value === 'string') {\n    if (value === '') {\n      out.push(INT_STRING_EMPTY);\n    } else {\n      out.push(INT_STRING);\n      out.push(value);\n    }\n    return out;\n  }\n  if (Array.isArray(value)) {\n    out.push(INT_ARRAY);\n    out.push(arrayToWriteable(value));\n    return out;\n  }\n  if (value instanceof DocumentReference) {\n    out.push(INT_REFERENCE);\n    out.push(value.path);\n    return out;\n  }\n  if (value instanceof Timestamp) {\n    out.push(INT_TIMESTAMP);\n    out.push([value.seconds, value.nanoseconds]);\n    return out;\n  }\n  if (value instanceof GeoPoint) {\n    out.push(INT_GEOPOINT);\n    out.push([value.latitude, value.longitude]);\n    return out;\n  }\n  if (value instanceof Bytes) {\n    out.push(INT_BLOB);\n    out.push(value.toBase64());\n    return out;\n  }\n  if (typeof value === 'object') {\n    out.push(INT_OBJECT);\n    out.push(objectToWriteable(value));\n    return out;\n  }\n  out.push(INT_UNKNOWN);\n  return out;\n}\nexport function parseTypeMap(firestore, typedArray) {\n  var value = typedArray[0];\n  switch (value) {\n    case INT_NAN:\n      return NaN;\n    case INT_NEGATIVE_INFINITY:\n      return Number.NEGATIVE_INFINITY;\n    case INT_POSITIVE_INFINITY:\n      return Number.POSITIVE_INFINITY;\n    case INT_NULL:\n      return null;\n    case INT_DOCUMENTID:\n      return documentId();\n    case INT_BOOLEAN_TRUE:\n      return true;\n    case INT_BOOLEAN_FALSE:\n      return false;\n    case INT_NEGATIVE_ZERO:\n      return -0;\n    case INT_INTEGER:\n      return Number(typedArray[1]);\n    case INT_DOUBLE:\n      return Number(typedArray[1]);\n    case INT_STRING:\n      return String(typedArray[1]);\n    case INT_STRING_EMPTY:\n      return '';\n    case INT_ARRAY:\n      return readableToArray(firestore, typedArray[1]);\n    case INT_REFERENCE:\n      return doc(firestore, typedArray[1]);\n    case INT_GEOPOINT:\n      var _typedArray$ = _slicedToArray(typedArray[1], 2),\n        latitude = _typedArray$[0],\n        longitude = _typedArray$[1];\n      return new GeoPoint(latitude, longitude);\n    case INT_TIMESTAMP:\n      var _typedArray$2 = _slicedToArray(typedArray[1], 2),\n        seconds = _typedArray$2[0],\n        nanoseconds = _typedArray$2[1];\n      return new Timestamp(seconds, nanoseconds);\n    case INT_BLOB:\n      return Bytes.fromBase64String(typedArray[1]);\n    case INT_FIELDVALUE:\n      var fieldValueArray = typedArray[1];\n      var fieldValueType = fieldValueArray[0];\n      if (fieldValueType === 'timestamp') {\n        return serverTimestamp();\n      }\n      if (fieldValueType === 'increment') {\n        return increment(fieldValueArray[1]);\n      }\n      if (fieldValueType === 'delete') {\n        return deleteField();\n      }\n      if (fieldValueType === 'array_union') {\n        var elements = readableToArray(firestore, fieldValueArray[1]);\n        return arrayUnion.apply(void 0, _toConsumableArray(elements));\n      }\n      if (fieldValueType === 'array_remove') {\n        var _elements = readableToArray(firestore, fieldValueArray[1]);\n        return arrayRemove.apply(void 0, _toConsumableArray(_elements));\n      }\n    case INT_OBJECT:\n      return readableToObject(firestore, typedArray[1]);\n    case INT_UNKNOWN:\n    default:\n      return null;\n  }\n}","map":{"version":3,"names":["DocumentReference","Timestamp","GeoPoint","Bytes","doc","documentId","serverTimestamp","increment","deleteField","arrayUnion","arrayRemove","INT_NAN","INT_NEGATIVE_INFINITY","INT_POSITIVE_INFINITY","INT_NULL","INT_DOCUMENTID","INT_BOOLEAN_TRUE","INT_BOOLEAN_FALSE","INT_DOUBLE","INT_STRING","INT_STRING_EMPTY","INT_ARRAY","INT_REFERENCE","INT_GEOPOINT","INT_TIMESTAMP","INT_BLOB","INT_FIELDVALUE","INT_OBJECT","INT_INTEGER","INT_NEGATIVE_ZERO","INT_UNKNOWN","TYPE","KEY_PATH","KEY_DATA","KEY_OPTIONS","objectToWriteable","object","out","_ref","Object","entries","_ref2","_slicedToArray","key","value","buildTypeMap","arrayToWriteable","array","map","readableToObject","firestore","readableMap","_ref3","_ref4","parseTypeMap","readableToArray","readableArray","parseDocumentBatches","write","_defineProperty","push","Number","isInteger","NEGATIVE_INFINITY","POSITIVE_INFINITY","isNaN","Array","isArray","path","seconds","nanoseconds","latitude","longitude","toBase64","typedArray","NaN","String","_typedArray$","_typedArray$2","fromBase64String","fieldValueArray","fieldValueType","elements","apply","_toConsumableArray"],"sources":["C:/Users/richard.5935/Downloads/Yzon/node_modules/@react-native-firebase/firestore/lib/web/convert.js"],"sourcesContent":["import {\n  DocumentReference,\n  Timestamp,\n  GeoPoint,\n  Bytes,\n  doc,\n  documentId,\n  serverTimestamp,\n  increment,\n  deleteField,\n  arrayUnion,\n  arrayRemove,\n} from '@react-native-firebase/app/lib/internal/web/firebaseFirestore';\n\nconst INT_NAN = 0;\nconst INT_NEGATIVE_INFINITY = 1;\nconst INT_POSITIVE_INFINITY = 2;\nconst INT_NULL = 3;\nconst INT_DOCUMENTID = 4;\nconst INT_BOOLEAN_TRUE = 5;\nconst INT_BOOLEAN_FALSE = 6;\nconst INT_DOUBLE = 7;\nconst INT_STRING = 8;\nconst INT_STRING_EMPTY = 9;\nconst INT_ARRAY = 10;\nconst INT_REFERENCE = 11;\nconst INT_GEOPOINT = 12;\nconst INT_TIMESTAMP = 13;\nconst INT_BLOB = 14;\nconst INT_FIELDVALUE = 15;\nconst INT_OBJECT = 16;\nconst INT_INTEGER = 17;\nconst INT_NEGATIVE_ZERO = 18;\nconst INT_UNKNOWN = -999;\n\nconst TYPE = 'type';\nconst KEY_PATH = 'path';\nconst KEY_DATA = 'data';\nconst KEY_OPTIONS = 'options';\n\n// Converts an object to a writeable object.\nexport function objectToWriteable(object) {\n  const out = {};\n  for (const [key, value] of Object.entries(object)) {\n    out[key] = buildTypeMap(value);\n  }\n  return out;\n}\n\n// Converts an array of values to a writeable array.\nexport function arrayToWriteable(array) {\n  return array.map(buildTypeMap);\n}\n\n// Converts a readable object into a plain js object.\nexport function readableToObject(firestore, readableMap) {\n  const out = {};\n\n  for (const [key, value] of Object.entries(readableMap)) {\n    out[key] = parseTypeMap(firestore, value);\n  }\n\n  return out;\n}\n\n// Converts a readable array into a plain js array.\nexport function readableToArray(firestore, readableArray) {\n  return readableArray.map(value => parseTypeMap(firestore, value));\n}\n\n// Converts a readable array of document batch data into a plain js array.\nexport function parseDocumentBatches(firestore, readableArray) {\n  const out = [];\n\n  for (const map of readableArray) {\n    const write = {\n      [TYPE]: map[TYPE],\n      [KEY_PATH]: map[KEY_PATH],\n    };\n\n    if (KEY_DATA in map) {\n      write[KEY_DATA] = readableToObject(firestore, map[KEY_DATA]);\n    }\n\n    if (KEY_OPTIONS in map) {\n      write[KEY_OPTIONS] = map[KEY_OPTIONS];\n    }\n\n    out.push(write);\n  }\n\n  return out;\n}\n\n// Returns a typed array of a value.\nexport function buildTypeMap(value) {\n  const out = [];\n  if (value === null) {\n    out.push(INT_NULL);\n    return out;\n  }\n\n  if (typeof value === 'boolean') {\n    if (value) out.push(INT_BOOLEAN_TRUE);\n    else out.push(INT_BOOLEAN_FALSE);\n    return out;\n  }\n\n  // Double\n  if (typeof value === 'number' && !Number.isInteger(value)) {\n    out.push(INT_DOUBLE);\n    out.push(value);\n    return out;\n  }\n\n  // Integer\n  if (typeof value === 'number' && Number.isInteger(value)) {\n    if (value == Number.NEGATIVE_INFINITY) {\n      out.push(INT_NEGATIVE_INFINITY);\n      return out;\n    }\n\n    if (value == Number.POSITIVE_INFINITY) {\n      out.push(INT_POSITIVE_INFINITY);\n      return out;\n    }\n\n    if (isNaN(value)) {\n      out.push(INT_NAN);\n      return out;\n    }\n\n    out.push(INT_DOUBLE);\n    out.push(value);\n    return out;\n  }\n\n  if (typeof value === 'string') {\n    if (value === '') {\n      out.push(INT_STRING_EMPTY);\n    } else {\n      out.push(INT_STRING);\n      out.push(value);\n    }\n    return out;\n  }\n\n  if (Array.isArray(value)) {\n    out.push(INT_ARRAY);\n    out.push(arrayToWriteable(value));\n    return out;\n  }\n\n  if (value instanceof DocumentReference) {\n    out.push(INT_REFERENCE);\n    out.push(value.path);\n    return out;\n  }\n\n  if (value instanceof Timestamp) {\n    out.push(INT_TIMESTAMP);\n    out.push([value.seconds, value.nanoseconds]);\n    return out;\n  }\n\n  if (value instanceof GeoPoint) {\n    out.push(INT_GEOPOINT);\n    out.push([value.latitude, value.longitude]);\n    return out;\n  }\n\n  if (value instanceof Bytes) {\n    out.push(INT_BLOB);\n    out.push(value.toBase64());\n    return out;\n  }\n\n  if (typeof value === 'object') {\n    out.push(INT_OBJECT);\n    out.push(objectToWriteable(value));\n    return out;\n  }\n\n  out.push(INT_UNKNOWN);\n  return out;\n}\n\n// Parses a typed array into a value.\nexport function parseTypeMap(firestore, typedArray) {\n  const value = typedArray[0];\n\n  switch (value) {\n    case INT_NAN:\n      return NaN;\n    case INT_NEGATIVE_INFINITY:\n      return Number.NEGATIVE_INFINITY;\n    case INT_POSITIVE_INFINITY:\n      return Number.POSITIVE_INFINITY;\n    case INT_NULL:\n      return null;\n    case INT_DOCUMENTID:\n      return documentId();\n    case INT_BOOLEAN_TRUE:\n      return true;\n    case INT_BOOLEAN_FALSE:\n      return false;\n    case INT_NEGATIVE_ZERO:\n      return -0;\n    case INT_INTEGER:\n      return Number(typedArray[1]);\n    case INT_DOUBLE:\n      return Number(typedArray[1]);\n    case INT_STRING:\n      return String(typedArray[1]);\n    case INT_STRING_EMPTY:\n      return '';\n    case INT_ARRAY:\n      return readableToArray(firestore, typedArray[1]);\n    case INT_REFERENCE:\n      return doc(firestore, typedArray[1]);\n    case INT_GEOPOINT:\n      const [latitude, longitude] = typedArray[1];\n      return new GeoPoint(latitude, longitude);\n    case INT_TIMESTAMP:\n      const [seconds, nanoseconds] = typedArray[1];\n      return new Timestamp(seconds, nanoseconds);\n    case INT_BLOB:\n      return Bytes.fromBase64String(typedArray[1]);\n    case INT_FIELDVALUE:\n      const fieldValueArray = typedArray[1];\n      const fieldValueType = fieldValueArray[0];\n\n      if (fieldValueType === 'timestamp') {\n        return serverTimestamp();\n      }\n\n      if (fieldValueType === 'increment') {\n        return increment(fieldValueArray[1]);\n      }\n\n      if (fieldValueType === 'delete') {\n        return deleteField();\n      }\n\n      if (fieldValueType === 'array_union') {\n        const elements = readableToArray(firestore, fieldValueArray[1]);\n        return arrayUnion(...elements);\n      }\n\n      if (fieldValueType === 'array_remove') {\n        const elements = readableToArray(firestore, fieldValueArray[1]);\n        return arrayRemove(...elements);\n      }\n    case INT_OBJECT:\n      return readableToObject(firestore, typedArray[1]);\n    case INT_UNKNOWN:\n    default:\n      return null;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}