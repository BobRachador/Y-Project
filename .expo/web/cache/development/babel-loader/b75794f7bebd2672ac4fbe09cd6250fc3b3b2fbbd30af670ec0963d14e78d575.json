{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nexport function guard(fn) {\n  return fn().catch(function (e) {\n    return Promise.reject(getWebError(e));\n  });\n}\nexport function getWebError(error) {\n  var obj = {\n    code: error.code || 'unknown',\n    message: error.message\n  };\n  obj.code = obj.code.toLowerCase();\n  obj.code = obj.code.replace(/_/g, '-');\n  if (obj.code.includes('/')) {\n    obj.code = obj.code.split('/')[1];\n  }\n  return _objectSpread(_objectSpread({}, obj), {}, {\n    userInfo: obj\n  });\n}\nexport function emitEvent(eventName, event) {\n  setImmediate(function () {\n    return DeviceEventEmitter.emit('rnfb_' + eventName, event);\n  });\n}","map":{"version":3,"names":["guard","fn","catch","e","Promise","reject","getWebError","error","obj","code","message","toLowerCase","replace","includes","split","_objectSpread","userInfo","emitEvent","eventName","event","setImmediate","DeviceEventEmitter","emit"],"sources":["C:/Users/richard.5935/Downloads/Yzon/node_modules/@react-native-firebase/app/lib/internal/web/utils.js"],"sourcesContent":["import { DeviceEventEmitter } from 'react-native';\n\n// A general purpose guard function to catch errors and return a structured error object.\nexport function guard(fn) {\n  return fn().catch(e => Promise.reject(getWebError(e)));\n}\n\n// Converts a thrown error to a structured error object\n// required by RNFirebase native module internals.\nexport function getWebError(error) {\n  const obj = {\n    code: error.code || 'unknown',\n    message: error.message,\n  };\n\n  // Some modules send codes as PERMISSION_DENIED, which is not\n  // the same as the Firebase error code format.\n  obj.code = obj.code.toLowerCase();\n  // Replace _ with - in code\n  obj.code = obj.code.replace(/_/g, '-');\n\n  // Split out prefix, since we internally prefix all error codes already.\n  if (obj.code.includes('/')) {\n    obj.code = obj.code.split('/')[1];\n  }\n\n  return {\n    ...obj,\n    userInfo: obj,\n  };\n}\n\nexport function emitEvent(eventName, event) {\n  setImmediate(() => DeviceEventEmitter.emit('rnfb_' + eventName, event));\n}\n"],"mappings":";;;;AAGA,OAAO,SAASA,KAAKA,CAACC,EAAE,EAAE;EACxB,OAAOA,EAAE,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,CAAC;IAAA,OAAIC,OAAO,CAACC,MAAM,CAACC,WAAW,CAACH,CAAC,CAAC,CAAC;EAAA,EAAC;AACxD;AAIA,OAAO,SAASG,WAAWA,CAACC,KAAK,EAAE;EACjC,IAAMC,GAAG,GAAG;IACVC,IAAI,EAAEF,KAAK,CAACE,IAAI,IAAI,SAAS;IAC7BC,OAAO,EAAEH,KAAK,CAACG;EACjB,CAAC;EAIDF,GAAG,CAACC,IAAI,GAAGD,GAAG,CAACC,IAAI,CAACE,WAAW,CAAC,CAAC;EAEjCH,GAAG,CAACC,IAAI,GAAGD,GAAG,CAACC,IAAI,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAGtC,IAAIJ,GAAG,CAACC,IAAI,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC1BL,GAAG,CAACC,IAAI,GAAGD,GAAG,CAACC,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnC;EAEA,OAAAC,aAAA,CAAAA,aAAA,KACKP,GAAG;IACNQ,QAAQ,EAAER;EAAG;AAEjB;AAEA,OAAO,SAASS,SAASA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC1CC,YAAY,CAAC;IAAA,OAAMC,kBAAkB,CAACC,IAAI,CAAC,OAAO,GAAGJ,SAAS,EAAEC,KAAK,CAAC;EAAA,EAAC;AACzE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}