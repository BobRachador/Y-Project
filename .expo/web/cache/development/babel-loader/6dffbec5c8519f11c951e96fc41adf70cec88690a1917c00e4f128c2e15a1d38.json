{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umami\\\\Downloads\\\\Y 1.0.8\\\\Telas\\\\Feed.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { collection, getDocs, doc, getDoc, query, orderBy } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase/config';\nimport PostItem from './PostItem';\nimport { BlurView } from 'expo-blur';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [visible, setVisible] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const nav = useNavigation();\n  const fetchPosts = async () => {\n    setLoading(true);\n    try {\n      const postsQuery = query(collection(firestore, 'posts'), orderBy('data', 'desc'));\n      const postSnapshot = await getDocs(postsQuery);\n      const postList = await Promise.all(postSnapshot.docs.map(async postDoc => {\n        const postData = Object.assign({\n          id: postDoc.id\n        }, postDoc.data());\n        if (postData.autor) {\n          const userDocRef = doc(firestore, 'users', postData.autor);\n          const userDoc = await getDoc(userDocRef);\n          postData.autor = userDoc.exists() ? Object.assign({\n            id: userDoc.id\n          }, userDoc.data()) : null;\n        } else {\n          postData.autor = null;\n        }\n        return postData;\n      }));\n      setPosts(postList);\n    } catch (error) {\n      console.error(\"Erro ao buscar posts: \", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useFocusEffect(useCallback(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUserId(user.uid);\n        setVisible(false);\n      } else {\n        setUserId(null);\n        const timer = setTimeout(() => {\n          setVisible(true);\n        }, 5000);\n        return () => clearTimeout(timer);\n      }\n    });\n    fetchPosts();\n    return () => unsubscribe();\n  }, []));\n  function logon() {\n    nav.navigate('Person');\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1\n    },\n    children: [visible && _jsxDEV(BlurView, {\n      intensity: 85,\n      style: {\n        position: 'absolute',\n        width: '100%',\n        textAlign: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        height: '100%',\n        zIndex: 2\n      },\n      children: _jsxDEV(View, {\n        style: {\n          backgroundColor: '#FFF',\n          borderColor: '#dedede',\n          padding: 20,\n          borderWidth: 1,\n          borderRadius: 24,\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginHorizontal: '10%'\n        },\n        children: [_jsxDEV(Text, {\n          style: {\n            textAlign: 'center',\n            borderBottomWidth: 1,\n            fontSize: 24,\n            fontWeight: '400'\n          },\n          children: \"\\uD835\\uDD50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: {\n            textAlign: 'center',\n            marginTop: 5\n          },\n          children: \"Entre para continuar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          onPress: logon,\n          children: _jsxDEV(Text, {\n            style: {\n              textAlign: 'center',\n              backgroundColor: '#00BFFF',\n              padding: 5,\n              borderRadius: 24,\n              fontSize: 18,\n              margin: 10,\n              color: '#FFF'\n            },\n            children: \"Cadastrar/Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), _jsxDEV(FlatList, {\n      data: posts,\n      renderItem: ({\n        item\n      }) => _jsxDEV(PostItem, {\n        texto: item.texto,\n        img: item.img,\n        autor: item.autor,\n        id: item.id,\n        userId: userId,\n        dell: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this),\n      keyExtractor: item => item.id,\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: loading,\n        onRefresh: fetchPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\nexport default Feed;","map":{"version":3,"names":["React","useEffect","useState","useCallback","View","Text","FlatList","TouchableOpacity","RefreshControl","ActivityIndicator","collection","getDocs","doc","getDoc","query","orderBy","firestore","auth","PostItem","BlurView","useNavigation","useFocusEffect","jsxDEV","_jsxDEV","Feed","posts","setPosts","userId","setUserId","visible","setVisible","loading","setLoading","nav","fetchPosts","postsQuery","postSnapshot","postList","Promise","all","docs","map","postDoc","postData","Object","assign","id","data","autor","userDocRef","userDoc","exists","error","console","unsubscribe","onAuthStateChanged","user","uid","timer","setTimeout","clearTimeout","logon","navigate","style","flex","children","intensity","position","width","textAlign","justifyContent","overflow","height","zIndex","backgroundColor","borderColor","padding","borderWidth","borderRadius","alignItems","marginHorizontal","borderBottomWidth","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onPress","margin","color","renderItem","item","texto","img","dell","keyExtractor","refreshControl","refreshing","onRefresh"],"sources":["C:/Users/umami/Downloads/Y 1.0.8/Telas/Feed.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, RefreshControl, ActivityIndicator } from 'react-native';\nimport { collection, getDocs, doc, getDoc, query, orderBy } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase/config';\nimport PostItem from './PostItem';\nimport { BlurView } from 'expo-blur';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\n\nconst Feed = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [visible, setVisible] = useState(null);\n  const [loading, setLoading] = useState(false); // Estado para controle de carregamento\n  const nav = useNavigation();\n\n  const fetchPosts = async () => {\n    setLoading(true); // Define o estado de carregamento como verdadeiro\n    try {\n      const postsQuery = query(collection(firestore, 'posts'), orderBy('data', 'desc'));\n      const postSnapshot = await getDocs(postsQuery);\n\n      const postList = await Promise.all(\n        postSnapshot.docs.map(async (postDoc) => {\n          const postData = { id: postDoc.id, ...postDoc.data() };\n\n          if (postData.autor) {\n            const userDocRef = doc(firestore, 'users', postData.autor);\n            const userDoc = await getDoc(userDocRef);\n            postData.autor = userDoc.exists() ? { id: userDoc.id, ...userDoc.data() } : null;\n          } else {\n            postData.autor = null;\n          }\n          return postData;\n        })\n      );\n\n      setPosts(postList);\n    } catch (error) {\n      console.error(\"Erro ao buscar posts: \", error);\n    } finally {\n      setLoading(false); // Define o estado de carregamento como falso após a busca\n    }\n  };\n\n  useFocusEffect(\n    useCallback(() => {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        if (user) {\n          setUserId(user.uid);\n          setVisible(false);\n        } else {\n          setUserId(null);\n          const timer = setTimeout(() => {\n            setVisible(true);\n          }, 5000); // Espera 5 segundos\n\n          // Limpa o timer se o componente for desmontado\n          return () => clearTimeout(timer);\n        }\n      });\n\n      fetchPosts(); // Chama a função para buscar posts na montagem do componente\n\n      return () => unsubscribe();\n    }, [])\n  );\n\n  function logon() {\n    nav.navigate('Person');\n  }\n\n  return (\n    <View style={{ flex: 1 }}>\n      {visible && ( // Renderiza a mensagem de login apenas se 'visible' for true\n        <BlurView\n          intensity={85}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            textAlign: 'center',\n            justifyContent: 'center',\n            overflow: 'hidden',\n            height: '100%',\n            zIndex: 2,\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: '#FFF',\n              borderColor: '#dedede',\n              padding: 20,\n              borderWidth: 1,\n              borderRadius: 24,\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginHorizontal: '10%',\n            }}\n          >\n            <Text style={{ textAlign: 'center', borderBottomWidth: 1, fontSize: 24, fontWeight: '400' }}>𝕐</Text>\n            <Text style={{ textAlign: 'center', marginTop: 5 }}>Entre para continuar</Text>\n            <TouchableOpacity onPress={logon}>\n              <Text\n                style={{\n                  textAlign: 'center',\n                  backgroundColor: '#00BFFF',\n                  padding: 5,\n                  borderRadius: 24,\n                  fontSize: 18,\n                  margin: 10,\n                  color: '#FFF',\n                }}\n              >\n                Cadastrar/Entrar\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </BlurView>\n      )}\n\n      <FlatList\n        data={posts}\n        renderItem={({ item }) => (\n          <PostItem\n            texto={item.texto}\n            img={item.img}\n            autor={item.autor}\n            id={item.id}\n            userId={userId}\n            dell={false}\n          />\n        )}\n        keyExtractor={(item) => item.id}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading} // Exibe o indicador de carregamento\n            onRefresh={fetchPosts} // Chama a função fetchPosts ao arrastar para baixo\n          />\n        }\n      />\n    </View>\n  );\n};\n\nexport default Feed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}