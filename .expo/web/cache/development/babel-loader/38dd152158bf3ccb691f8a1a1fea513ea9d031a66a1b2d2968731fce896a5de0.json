{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umami\\\\Downloads\\\\Y 1.0.8\\\\Telas\\\\FormPost.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { setDoc, doc } from 'firebase/firestore';\nimport * as ImagePicker from 'expo-image-picker';\nimport { firestore, auth, storage } from '../firebase/config';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigation, useIsFocused } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  const [texto, setTexto] = useState('');\n  const [imageUri, setImageUri] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const [loadingAuth, setLoadingAuth] = useState(true);\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n  useEffect(() => {\n    if (isFocused) {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        if (user) {\n          setUserLoggedIn(true);\n        } else {\n          navigation.navigate('Person');\n        }\n        setLoadingAuth(false);\n      });\n      return () => unsubscribe();\n    }\n  }, [isFocused, navigation]);\n  const pickImage = async () => {\n    const options = ['Tirar Foto', 'Escolher da Galeria', 'Cancelar'];\n    alert('Selecione uma opção', '', [{\n      text: options[0],\n      onPress: () => launchCamera()\n    }, {\n      text: options[1],\n      onPress: () => launchGallery()\n    }, {\n      text: options[2],\n      style: 'cancel'\n    }]);\n  };\n  const launchGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1\n    });\n    if (!result.canceled && result.assets && result.assets.length > 0) {\n      setImageUri(result.assets[0].uri);\n    } else {\n      console.log(\"Imagem não selecionada ou operação cancelada.\");\n    }\n  };\n  const launchCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1\n    });\n    if (!result.canceled && result.assets && result.assets.length > 0) {\n      setImageUri(result.assets[0].uri);\n    } else {\n      console.log(\"Foto não tirada ou operação cancelada.\");\n    }\n  };\n  const uploadImage = async () => {\n    if (!imageUri) return null;\n    const response = await fetch(imageUri);\n    const blob = await response.blob();\n    const storageRef = ref(storage, `images/${generateUniqueId()}`);\n    await uploadBytes(storageRef, blob);\n    const downloadUrl = await getDownloadURL(storageRef);\n    return downloadUrl;\n  };\n  const generateUniqueId = () => {\n    return `${Date.now()}-${Math.floor(Math.random() * 1000000)}`;\n  };\n  const createPost = async () => {\n    if (texto.trim() === '') {\n      alert('Por favor, insira algum texto para o post.');\n      return;\n    }\n    try {\n      setUploading(true);\n      const postId = generateUniqueId();\n      const imageUrl = await uploadImage();\n      const newPost = {\n        id: postId,\n        texto: texto,\n        img: imageUrl,\n        autor: auth.currentUser.uid,\n        data: new Date()\n      };\n      await setDoc(doc(firestore, 'posts', postId), newPost);\n      setTexto('');\n      setImageUri(null);\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      });\n    } catch (error) {\n      console.error('Erro ao criar post: ', error);\n      alert('Erro ao criar post.');\n    } finally {\n      setUploading(false);\n    }\n  };\n  if (loadingAuth) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#3b5998\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userLoggedIn) {\n    return null;\n  }\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      backgroundColor: '#fff'\n    },\n    children: [_jsxDEV(Text, {\n      style: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 10\n      },\n      children: \"Criar Novo Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      value: texto,\n      onChangeText: text => setTexto(text),\n      placeholder: \"Escreva algo...\",\n      style: {\n        height: 100,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 10,\n        padding: 10,\n        textAlignVertical: 'top',\n        marginBottom: 15\n      },\n      multiline: true,\n      keyboardType: \"default\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: pickImage,\n      style: {\n        marginBottom: 15\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#3b5998'\n        },\n        children: \"Escolher Imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), imageUri && _jsxDEV(Image, {\n      source: {\n        uri: imageUri\n      },\n      style: {\n        width: 100,\n        height: 100,\n        borderRadius: 10,\n        marginBottom: 15,\n        alignSelf: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), uploading && _jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"#3b5998\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: createPost,\n      style: {\n        backgroundColor: '#3b5998',\n        padding: 15,\n        borderRadius: 10,\n        alignItems: 'center'\n      },\n      disabled: uploading,\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#fff',\n          fontWeight: 'bold'\n        },\n        children: uploading ? 'Criando Post...' : 'Criar Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\nexport default CreatePost;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","Image","ActivityIndicator","Alert","setDoc","doc","ImagePicker","firestore","auth","storage","ref","uploadBytes","getDownloadURL","useNavigation","useIsFocused","jsxDEV","_jsxDEV","CreatePost","texto","setTexto","imageUri","setImageUri","uploading","setUploading","userLoggedIn","setUserLoggedIn","loadingAuth","setLoadingAuth","navigation","isFocused","unsubscribe","onAuthStateChanged","user","navigate","pickImage","options","alert","text","onPress","launchCamera","launchGallery","style","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","assets","length","uri","console","log","launchCameraAsync","uploadImage","response","fetch","blob","storageRef","generateUniqueId","downloadUrl","Date","now","Math","floor","random","createPost","trim","postId","imageUrl","newPost","id","img","autor","currentUser","uid","data","reset","index","routes","name","error","flex","justifyContent","alignItems","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","padding","backgroundColor","fontSize","fontWeight","marginBottom","value","onChangeText","placeholder","height","borderColor","borderWidth","borderRadius","textAlignVertical","multiline","keyboardType","source","width","alignSelf","disabled"],"sources":["C:/Users/umami/Downloads/Y 1.0.8/Telas/FormPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, Image, ActivityIndicator, Alert } from 'react-native';\nimport { setDoc, doc } from 'firebase/firestore';\nimport * as ImagePicker from 'expo-image-picker';\nimport { firestore, auth, storage } from '../firebase/config';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useNavigation, useIsFocused } from '@react-navigation/native';\n\nconst CreatePost = () => {\n  const [texto, setTexto] = useState('');\n  const [imageUri, setImageUri] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const [loadingAuth, setLoadingAuth] = useState(true);\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  useEffect(() => {\n    if (isFocused) {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        if (user) {\n          setUserLoggedIn(true);\n        } else {\n          navigation.navigate('Person');\n        }\n        setLoadingAuth(false);\n      });\n\n      return () => unsubscribe();\n    }\n  }, [isFocused, navigation]);\n\n  const pickImage = async () => {\n    const options = ['Tirar Foto', 'Escolher da Galeria', 'Cancelar'];\n    alert('Selecione uma opção', '', [\n      {\n        text: options[0],\n        onPress: () => launchCamera(),\n      },\n      {\n        text: options[1],\n        onPress: () => launchGallery(),\n      },\n      { text: options[2], style: 'cancel' },\n    ]);\n  };\n\n  const launchGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.canceled && result.assets && result.assets.length > 0) {\n      setImageUri(result.assets[0].uri);\n    } else {\n      console.log(\"Imagem não selecionada ou operação cancelada.\");\n    }\n  };\n\n  const launchCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.canceled && result.assets && result.assets.length > 0) {\n      setImageUri(result.assets[0].uri);\n    } else {\n      console.log(\"Foto não tirada ou operação cancelada.\");\n    }\n  };\n\n  const uploadImage = async () => {\n    if (!imageUri) return null;\n\n    const response = await fetch(imageUri);\n    const blob = await response.blob();\n\n    const storageRef = ref(storage, `images/${generateUniqueId()}`);\n\n    await uploadBytes(storageRef, blob);\n\n    const downloadUrl = await getDownloadURL(storageRef);\n\n    return downloadUrl;\n  };\n\n  const generateUniqueId = () => {\n    return `${Date.now()}-${Math.floor(Math.random() * 1000000)}`;\n  };\n\n  const createPost = async () => {\n    if (texto.trim() === '') {\n      alert('Por favor, insira algum texto para o post.');\n      return;\n    }\n\n    try {\n      setUploading(true);\n\n      const postId = generateUniqueId();\n      const imageUrl = await uploadImage();\n\n      const newPost = {\n        id: postId,\n        texto: texto,\n        img: imageUrl,\n        autor: auth.currentUser.uid,\n        data: new Date(),\n      };\n\n      await setDoc(doc(firestore, 'posts', postId), newPost);\n\n      setTexto('');\n      setImageUri(null);\n\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'Home' }],\n      });\n    } catch (error) {\n      console.error('Erro ao criar post: ', error);\n      alert('Erro ao criar post.');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  if (loadingAuth) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color=\"#3b5998\" />\n      </View>\n    );\n  }\n\n  if (!userLoggedIn) {\n    return null;\n  }\n\n  return (\n    <View style={{ flex: 1, padding: 20, backgroundColor: '#fff' }}>\n      <Text style={{ fontSize: 18, fontWeight: 'bold', marginBottom: 10 }}>Criar Novo Post</Text>\n\n      <TextInput\n        value={texto}\n        onChangeText={(text) => setTexto(text)}\n        placeholder=\"Escreva algo...\"\n        style={{\n          height: 100,\n          borderColor: '#ccc',\n          borderWidth: 1,\n          borderRadius: 10,\n          padding: 10,\n          textAlignVertical: 'top',\n          marginBottom: 15,\n        }}\n        multiline={true}\n        keyboardType=\"default\"\n      />\n\n      <TouchableOpacity onPress={pickImage} style={{ marginBottom: 15 }}>\n        <Text style={{ color: '#3b5998' }}>Escolher Imagem</Text>\n      </TouchableOpacity>\n\n      {imageUri && (\n        <Image\n          source={{ uri: imageUri }}\n          style={{\n            width: 100,\n            height: 100,\n            borderRadius: 10,\n            marginBottom: 15,\n            alignSelf: 'center',\n          }}\n        />\n      )}\n\n      {uploading && <ActivityIndicator size=\"large\" color=\"#3b5998\" />}\n\n      <TouchableOpacity\n        onPress={createPost}\n        style={{\n          backgroundColor: '#3b5998',\n          padding: 15,\n          borderRadius: 10,\n          alignItems: 'center',\n        }}\n        disabled={uploading}\n      >\n        <Text style={{ color: '#fff', fontWeight: 'bold' }}>\n          {uploading ? 'Criando Post...' : 'Criar Post'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default CreatePost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}