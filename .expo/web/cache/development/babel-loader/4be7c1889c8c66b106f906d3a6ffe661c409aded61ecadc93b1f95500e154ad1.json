{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richard.5935\\\\Downloads\\\\Yzon\\\\Telas\\\\Logon\\\\Logon.js\",\n  _this = this;\nimport React, { useEffect } from \"react\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AuthProvider, useAuth } from \"./src/contexts/AuthContext\";\nimport GuestStack from \"./src/navigation/GuestStack\";\nimport AppStack from \"./src/navigation/AppStack\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLogBox.ignoreLogs([\"Warning: ...\"]);\nLogBox.ignoreAllLogs();\nvar AppContent = function AppContent() {\n  useEffect(function () {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      var backAction = function backAction() {\n        console.log(\"Botão de voltar pressionado\");\n        return true;\n      };\n      var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n      return function () {\n        return backHandler.remove();\n      };\n    }\n  }, []);\n  var _useAuth = useAuth(),\n    loggedInUser = _useAuth.loggedInUser;\n  return _jsxDEV(NavigationContainer, {\n    children: loggedInUser ? _jsxDEV(AppStack, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, _this) : _jsxDEV(GuestStack, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\nexport default function Logon() {\n  return _jsxDEV(AuthProvider, {\n    children: _jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","LogBox","NavigationContainer","AuthProvider","useAuth","GuestStack","AppStack","BackHandler","Platform","View","Text","jsxDEV","_jsxDEV","ignoreLogs","ignoreAllLogs","AppContent","OS","backAction","console","log","backHandler","addEventListener","remove","_useAuth","loggedInUser","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","Logon"],"sources":["C:/Users/richard.5935/Downloads/Yzon/Telas/Logon/Logon.js"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { LogBox } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { AuthProvider, useAuth } from \"./src/contexts/AuthContext\";\r\nimport GuestStack from \"./src/navigation/GuestStack\";\r\nimport AppStack from \"./src/navigation/AppStack\";\r\nimport { BackHandler, Platform, View, Text } from 'react-native';\r\n\r\nLogBox.ignoreLogs([\"Warning: ...\"]); // Ignore log notification by message\r\nLogBox.ignoreAllLogs(); // Ignore all log notifications\r\n\r\nconst AppContent = () => {\r\n\r\n  useEffect(() => {\r\n    // Verifica se a plataforma é Android ou iOS\r\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n      const backAction = () => {\r\n        console.log(\"Botão de voltar pressionado\");\r\n        return true; // Retorne true para evitar o comportamento padrão\r\n      };\r\n\r\n      // Adiciona o listener do BackHandler\r\n      const backHandler = BackHandler.addEventListener(\r\n        \"hardwareBackPress\",\r\n        backAction\r\n      );\r\n\r\n      // Remove o listener quando o componente desmonta\r\n      return () => backHandler.remove();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const { loggedInUser } = useAuth();\r\n  \r\n  return (\r\n    <NavigationContainer>\r\n      {loggedInUser ? <AppStack /> : <GuestStack />}\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default function Logon() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppContent />\r\n    </AuthProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAC,OAAAC,MAAA;AAEvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,YAAY,EAAEC,OAAO,QAAQ,4BAA4B;AAClE,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,QAAQ,MAAM,2BAA2B;AAAC,OAAAC,WAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjDX,MAAM,CAACY,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;AACnCZ,MAAM,CAACa,aAAa,CAAC,CAAC;AAEtB,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAEvBf,SAAS,CAAC,YAAM;IAEd,IAAIQ,QAAQ,CAACQ,EAAE,KAAK,SAAS,IAAIR,QAAQ,CAACQ,EAAE,KAAK,KAAK,EAAE;MACtD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;QACvBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,OAAO,IAAI;MACb,CAAC;MAGD,IAAMC,WAAW,GAAGb,WAAW,CAACc,gBAAgB,CAC9C,mBAAmB,EACnBJ,UACF,CAAC;MAGD,OAAO;QAAA,OAAMG,WAAW,CAACE,MAAM,CAAC,CAAC;MAAA;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,IAAAC,QAAA,GAAyBnB,OAAO,CAAC,CAAC;IAA1BoB,YAAY,GAAAD,QAAA,CAAZC,YAAY;EAEpB,OACEZ,OAAA,CAACV,mBAAmB;IAAAuB,QAAA,EACjBD,YAAY,GAAGZ,OAAA,CAACN,QAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,GAAGlB,OAAA,CAACP,UAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAC1B,CAAC;AAE1B,CAAC;AAED,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,OACEnB,OAAA,CAACT,YAAY;IAAAsB,QAAA,EACXb,OAAA,CAACG,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}