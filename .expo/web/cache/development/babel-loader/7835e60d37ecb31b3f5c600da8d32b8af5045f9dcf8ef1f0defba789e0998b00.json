{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\richard.5935\\\\Downloads\\\\Yzon\\\\Telas\\\\Perfil.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firestore from '@react-native-firebase/firestore';\nimport EditPerfil from './EditPerfil';\nimport PostList from './PostList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editing = _useState4[0],\n    setEditing = _useState4[1];\n  useEffect(function () {\n    var fetchUserProfile = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var userId = 'user_id';\n        var userDoc = yield firestore().collection('users').doc(userId).get();\n        setUser(_objectSpread({\n          id: userId\n        }, userDoc.data()));\n      });\n      return function fetchUserProfile() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchUserProfile();\n  }, []);\n  var handleEditToggle = function handleEditToggle() {\n    setEditing(!editing);\n  };\n  if (editing) {\n    return _jsxDEV(EditPerfil, {\n      user: user,\n      onToggle: handleEditToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, _this);\n  }\n  return _jsxDEV(View, {\n    style: {\n      padding: 20\n    },\n    children: user ? _jsxDEV(_Fragment, {\n      children: [_jsxDEV(Text, {\n        children: [\"Nome: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, _this), _jsxDEV(Text, {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, _this), _jsxDEV(Button, {\n        title: \"Editar Perfil\",\n        onPress: handleEditToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, _this), _jsxDEV(PostList, {\n        userId: user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true) : _jsxDEV(Text, {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","firestore","EditPerfil","PostList","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileScreen","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","editing","setEditing","fetchUserProfile","_ref","_asyncToGenerator","userId","userDoc","collection","doc","get","_objectSpread","id","data","apply","arguments","handleEditToggle","onToggle","fileName","_jsxFileName","lineNumber","columnNumber","_this","style","padding","children","name","email","title","onPress"],"sources":["C:/Users/richard.5935/Downloads/Yzon/Telas/Perfil.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport firestore from '@react-native-firebase/firestore';\r\nimport EditPerfil from './EditPerfil';\r\nimport PostList from './PostList';\r\n\r\nconst ProfileScreen = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [editing, setEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchUserProfile = async () => {\r\n            const userId = 'user_id'; // Substitua pelo ID do usuÃ¡rio\r\n            const userDoc = await firestore().collection('users').doc(userId).get();\r\n            setUser({ id: userId, ...userDoc.data() });\r\n        };\r\n\r\n        fetchUserProfile();\r\n    }, []);\r\n\r\n    const handleEditToggle = () => {\r\n        setEditing(!editing);\r\n    };\r\n\r\n    if (editing) {\r\n        return <EditPerfil user={user} onToggle={handleEditToggle} />;\r\n    }\r\n\r\n    return (\r\n        <View style={{ padding: 20 }}>\r\n            {user ? (\r\n                <>\r\n                    <Text>Nome: {user.name}</Text>\r\n                    <Text>Email: {user.email}</Text>\r\n                    <Button title=\"Editar Perfil\" onPress={handleEditToggle} />\r\n                    <PostList userId={user.id} />\r\n                </>\r\n            ) : (\r\n                <Text>Carregando...</Text>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}