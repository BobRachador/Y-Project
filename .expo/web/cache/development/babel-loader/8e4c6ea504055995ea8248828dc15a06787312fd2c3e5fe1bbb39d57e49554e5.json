{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _PLATFORM_LOG_STRING, _ERRORS;\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, isBrowser, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PlatformLoggerServiceImpl = function () {\n  function PlatformLoggerServiceImpl(container) {\n    _classCallCheck(this, PlatformLoggerServiceImpl);\n    this.container = container;\n  }\n  return _createClass(PlatformLoggerServiceImpl, [{\n    key: \"getPlatformInfoString\",\n    value: function getPlatformInfoString() {\n      var providers = this.container.getProviders();\n      return providers.map(function (provider) {\n        if (isVersionServiceProvider(provider)) {\n          var service = provider.getImmediate();\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      }).filter(function (logString) {\n        return logString;\n      }).join(' ');\n    }\n  }]);\n}();\nfunction isVersionServiceProvider(provider) {\n  var component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\";\n}\nvar name$p = \"@firebase/app\";\nvar version$1 = \"0.10.5\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar logger = new Logger('@firebase/app');\nvar name$o = \"@firebase/app-compat\";\nvar name$n = \"@firebase/analytics-compat\";\nvar name$m = \"@firebase/analytics\";\nvar name$l = \"@firebase/app-check-compat\";\nvar name$k = \"@firebase/app-check\";\nvar name$j = \"@firebase/auth\";\nvar name$i = \"@firebase/auth-compat\";\nvar name$h = \"@firebase/database\";\nvar name$g = \"@firebase/database-compat\";\nvar name$f = \"@firebase/functions\";\nvar name$e = \"@firebase/functions-compat\";\nvar name$d = \"@firebase/installations\";\nvar name$c = \"@firebase/installations-compat\";\nvar name$b = \"@firebase/messaging\";\nvar name$a = \"@firebase/messaging-compat\";\nvar name$9 = \"@firebase/performance\";\nvar name$8 = \"@firebase/performance-compat\";\nvar name$7 = \"@firebase/remote-config\";\nvar name$6 = \"@firebase/remote-config-compat\";\nvar name$5 = \"@firebase/storage\";\nvar name$4 = \"@firebase/storage-compat\";\nvar name$3 = \"@firebase/firestore\";\nvar name$2 = \"@firebase/vertexai-preview\";\nvar name$1 = \"@firebase/firestore-compat\";\nvar name = \"firebase\";\nvar version = \"10.12.2\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\nvar PLATFORM_LOG_STRING = (_PLATFORM_LOG_STRING = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_PLATFORM_LOG_STRING, name$p, 'fire-core'), name$o, 'fire-core-compat'), name$m, 'fire-analytics'), name$n, 'fire-analytics-compat'), name$k, 'fire-app-check'), name$l, 'fire-app-check-compat'), name$j, 'fire-auth'), name$i, 'fire-auth-compat'), name$h, 'fire-rtdb'), name$g, 'fire-rtdb-compat'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_PLATFORM_LOG_STRING, name$f, 'fire-fn'), name$e, 'fire-fn-compat'), name$d, 'fire-iid'), name$c, 'fire-iid-compat'), name$b, 'fire-fcm'), name$a, 'fire-fcm-compat'), name$9, 'fire-perf'), name$8, 'fire-perf-compat'), name$7, 'fire-rc'), name$6, 'fire-rc-compat'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_PLATFORM_LOG_STRING, name$5, 'fire-gcs'), name$4, 'fire-gcs-compat'), name$3, 'fire-fst'), name$1, 'fire-fst-compat'), name$2, 'fire-vertex'), 'fire-js', 'fire-js'), name, 'fire-js-all'));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _apps = new Map();\nvar _serverApps = new Map();\nvar _components = new Map();\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n  }\n}\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\nfunction _registerComponent(component) {\n  var componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(`There were multiple attempts to register component ${componentName}.`);\n    return false;\n  }\n  _components.set(componentName, component);\n  for (var app of _apps.values()) {\n    _addComponent(app, component);\n  }\n  for (var serverApp of _serverApps.values()) {\n    _addComponent(serverApp, component);\n  }\n  return true;\n}\nfunction _getProvider(app, name) {\n  var heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n    optional: true\n  });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return app.container.getProvider(name);\n}\nfunction _removeServiceInstance(app, name) {\n  var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ENTRY_NAME;\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\nfunction _isFirebaseApp(obj) {\n  return obj.options !== undefined;\n}\nfunction _isFirebaseServerApp(obj) {\n  return obj.settings !== undefined;\n}\nfunction _clearComponents() {\n  _components.clear();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ERRORS = (_ERRORS = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ERRORS, \"no-app\", \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first'), \"bad-app-name\", \"Illegal App name: '{$appName}'\"), \"duplicate-app\", \"Firebase App named '{$appName}' already exists with different options or config\"), \"app-deleted\", \"Firebase App named '{$appName}' already deleted\"), \"server-app-deleted\", 'Firebase Server App has been deleted'), \"no-options\", 'Need to provide options, when not being deployed to hosting via source.'), \"invalid-app-argument\", 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'), \"invalid-log-argument\", 'First argument to `onLog` must be null or a function.'), \"idb-open\", 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.'), \"idb-get\", 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_ERRORS, \"idb-set\", 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.'), \"idb-delete\", 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'), \"finalization-registry-not-supported\", 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.'), \"invalid-server-app-environment\", 'FirebaseServerApp is not for use in browser environments.'));\nvar ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FirebaseAppImpl = function () {\n  function FirebaseAppImpl(options, config, container) {\n    var _this = this;\n    _classCallCheck(this, FirebaseAppImpl);\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new Component('app', function () {\n      return _this;\n    }, \"PUBLIC\"));\n  }\n  return _createClass(FirebaseAppImpl, [{\n    key: \"automaticDataCollectionEnabled\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._automaticDataCollectionEnabled;\n    },\n    set: function set(val) {\n      this.checkDestroyed();\n      this._automaticDataCollectionEnabled = val;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._name;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._options;\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._config;\n    }\n  }, {\n    key: \"container\",\n    get: function get() {\n      return this._container;\n    }\n  }, {\n    key: \"isDeleted\",\n    get: function get() {\n      return this._isDeleted;\n    },\n    set: function set(val) {\n      this._isDeleted = val;\n    }\n  }, {\n    key: \"checkDestroyed\",\n    value: function checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"app-deleted\", {\n          appName: this._name\n        });\n      }\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FirebaseServerAppImpl = function (_FirebaseAppImpl) {\n  function FirebaseServerAppImpl(options, serverConfig, name, container) {\n    var _this2;\n    _classCallCheck(this, FirebaseServerAppImpl);\n    var automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : false;\n    var config = {\n      name: name,\n      automaticDataCollectionEnabled: automaticDataCollectionEnabled\n    };\n    if (options.apiKey !== undefined) {\n      _this2 = _callSuper(this, FirebaseServerAppImpl, [options, config, container]);\n    } else {\n      var appImpl = options;\n      _this2 = _callSuper(this, FirebaseServerAppImpl, [appImpl.options, config, container]);\n    }\n    _this2._serverConfig = Object.assign({\n      automaticDataCollectionEnabled: automaticDataCollectionEnabled\n    }, serverConfig);\n    _this2._finalizationRegistry = new FinalizationRegistry(function () {\n      _this2.automaticCleanup();\n    });\n    _this2._refCount = 0;\n    _this2.incRefCount(_this2._serverConfig.releaseOnDeref);\n    _this2._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n    registerVersion(name$p, version$1, 'serverapp');\n    return _assertThisInitialized(_this2);\n  }\n  _inherits(FirebaseServerAppImpl, _FirebaseAppImpl);\n  return _createClass(FirebaseServerAppImpl, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return undefined;\n    }\n  }, {\n    key: \"refCount\",\n    get: function get() {\n      return this._refCount;\n    }\n  }, {\n    key: \"incRefCount\",\n    value: function incRefCount(obj) {\n      if (this.isDeleted) {\n        return;\n      }\n      this._refCount++;\n      if (obj !== undefined) {\n        this._finalizationRegistry.register(obj, this);\n      }\n    }\n  }, {\n    key: \"decRefCount\",\n    value: function decRefCount() {\n      if (this.isDeleted) {\n        return 0;\n      }\n      return --this._refCount;\n    }\n  }, {\n    key: \"automaticCleanup\",\n    value: function automaticCleanup() {\n      void deleteApp(this);\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._serverConfig;\n    }\n  }, {\n    key: \"checkDestroyed\",\n    value: function checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"server-app-deleted\");\n      }\n    }\n  }]);\n}(FirebaseAppImpl);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SDK_VERSION = version;\nfunction initializeApp(_options) {\n  var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = _options;\n  if (typeof rawConfig !== 'object') {\n    var _name = rawConfig;\n    rawConfig = {\n      name: _name\n    };\n  }\n  var config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  var name = config.name;\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\", {\n      appName: String(name)\n    });\n  }\n  options || (options = getDefaultAppConfig());\n  if (!options) {\n    throw ERROR_FACTORY.create(\"no-options\");\n  }\n  var existingApp = _apps.get(name);\n  if (existingApp) {\n    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\", {\n        appName: name\n      });\n    }\n  }\n  var container = new ComponentContainer(name);\n  for (var component of _components.values()) {\n    container.addComponent(component);\n  }\n  var newApp = new FirebaseAppImpl(options, config, container);\n  _apps.set(name, newApp);\n  return newApp;\n}\nfunction initializeServerApp(_options, _serverAppConfig) {\n  if (isBrowser()) {\n    throw ERROR_FACTORY.create(\"invalid-server-app-environment\");\n  }\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n  var appOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n  var nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n  var hashCode = function hashCode(s) {\n    return _toConsumableArray(s).reduce(function (hash, c) {\n      return Math.imul(31, hash) + c.charCodeAt(0) | 0;\n    }, 0);\n  };\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\"finalization-registry-not-supported\", {});\n    }\n  }\n  var nameString = '' + hashCode(JSON.stringify(nameObj));\n  var existingApp = _serverApps.get(nameString);\n  if (existingApp) {\n    existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\n    return existingApp;\n  }\n  var container = new ComponentContainer(nameString);\n  for (var component of _components.values()) {\n    container.addComponent(component);\n  }\n  var newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\n  _serverApps.set(nameString, newApp);\n  return newApp;\n}\nfunction getApp() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n  var app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\", {\n      appName: name\n    });\n  }\n  return app;\n}\nfunction getApps() {\n  return Array.from(_apps.values());\n}\nfunction deleteApp(_x) {\n  return _deleteApp.apply(this, arguments);\n}\nfunction _deleteApp() {\n  _deleteApp = _asyncToGenerator(function* (app) {\n    var cleanupProviders = false;\n    var name = app.name;\n    if (_apps.has(name)) {\n      cleanupProviders = true;\n      _apps.delete(name);\n    } else if (_serverApps.has(name)) {\n      var firebaseServerApp = app;\n      if (firebaseServerApp.decRefCount() <= 0) {\n        _serverApps.delete(name);\n        cleanupProviders = true;\n      }\n    }\n    if (cleanupProviders) {\n      yield Promise.all(app.container.getProviders().map(function (provider) {\n        return provider.delete();\n      }));\n      app.isDeleted = true;\n    }\n  });\n  return _deleteApp.apply(this, arguments);\n}\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a;\n  var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  var libraryMismatch = library.match(/\\s|\\//);\n  var versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    var warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n    if (libraryMismatch) {\n      warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(new Component(`${library}-version`, function () {\n    return {\n      library: library,\n      version: version\n    };\n  }, \"VERSION\"));\n}\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\");\n  }\n  setUserLogHandler(logCallback, options);\n}\nfunction setLogLevel(logLevel) {\n  setLogLevel$1(logLevel);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DB_NAME = 'firebase-heartbeat-database';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'firebase-heartbeat-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DB_NAME, DB_VERSION, {\n      upgrade: function upgrade(db, oldVersion) {\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(function (e) {\n      throw ERROR_FACTORY.create(\"idb-open\", {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\nfunction readHeartbeatsFromIndexedDB(_x2) {\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction _readHeartbeatsFromIndexedDB() {\n  _readHeartbeatsFromIndexedDB = _asyncToGenerator(function* (app) {\n    try {\n      var db = yield getDbPromise();\n      var tx = db.transaction(STORE_NAME);\n      var result = yield tx.objectStore(STORE_NAME).get(computeKey(app));\n      yield tx.done;\n      return result;\n    } catch (e) {\n      if (e instanceof FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        var idbGetError = ERROR_FACTORY.create(\"idb-get\", {\n          originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  });\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction writeHeartbeatsToIndexedDB(_x3, _x4) {\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction _writeHeartbeatsToIndexedDB() {\n  _writeHeartbeatsToIndexedDB = _asyncToGenerator(function* (app, heartbeatObject) {\n    try {\n      var db = yield getDbPromise();\n      var tx = db.transaction(STORE_NAME, 'readwrite');\n      var objectStore = tx.objectStore(STORE_NAME);\n      yield objectStore.put(heartbeatObject, computeKey(app));\n      yield tx.done;\n    } catch (e) {\n      if (e instanceof FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        var idbGetError = ERROR_FACTORY.create(\"idb-set\", {\n          originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  });\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction computeKey(app) {\n  return `${app.name}!${app.options.appId}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_HEADER_BYTES = 1024;\nvar STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\nvar HeartbeatServiceImpl = function () {\n  function HeartbeatServiceImpl(container) {\n    var _this3 = this;\n    _classCallCheck(this, HeartbeatServiceImpl);\n    this.container = container;\n    this._heartbeatsCache = null;\n    var app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(function (result) {\n      _this3._heartbeatsCache = result;\n      return result;\n    });\n  }\n  return _createClass(HeartbeatServiceImpl, [{\n    key: \"triggerHeartbeat\",\n    value: (function () {\n      var _triggerHeartbeat = _asyncToGenerator(function* () {\n        var _a, _b;\n        var platformLogger = this.container.getProvider('platform-logger').getImmediate();\n        var agent = platformLogger.getPlatformInfoString();\n        var date = getUTCDateString();\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\n          this._heartbeatsCache = yield this._heartbeatsCachePromise;\n          if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\n            return;\n          }\n        }\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(function (singleDateHeartbeat) {\n          return singleDateHeartbeat.date === date;\n        })) {\n          return;\n        } else {\n          this._heartbeatsCache.heartbeats.push({\n            date: date,\n            agent: agent\n          });\n        }\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(function (singleDateHeartbeat) {\n          var hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n          var now = Date.now();\n          return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n        });\n        return this._storage.overwrite(this._heartbeatsCache);\n      });\n      function triggerHeartbeat() {\n        return _triggerHeartbeat.apply(this, arguments);\n      }\n      return triggerHeartbeat;\n    }())\n  }, {\n    key: \"getHeartbeatsHeader\",\n    value: (function () {\n      var _getHeartbeatsHeader = _asyncToGenerator(function* () {\n        var _a;\n        if (this._heartbeatsCache === null) {\n          yield this._heartbeatsCachePromise;\n        }\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null || this._heartbeatsCache.heartbeats.length === 0) {\n          return '';\n        }\n        var date = getUTCDateString();\n        var _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats),\n          heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend,\n          unsentEntries = _extractHeartbeatsFor.unsentEntries;\n        var headerString = base64urlEncodeWithoutPadding(JSON.stringify({\n          version: 2,\n          heartbeats: heartbeatsToSend\n        }));\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\n        if (unsentEntries.length > 0) {\n          this._heartbeatsCache.heartbeats = unsentEntries;\n          yield this._storage.overwrite(this._heartbeatsCache);\n        } else {\n          this._heartbeatsCache.heartbeats = [];\n          void this._storage.overwrite(this._heartbeatsCache);\n        }\n        return headerString;\n      });\n      function getHeartbeatsHeader() {\n        return _getHeartbeatsHeader.apply(this, arguments);\n      }\n      return getHeartbeatsHeader;\n    }())\n  }]);\n}();\nfunction getUTCDateString() {\n  var today = new Date();\n  return today.toISOString().substring(0, 10);\n}\nfunction extractHeartbeatsForHeader(heartbeatsCache) {\n  var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;\n  var heartbeatsToSend = [];\n  var unsentEntries = heartbeatsCache.slice();\n  var _loop = function _loop(singleDateHeartbeat) {\n      var heartbeatEntry = heartbeatsToSend.find(function (hb) {\n        return hb.agent === singleDateHeartbeat.agent;\n      });\n      if (!heartbeatEntry) {\n        heartbeatsToSend.push({\n          agent: singleDateHeartbeat.agent,\n          dates: [singleDateHeartbeat.date]\n        });\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          heartbeatsToSend.pop();\n          return 0;\n        }\n      } else {\n        heartbeatEntry.dates.push(singleDateHeartbeat.date);\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          heartbeatEntry.dates.pop();\n          return 0;\n        }\n      }\n      unsentEntries = unsentEntries.slice(1);\n    },\n    _ret;\n  for (var singleDateHeartbeat of heartbeatsCache) {\n    _ret = _loop(singleDateHeartbeat);\n    if (_ret === 0) break;\n  }\n  return {\n    heartbeatsToSend: heartbeatsToSend,\n    unsentEntries: unsentEntries\n  };\n}\nvar HeartbeatStorageImpl = function () {\n  function HeartbeatStorageImpl(app) {\n    _classCallCheck(this, HeartbeatStorageImpl);\n    this.app = app;\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  return _createClass(HeartbeatStorageImpl, [{\n    key: \"runIndexedDBEnvironmentCheck\",\n    value: function () {\n      var _runIndexedDBEnvironmentCheck = _asyncToGenerator(function* () {\n        if (!isIndexedDBAvailable()) {\n          return false;\n        } else {\n          return validateIndexedDBOpenable().then(function () {\n            return true;\n          }).catch(function () {\n            return false;\n          });\n        }\n      });\n      function runIndexedDBEnvironmentCheck() {\n        return _runIndexedDBEnvironmentCheck.apply(this, arguments);\n      }\n      return runIndexedDBEnvironmentCheck;\n    }()\n  }, {\n    key: \"read\",\n    value: (function () {\n      var _read = _asyncToGenerator(function* () {\n        var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) {\n          return {\n            heartbeats: []\n          };\n        } else {\n          var idbHeartbeatObject = yield readHeartbeatsFromIndexedDB(this.app);\n          if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\n            return idbHeartbeatObject;\n          } else {\n            return {\n              heartbeats: []\n            };\n          }\n        }\n      });\n      function read() {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }())\n  }, {\n    key: \"overwrite\",\n    value: function () {\n      var _overwrite = _asyncToGenerator(function* (heartbeatsObject) {\n        var _a;\n        var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) {\n          return;\n        } else {\n          var existingHeartbeatsObject = yield this.read();\n          return writeHeartbeatsToIndexedDB(this.app, {\n            lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n            heartbeats: heartbeatsObject.heartbeats\n          });\n        }\n      });\n      function overwrite(_x5) {\n        return _overwrite.apply(this, arguments);\n      }\n      return overwrite;\n    }()\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator(function* (heartbeatsObject) {\n        var _a;\n        var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) {\n          return;\n        } else {\n          var existingHeartbeatsObject = yield this.read();\n          return writeHeartbeatsToIndexedDB(this.app, {\n            lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n            heartbeats: [].concat(_toConsumableArray(existingHeartbeatsObject.heartbeats), _toConsumableArray(heartbeatsObject.heartbeats))\n          });\n        }\n      });\n      function add(_x6) {\n        return _add.apply(this, arguments);\n      }\n      return add;\n    }()\n  }]);\n}();\nfunction countBytes(heartbeatsCache) {\n  return base64urlEncodeWithoutPadding(JSON.stringify({\n    version: 2,\n    heartbeats: heartbeatsCache\n  })).length;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerCoreComponents(variant) {\n  _registerComponent(new Component('platform-logger', function (container) {\n    return new PlatformLoggerServiceImpl(container);\n  }, \"PRIVATE\"));\n  _registerComponent(new Component('heartbeat', function (container) {\n    return new HeartbeatServiceImpl(container);\n  }, \"PRIVATE\"));\n  registerVersion(name$p, version$1, variant);\n  registerVersion(name$p, version$1, 'esm2017');\n  registerVersion('fire-js', '');\n}\nregisterCoreComponents('');\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _isFirebaseApp, _isFirebaseServerApp, _registerComponent, _removeServiceInstance, _serverApps, deleteApp, getApp, getApps, initializeApp, initializeServerApp, onLog, registerVersion, setLogLevel };","map":{"version":3,"names":["PlatformLoggerServiceImpl","container","_classCallCheck","_createClass","key","value","getPlatformInfoString","providers","getProviders","map","provider","isVersionServiceProvider","service","getImmediate","library","version","filter","logString","join","component","getComponent","type","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","_defineProperty","name$p","name$o","name$m","name$n","name$k","name$l","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","name","_apps","Map","_serverApps","_components","_addComponent","app","addComponent","e","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","values","serverApp","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","arguments","length","undefined","clearInstance","_isFirebaseApp","obj","options","_isFirebaseServerApp","settings","_clearComponents","clear","ERRORS","_ERRORS","ERROR_FACTORY","ErrorFactory","FirebaseAppImpl","config","_this","_isDeleted","_options","Object","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","get","checkDestroyed","val","isDeleted","create","appName","FirebaseServerAppImpl","_FirebaseAppImpl","serverConfig","_this2","apiKey","_callSuper","appImpl","_serverConfig","_finalizationRegistry","FinalizationRegistry","automaticCleanup","_refCount","incRefCount","releaseOnDeref","registerVersion","version$1","_assertThisInitialized","_inherits","toJSON","register","decRefCount","deleteApp","SDK_VERSION","initializeApp","rawConfig","String","getDefaultAppConfig","existingApp","deepEqual","ComponentContainer","newApp","initializeServerApp","_serverAppConfig","isBrowser","appOptions","nameObj","hashCode","s","_toConsumableArray","reduce","hash","c","Math","imul","charCodeAt","nameString","JSON","stringify","getApp","getApps","Array","from","_x","_deleteApp","apply","_asyncToGenerator","cleanupProviders","delete","firebaseServerApp","Promise","all","libraryKeyOrName","variant","_a","libraryMismatch","match","versionMismatch","warning","push","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevel$1","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","console","catch","originalErrorMessage","message","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","tx","transaction","result","objectStore","computeKey","done","FirebaseError","idbGetError","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_this3","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","then","_triggerHeartbeat","platformLogger","agent","date","getUTCDateString","heartbeats","_b","lastSentHeartbeatDate","some","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","_getHeartbeatsHeader","_extractHeartbeatsFor","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","base64urlEncodeWithoutPadding","getHeartbeatsHeader","today","toISOString","substring","heartbeatsCache","maxSize","slice","_loop","heartbeatEntry","find","hb","dates","countBytes","pop","_ret","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","isIndexedDBAvailable","validateIndexedDBOpenable","_read","canUseIndexedDB","idbHeartbeatObject","_overwrite","heartbeatsObject","existingHeartbeatsObject","_x5","_add","concat","add","_x6","registerCoreComponents"],"sources":["C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\platformLoggerService.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\logger.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\constants.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\internal.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\errors.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\firebaseApp.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\firebaseServerApp.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\api.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\indexeddb.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\heartbeatService.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\registerCoreComponents.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\app\\src\\index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object>;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    this._finalizationRegistry = new FinalizationRegistry(() => {\n      this.automaticCleanup();\n    });\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegisry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig, isBrowser } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}