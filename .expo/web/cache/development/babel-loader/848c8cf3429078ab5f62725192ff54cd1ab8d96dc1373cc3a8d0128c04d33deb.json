{"ast":null,"code":"import _get3 from \"@babel/runtime/helpers/get\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _SERVER_ERROR_MAP;\nfunction _superPropGet(t, e, o, r) { var p = _get3(_getPrototypeOf(1 & r ? t.prototype : t), e, o); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(o, t); } : p; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { SDK_VERSION, _isFirebaseServerApp, _getProvider, _registerComponent, registerVersion, getApp } from '@firebase/app';\nimport { ErrorFactory, isBrowserExtension, isMobileCordova, isReactNative, FirebaseError, querystring, getModularInstance, base64Decode, getUA, isIE, createSubscribe, deepEqual, querystringDecode, extractQuerystring, isEmpty, getExperimentalSetting, getDefaultEmulatorHost } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { __rest } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FactorId = {\n  PHONE: 'phone',\n  TOTP: 'totp'\n};\nvar ProviderId = {\n  FACEBOOK: 'facebook.com',\n  GITHUB: 'github.com',\n  GOOGLE: 'google.com',\n  PASSWORD: 'password',\n  PHONE: 'phone',\n  TWITTER: 'twitter.com'\n};\nvar SignInMethod = {\n  EMAIL_LINK: 'emailLink',\n  EMAIL_PASSWORD: 'password',\n  FACEBOOK: 'facebook.com',\n  GITHUB: 'github.com',\n  GOOGLE: 'google.com',\n  PHONE: 'phone',\n  TWITTER: 'twitter.com'\n};\nvar OperationType = {\n  LINK: 'link',\n  REAUTHENTICATE: 'reauthenticate',\n  SIGN_IN: 'signIn'\n};\nvar ActionCodeOperation = {\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  RECOVER_EMAIL: 'RECOVER_EMAIL',\n  REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\n  VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _debugErrorMap() {\n  var _ref;\n  return _ref = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"admin-restricted-operation\", 'This operation is restricted to administrators only.'), \"argument-error\", ''), \"app-not-authorized\", \"This app, identified by the domain where it's hosted, is not \" + 'authorized to use Firebase Authentication with the provided API key. ' + 'Review your key configuration in the Google API console.'), \"app-not-installed\", 'The requested mobile application corresponding to the identifier (' + 'Android package name or iOS bundle ID) provided is not installed on ' + 'this device.'), \"captcha-check-failed\", 'The reCAPTCHA response token provided is either invalid, expired, ' + 'already used or the domain associated with it does not match the list ' + 'of whitelisted domains.'), \"code-expired\", 'The SMS code has expired. Please re-send the verification code to try ' + 'again.'), \"cordova-not-ready\", 'Cordova framework is not ready.'), \"cors-unsupported\", 'This browser is not supported.'), \"credential-already-in-use\", 'This credential is already associated with a different user account.'), \"custom-token-mismatch\", 'The custom token corresponds to a different audience.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"requires-recent-login\", 'This operation is sensitive and requires recent authentication. Log in ' + 'again before retrying this request.'), \"dependent-sdk-initialized-before-auth\", 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' + 'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' + 'starting any other Firebase SDK.'), \"dynamic-link-not-activated\", 'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' + 'conditions.'), \"email-change-needs-verification\", 'Multi-factor users must always have a verified email.'), \"email-already-in-use\", 'The email address is already in use by another account.'), \"emulator-config-failed\", 'Auth instance has already been used to make a network call. Auth can ' + 'no longer be configured to use the emulator. Try calling ' + '\"connectAuthEmulator()\" sooner.'), \"expired-action-code\", 'The action code has expired.'), \"cancelled-popup-request\", 'This operation has been cancelled due to another conflicting popup being opened.'), \"internal-error\", 'An internal AuthError has occurred.'), \"invalid-app-credential\", 'The phone verification request contains an invalid application verifier.' + ' The reCAPTCHA token response is either invalid or expired.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"invalid-app-id\", 'The mobile app identifier is not registed for the current project.'), \"invalid-user-token\", \"This user's credential isn't valid for this project. This can happen \" + \"if the user's token has been tampered with, or if the user isn't for \" + 'the project associated with this API key.'), \"invalid-auth-event\", 'An internal AuthError has occurred.'), \"invalid-verification-code\", 'The SMS verification code used to create the phone auth credential is ' + 'invalid. Please resend the verification code sms and be sure to use the ' + 'verification code provided by the user.'), \"invalid-continue-uri\", 'The continue URL provided in the request is invalid.'), \"invalid-cordova-configuration\", 'The following Cordova plugins must be installed to enable OAuth sign-in: ' + 'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' + 'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' + 'cordova-plugin-customurlscheme.'), \"invalid-custom-token\", 'The custom token format is incorrect. Please check the documentation.'), \"invalid-dynamic-link-domain\", 'The provided dynamic link domain is not configured or authorized for the current project.'), \"invalid-email\", 'The email address is badly formatted.'), \"invalid-emulator-scheme\", 'Emulator URL must start with a valid scheme (http:// or https://).'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"invalid-api-key\", 'Your API key is invalid, please check you have copied it correctly.'), \"invalid-cert-hash\", 'The SHA-1 certificate hash provided is invalid.'), \"invalid-credential\", 'The supplied auth credential is incorrect, malformed or has expired.'), \"invalid-message-payload\", 'The email template corresponding to this action contains invalid characters in its message. ' + 'Please fix by going to the Auth email templates section in the Firebase Console.'), \"invalid-multi-factor-session\", 'The request does not contain a valid proof of first factor successful sign-in.'), \"invalid-oauth-provider\", 'EmailAuthProvider is not supported for this operation. This operation ' + 'only supports OAuth providers.'), \"invalid-oauth-client-id\", 'The OAuth client ID provided is either invalid or does not match the ' + 'specified API key.'), \"unauthorized-domain\", 'This domain is not authorized for OAuth operations for your Firebase ' + 'project. Edit the list of authorized domains from the Firebase console.'), \"invalid-action-code\", 'The action code is invalid. This can happen if the code is malformed, ' + 'expired, or has already been used.'), \"wrong-password\", 'The password is invalid or the user does not have a password.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"invalid-persistence-type\", 'The specified persistence type is invalid. It can only be local, session or none.'), \"invalid-phone-number\", 'The format of the phone number provided is incorrect. Please enter the ' + 'phone number in a format that can be parsed into E.164 format. E.164 ' + 'phone numbers are written in the format [+][country code][subscriber ' + 'number including area code].'), \"invalid-provider-id\", 'The specified provider ID is invalid.'), \"invalid-recipient-email\", 'The email corresponding to this action failed to send as the provided ' + 'recipient email address is invalid.'), \"invalid-sender\", 'The email template corresponding to this action contains an invalid sender email or name. ' + 'Please fix by going to the Auth email templates section in the Firebase Console.'), \"invalid-verification-id\", 'The verification ID used to create the phone auth credential is invalid.'), \"invalid-tenant-id\", \"The Auth instance's tenant ID is invalid.\"), \"login-blocked\", 'Login blocked by user-provided method: {$originalMessage}'), \"missing-android-pkg-name\", 'An Android Package Name must be provided if the Android App is required to be installed.'), \"auth-domain-config-required\", 'Be sure to include authDomain when calling firebase.initializeApp(), ' + 'by following the instructions in the Firebase console.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"missing-app-credential\", 'The phone verification request is missing an application verifier ' + 'assertion. A reCAPTCHA response token needs to be provided.'), \"missing-verification-code\", 'The phone auth credential was created with an empty SMS verification code.'), \"missing-continue-uri\", 'A continue URL must be provided in the request.'), \"missing-iframe-start\", 'An internal AuthError has occurred.'), \"missing-ios-bundle-id\", 'An iOS Bundle ID must be provided if an App Store ID is provided.'), \"missing-or-invalid-nonce\", 'The request does not contain a valid nonce. This can occur if the ' + 'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' + 'in the ID token payload.'), \"missing-password\", 'A non-empty password must be provided'), \"missing-multi-factor-info\", 'No second factor identifier is provided.'), \"missing-multi-factor-session\", 'The request is missing proof of first factor successful sign-in.'), \"missing-phone-number\", 'To send verification codes, provide a phone number for the recipient.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"missing-verification-id\", 'The phone auth credential was created with an empty verification ID.'), \"app-deleted\", 'This instance of FirebaseApp has been deleted.'), \"multi-factor-info-not-found\", 'The user does not have a second factor matching the identifier provided.'), \"multi-factor-auth-required\", 'Proof of ownership of a second factor is required to complete sign-in.'), \"account-exists-with-different-credential\", 'An account already exists with the same email address but different ' + 'sign-in credentials. Sign in using a provider associated with this ' + 'email address.'), \"network-request-failed\", 'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.'), \"no-auth-event\", 'An internal AuthError has occurred.'), \"no-such-provider\", 'User was not linked to an account with the given provider.'), \"null-user\", 'A null user object was provided as the argument for an operation which ' + 'requires a non-null user object.'), \"operation-not-allowed\", 'The given sign-in provider is disabled for this Firebase project. ' + 'Enable it in the Firebase console, under the sign-in method tab of the ' + 'Auth section.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"operation-not-supported-in-this-environment\", 'This operation is not supported in the environment this application is ' + 'running on. \"location.protocol\" must be http, https or chrome-extension' + ' and web storage must be enabled.'), \"popup-blocked\", 'Unable to establish a connection with the popup. It may have been blocked by the browser.'), \"popup-closed-by-user\", 'The popup has been closed by the user before finalizing the operation.'), \"provider-already-linked\", 'User can only be linked to one identity for the given provider.'), \"quota-exceeded\", \"The project's quota for this operation has been exceeded.\"), \"redirect-cancelled-by-user\", 'The redirect operation has been cancelled by the user before finalizing.'), \"redirect-operation-pending\", 'A redirect sign-in operation is already pending.'), \"rejected-credential\", 'The request contains malformed or mismatching credentials.'), \"second-factor-already-in-use\", 'The second factor is already enrolled on this account.'), \"maximum-second-factor-count-exceeded\", 'The maximum allowed number of second factors on a user has been exceeded.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"tenant-id-mismatch\", \"The provided tenant ID does not match the Auth instance's tenant ID\"), \"timeout\", 'The operation has timed out.'), \"user-token-expired\", \"The user's credential is no longer valid. The user must sign in again.\"), \"too-many-requests\", 'We have blocked all requests from this device due to unusual activity. ' + 'Try again later.'), \"unauthorized-continue-uri\", 'The domain of the continue URL is not whitelisted.  Please whitelist ' + 'the domain in the Firebase console.'), \"unsupported-first-factor\", 'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.'), \"unsupported-persistence-type\", 'The current environment does not support the specified persistence type.'), \"unsupported-tenant-operation\", 'This operation is not supported in a multi-tenant context.'), \"unverified-email\", 'The operation requires a verified email.'), \"user-cancelled\", 'The user did not grant your application the permissions it requested.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"user-not-found\", 'There is no user record corresponding to this identifier. The user may ' + 'have been deleted.'), \"user-disabled\", 'The user account has been disabled by an administrator.'), \"user-mismatch\", 'The supplied credentials do not correspond to the previously signed in user.'), \"user-signed-out\", ''), \"weak-password\", 'The password must be 6 characters long or more.'), \"web-storage-unsupported\", 'This browser is not supported or 3rd party cookies and data may be disabled.'), \"already-initialized\", 'initializeAuth() has already been called with ' + 'different options. To avoid this error, call initializeAuth() with the ' + 'same options as when it was originally called, or call getAuth() to return the' + ' already initialized instance.'), \"missing-recaptcha-token\", 'The reCAPTCHA token is missing when sending request to the backend.'), \"invalid-recaptcha-token\", 'The reCAPTCHA token is invalid when sending request to the backend.'), \"invalid-recaptcha-action\", 'The reCAPTCHA action is invalid when sending request to the backend.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"recaptcha-not-enabled\", 'reCAPTCHA Enterprise integration is not enabled for this project.'), \"missing-client-type\", 'The reCAPTCHA client type is missing when sending request to the backend.'), \"missing-recaptcha-version\", 'The reCAPTCHA version is missing when sending request to the backend.'), \"invalid-req-type\", 'Invalid request parameters.'), \"invalid-recaptcha-version\", 'The reCAPTCHA version is invalid when sending request to the backend.'), \"unsupported-password-policy-schema-version\", 'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.'), \"password-does-not-meet-requirements\", 'The password does not meet the requirements.');\n}\nfunction _prodErrorMap() {\n  return _defineProperty({}, \"dependent-sdk-initialized-before-auth\", 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' + 'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' + 'starting any other Firebase SDK.');\n}\nvar debugErrorMap = _debugErrorMap;\nvar prodErrorMap = _prodErrorMap;\nvar _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory('auth', 'Firebase', _prodErrorMap());\nvar AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized',\n  RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n  MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n  INVALID_REQ_TYPE: 'auth/invalid-req-type'\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar logClient = new Logger('@firebase/auth');\nfunction _logWarn(msg) {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    logClient.warn.apply(logClient, [`Auth (${SDK_VERSION}): ${msg}`].concat(args));\n  }\n}\nfunction _logError(msg) {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key3 = 1; _key3 < _len2; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    logClient.error.apply(logClient, [`Auth (${SDK_VERSION}): ${msg}`].concat(args));\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _fail(authOrCode) {\n  for (var _len3 = arguments.length, rest = new Array(_len3 > 1 ? _len3 - 1 : 0), _key4 = 1; _key4 < _len3; _key4++) {\n    rest[_key4 - 1] = arguments[_key4];\n  }\n  throw createErrorInternal.apply(void 0, [authOrCode].concat(rest));\n}\nfunction _createError(authOrCode) {\n  for (var _len4 = arguments.length, rest = new Array(_len4 > 1 ? _len4 - 1 : 0), _key5 = 1; _key5 < _len4; _key5++) {\n    rest[_key5 - 1] = arguments[_key5];\n  }\n  return createErrorInternal.apply(void 0, [authOrCode].concat(rest));\n}\nfunction _errorWithCustomMessage(auth, code, message) {\n  var errorMap = Object.assign(Object.assign({}, prodErrorMap()), _defineProperty({}, code, message));\n  var factory = new ErrorFactory('auth', 'Firebase', errorMap);\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\nfunction _serverAppCurrentUserOperationNotSupportedError(auth) {\n  return _errorWithCustomMessage(auth, \"operation-not-supported-in-this-environment\", 'Operations that alter the current user are not supported in conjunction with FirebaseServerApp');\n}\nfunction _assertInstanceOf(auth, object, instance) {\n  var constructorInstance = instance;\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, \"argument-error\");\n    }\n    throw _errorWithCustomMessage(auth, \"argument-error\", `Type of ${object.constructor.name} does not match expected instance.` + `Did you pass a reference from a different Auth SDK?`);\n  }\n}\nfunction createErrorInternal(authOrCode) {\n  for (var _len5 = arguments.length, rest = new Array(_len5 > 1 ? _len5 - 1 : 0), _key6 = 1; _key6 < _len5; _key6++) {\n    rest[_key6 - 1] = arguments[_key6];\n  }\n  if (typeof authOrCode !== 'string') {\n    var _authOrCode$_errorFac;\n    var code = rest[0];\n    var fullParams = _toConsumableArray(rest.slice(1));\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n    return (_authOrCode$_errorFac = authOrCode._errorFactory).create.apply(_authOrCode$_errorFac, [code].concat(_toConsumableArray(fullParams)));\n  }\n  return _DEFAULT_AUTH_ERROR_FACTORY.create.apply(_DEFAULT_AUTH_ERROR_FACTORY, [authOrCode].concat(rest));\n}\nfunction _assert(assertion, authOrCode) {\n  if (!assertion) {\n    for (var _len6 = arguments.length, rest = new Array(_len6 > 2 ? _len6 - 2 : 0), _key7 = 2; _key7 < _len6; _key7++) {\n      rest[_key7 - 2] = arguments[_key7];\n    }\n    throw createErrorInternal.apply(void 0, [authOrCode].concat(rest));\n  }\n}\nfunction debugFail(failure) {\n  var message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n  throw new Error(message);\n}\nfunction debugAssert(assertion, message) {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getCurrentUrl() {\n  var _a;\n  return typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n}\nfunction _isHttpOrHttps() {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\nfunction _getCurrentScheme() {\n  var _a;\n  return typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _isOnline() {\n  if (typeof navigator !== 'undefined' && navigator && 'onLine' in navigator && typeof navigator.onLine === 'boolean' && (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)) {\n    return navigator.onLine;\n  }\n  return true;\n}\nfunction _getUserLanguage() {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  var navigatorLanguage = navigator;\n  return navigatorLanguage.languages && navigatorLanguage.languages[0] || navigatorLanguage.language || null;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Delay = function () {\n  function Delay(shortDelay, longDelay) {\n    _classCallCheck(this, Delay);\n    this.shortDelay = shortDelay;\n    this.longDelay = longDelay;\n    debugAssert(longDelay > shortDelay, 'Short delay should be less than long delay!');\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n  return _createClass(Delay, [{\n    key: \"get\",\n    value: function get() {\n      if (!_isOnline()) {\n        return Math.min(5000, this.shortDelay);\n      }\n      return this.isMobile ? this.longDelay : this.shortDelay;\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _emulatorUrl(config, path) {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  var url = config.emulator.url;\n  if (!path) {\n    return url;\n  }\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FetchProvider = function () {\n  function FetchProvider() {\n    _classCallCheck(this, FetchProvider);\n  }\n  return _createClass(FetchProvider, null, [{\n    key: \"initialize\",\n    value: function initialize(fetchImpl, headersImpl, responseImpl) {\n      this.fetchImpl = fetchImpl;\n      if (headersImpl) {\n        this.headersImpl = headersImpl;\n      }\n      if (responseImpl) {\n        this.responseImpl = responseImpl;\n      }\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n      return fetch;\n    }(function () {\n      if (this.fetchImpl) {\n        return this.fetchImpl;\n      }\n      if (typeof self !== 'undefined' && 'fetch' in self) {\n        return self.fetch;\n      }\n      if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n        return globalThis.fetch;\n      }\n      if (typeof fetch !== 'undefined') {\n        return fetch;\n      }\n      debugFail('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    })\n  }, {\n    key: \"headers\",\n    value: function headers() {\n      if (this.headersImpl) {\n        return this.headersImpl;\n      }\n      if (typeof self !== 'undefined' && 'Headers' in self) {\n        return self.Headers;\n      }\n      if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n        return globalThis.Headers;\n      }\n      if (typeof Headers !== 'undefined') {\n        return Headers;\n      }\n      debugFail('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    }\n  }, {\n    key: \"response\",\n    value: function response() {\n      if (this.responseImpl) {\n        return this.responseImpl;\n      }\n      if (typeof self !== 'undefined' && 'Response' in self) {\n        return self.Response;\n      }\n      if (typeof globalThis !== 'undefined' && globalThis.Response) {\n        return globalThis.Response;\n      }\n      if (typeof Response !== 'undefined') {\n        return Response;\n      }\n      debugFail('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SERVER_ERROR_MAP = (_SERVER_ERROR_MAP = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_SERVER_ERROR_MAP, \"CREDENTIAL_MISMATCH\", \"custom-token-mismatch\"), \"MISSING_CUSTOM_TOKEN\", \"internal-error\"), \"INVALID_IDENTIFIER\", \"invalid-email\"), \"MISSING_CONTINUE_URI\", \"internal-error\"), \"INVALID_PASSWORD\", \"wrong-password\"), \"MISSING_PASSWORD\", \"missing-password\"), \"INVALID_LOGIN_CREDENTIALS\", \"invalid-credential\"), \"EMAIL_EXISTS\", \"email-already-in-use\"), \"PASSWORD_LOGIN_DISABLED\", \"operation-not-allowed\"), \"INVALID_IDP_RESPONSE\", \"invalid-credential\"), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_SERVER_ERROR_MAP, \"INVALID_PENDING_TOKEN\", \"invalid-credential\"), \"FEDERATED_USER_ID_ALREADY_LINKED\", \"credential-already-in-use\"), \"MISSING_REQ_TYPE\", \"internal-error\"), \"EMAIL_NOT_FOUND\", \"user-not-found\"), \"RESET_PASSWORD_EXCEED_LIMIT\", \"too-many-requests\"), \"EXPIRED_OOB_CODE\", \"expired-action-code\"), \"INVALID_OOB_CODE\", \"invalid-action-code\"), \"MISSING_OOB_CODE\", \"internal-error\"), \"CREDENTIAL_TOO_OLD_LOGIN_AGAIN\", \"requires-recent-login\"), \"INVALID_ID_TOKEN\", \"invalid-user-token\"), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_SERVER_ERROR_MAP, \"TOKEN_EXPIRED\", \"user-token-expired\"), \"USER_NOT_FOUND\", \"user-token-expired\"), \"TOO_MANY_ATTEMPTS_TRY_LATER\", \"too-many-requests\"), \"PASSWORD_DOES_NOT_MEET_REQUIREMENTS\", \"password-does-not-meet-requirements\"), \"INVALID_CODE\", \"invalid-verification-code\"), \"INVALID_SESSION_INFO\", \"invalid-verification-id\"), \"INVALID_TEMPORARY_PROOF\", \"invalid-credential\"), \"MISSING_SESSION_INFO\", \"missing-verification-id\"), \"SESSION_EXPIRED\", \"code-expired\"), \"MISSING_ANDROID_PACKAGE_NAME\", \"missing-android-pkg-name\"), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_SERVER_ERROR_MAP, \"UNAUTHORIZED_DOMAIN\", \"unauthorized-continue-uri\"), \"INVALID_OAUTH_CLIENT_ID\", \"invalid-oauth-client-id\"), \"ADMIN_ONLY_OPERATION\", \"admin-restricted-operation\"), \"INVALID_MFA_PENDING_CREDENTIAL\", \"invalid-multi-factor-session\"), \"MFA_ENROLLMENT_NOT_FOUND\", \"multi-factor-info-not-found\"), \"MISSING_MFA_ENROLLMENT_ID\", \"missing-multi-factor-info\"), \"MISSING_MFA_PENDING_CREDENTIAL\", \"missing-multi-factor-session\"), \"SECOND_FACTOR_EXISTS\", \"second-factor-already-in-use\"), \"SECOND_FACTOR_LIMIT_EXCEEDED\", \"maximum-second-factor-count-exceeded\"), \"BLOCKING_FUNCTION_ERROR_RESPONSE\", \"internal-error\"), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_SERVER_ERROR_MAP, \"RECAPTCHA_NOT_ENABLED\", \"recaptcha-not-enabled\"), \"MISSING_RECAPTCHA_TOKEN\", \"missing-recaptcha-token\"), \"INVALID_RECAPTCHA_TOKEN\", \"invalid-recaptcha-token\"), \"INVALID_RECAPTCHA_ACTION\", \"invalid-recaptcha-action\"), \"MISSING_CLIENT_TYPE\", \"missing-client-type\"), \"MISSING_RECAPTCHA_VERSION\", \"missing-recaptcha-version\"), \"INVALID_RECAPTCHA_VERSION\", \"invalid-recaptcha-version\"), \"INVALID_REQ_TYPE\", \"invalid-req-type\"));\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_API_TIMEOUT_MS = new Delay(30000, 60000);\nfunction _addTidIfNecessary(auth, request) {\n  if (auth.tenantId && !request.tenantId) {\n    return Object.assign(Object.assign({}, request), {\n      tenantId: auth.tenantId\n    });\n  }\n  return request;\n}\nfunction _performApiRequest(_x, _x2, _x3, _x4) {\n  return _performApiRequest2.apply(this, arguments);\n}\nfunction _performApiRequest2() {\n  _performApiRequest2 = _asyncToGenerator(function* (auth, method, path, request) {\n    var customErrorMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    return _performFetchWithErrorHandling(auth, customErrorMap, _asyncToGenerator(function* () {\n      var body = {};\n      var params = {};\n      if (request) {\n        if (method === \"GET\") {\n          params = request;\n        } else {\n          body = {\n            body: JSON.stringify(request)\n          };\n        }\n      }\n      var query = querystring(Object.assign({\n        key: auth.config.apiKey\n      }, params)).slice(1);\n      var headers = yield auth._getAdditionalHeaders();\n      headers[\"Content-Type\"] = 'application/json';\n      if (auth.languageCode) {\n        headers[\"X-Firebase-Locale\"] = auth.languageCode;\n      }\n      return FetchProvider.fetch()(_getFinalTarget(auth, auth.config.apiHost, path, query), Object.assign({\n        method: method,\n        headers: headers,\n        referrerPolicy: 'no-referrer'\n      }, body));\n    }));\n  });\n  return _performApiRequest2.apply(this, arguments);\n}\nfunction _performFetchWithErrorHandling(_x5, _x6, _x7) {\n  return _performFetchWithErrorHandling2.apply(this, arguments);\n}\nfunction _performFetchWithErrorHandling2() {\n  _performFetchWithErrorHandling2 = _asyncToGenerator(function* (auth, customErrorMap, fetchFn) {\n    auth._canInitEmulator = false;\n    var errorMap = Object.assign(Object.assign({}, SERVER_ERROR_MAP), customErrorMap);\n    try {\n      var networkTimeout = new NetworkTimeout(auth);\n      var response = yield Promise.race([fetchFn(), networkTimeout.promise]);\n      networkTimeout.clearNetworkTimeout();\n      var json = yield response.json();\n      if ('needConfirmation' in json) {\n        throw _makeTaggedError(auth, \"account-exists-with-different-credential\", json);\n      }\n      if (response.ok && !('errorMessage' in json)) {\n        return json;\n      } else {\n        var errorMessage = response.ok ? json.errorMessage : json.error.message;\n        var _errorMessage$split = errorMessage.split(' : '),\n          _errorMessage$split2 = _slicedToArray(_errorMessage$split, 2),\n          serverErrorCode = _errorMessage$split2[0],\n          serverErrorMessage = _errorMessage$split2[1];\n        if (serverErrorCode === \"FEDERATED_USER_ID_ALREADY_LINKED\") {\n          throw _makeTaggedError(auth, \"credential-already-in-use\", json);\n        } else if (serverErrorCode === \"EMAIL_EXISTS\") {\n          throw _makeTaggedError(auth, \"email-already-in-use\", json);\n        } else if (serverErrorCode === \"USER_DISABLED\") {\n          throw _makeTaggedError(auth, \"user-disabled\", json);\n        }\n        var authError = errorMap[serverErrorCode] || serverErrorCode.toLowerCase().replace(/[_\\s]+/g, '-');\n        if (serverErrorMessage) {\n          throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n        } else {\n          _fail(auth, authError);\n        }\n      }\n    } catch (e) {\n      if (e instanceof FirebaseError) {\n        throw e;\n      }\n      _fail(auth, \"network-request-failed\", {\n        'message': String(e)\n      });\n    }\n  });\n  return _performFetchWithErrorHandling2.apply(this, arguments);\n}\nfunction _performSignInRequest(_x8, _x9, _x10, _x11) {\n  return _performSignInRequest2.apply(this, arguments);\n}\nfunction _performSignInRequest2() {\n  _performSignInRequest2 = _asyncToGenerator(function* (auth, method, path, request) {\n    var customErrorMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var serverResponse = yield _performApiRequest(auth, method, path, request, customErrorMap);\n    if ('mfaPendingCredential' in serverResponse) {\n      _fail(auth, \"multi-factor-auth-required\", {\n        _serverResponse: serverResponse\n      });\n    }\n    return serverResponse;\n  });\n  return _performSignInRequest2.apply(this, arguments);\n}\nfunction _getFinalTarget(auth, host, path, query) {\n  var base = `${host}${path}?${query}`;\n  if (!auth.config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n  return _emulatorUrl(auth.config, base);\n}\nfunction _parseEnforcementState(enforcementStateStr) {\n  switch (enforcementStateStr) {\n    case 'ENFORCE':\n      return \"ENFORCE\";\n    case 'AUDIT':\n      return \"AUDIT\";\n    case 'OFF':\n      return \"OFF\";\n    default:\n      return \"ENFORCEMENT_STATE_UNSPECIFIED\";\n  }\n}\nvar NetworkTimeout = function () {\n  function NetworkTimeout(auth) {\n    var _this = this;\n    _classCallCheck(this, NetworkTimeout);\n    this.auth = auth;\n    this.timer = null;\n    this.promise = new Promise(function (_, reject) {\n      _this.timer = setTimeout(function () {\n        return reject(_createError(_this.auth, \"network-request-failed\"));\n      }, DEFAULT_API_TIMEOUT_MS.get());\n    });\n  }\n  return _createClass(NetworkTimeout, [{\n    key: \"clearNetworkTimeout\",\n    value: function clearNetworkTimeout() {\n      clearTimeout(this.timer);\n    }\n  }]);\n}();\nfunction _makeTaggedError(auth, code, response) {\n  var errorParams = {\n    appName: auth.name\n  };\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n  var error = _createError(auth, code, errorParams);\n  error.customData._tokenResponse = response;\n  return error;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isV2(grecaptcha) {\n  return grecaptcha !== undefined && grecaptcha.getResponse !== undefined;\n}\nfunction isEnterprise(grecaptcha) {\n  return grecaptcha !== undefined && grecaptcha.enterprise !== undefined;\n}\nvar RecaptchaConfig = function () {\n  function RecaptchaConfig(response) {\n    _classCallCheck(this, RecaptchaConfig);\n    this.siteKey = '';\n    this.recaptchaEnforcementState = [];\n    if (response.recaptchaKey === undefined) {\n      throw new Error('recaptchaKey undefined');\n    }\n    this.siteKey = response.recaptchaKey.split('/')[3];\n    this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n  }\n  return _createClass(RecaptchaConfig, [{\n    key: \"getProviderEnforcementState\",\n    value: function getProviderEnforcementState(providerStr) {\n      if (!this.recaptchaEnforcementState || this.recaptchaEnforcementState.length === 0) {\n        return null;\n      }\n      for (var recaptchaEnforcementState of this.recaptchaEnforcementState) {\n        if (recaptchaEnforcementState.provider && recaptchaEnforcementState.provider === providerStr) {\n          return _parseEnforcementState(recaptchaEnforcementState.enforcementState);\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"isProviderEnabled\",\n    value: function isProviderEnabled(providerStr) {\n      return this.getProviderEnforcementState(providerStr) === \"ENFORCE\" || this.getProviderEnforcementState(providerStr) === \"AUDIT\";\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getRecaptchaParams(_x12) {\n  return _getRecaptchaParams.apply(this, arguments);\n}\nfunction _getRecaptchaParams() {\n  _getRecaptchaParams = _asyncToGenerator(function* (auth) {\n    return (yield _performApiRequest(auth, \"GET\", \"/v1/recaptchaParams\")).recaptchaSiteKey || '';\n  });\n  return _getRecaptchaParams.apply(this, arguments);\n}\nfunction getRecaptchaConfig(_x13, _x14) {\n  return _getRecaptchaConfig.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getRecaptchaConfig() {\n  _getRecaptchaConfig = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"GET\", \"/v2/recaptchaConfig\", _addTidIfNecessary(auth, request));\n  });\n  return _getRecaptchaConfig.apply(this, arguments);\n}\nfunction deleteAccount(_x15, _x16) {\n  return _deleteAccount.apply(this, arguments);\n}\nfunction _deleteAccount() {\n  _deleteAccount = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:delete\", request);\n  });\n  return _deleteAccount.apply(this, arguments);\n}\nfunction deleteLinkedAccounts(_x17, _x18) {\n  return _deleteLinkedAccounts.apply(this, arguments);\n}\nfunction _deleteLinkedAccounts() {\n  _deleteLinkedAccounts = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:update\", request);\n  });\n  return _deleteLinkedAccounts.apply(this, arguments);\n}\nfunction getAccountInfo(_x19, _x20) {\n  return _getAccountInfo.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getAccountInfo() {\n  _getAccountInfo = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:lookup\", request);\n  });\n  return _getAccountInfo.apply(this, arguments);\n}\nfunction utcTimestampToDateString(utcTimestamp) {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    var date = new Date(Number(utcTimestamp));\n    if (!isNaN(date.getTime())) {\n      return date.toUTCString();\n    }\n  } catch (e) {}\n  return undefined;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getIdToken(user) {\n  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\nfunction _getIdTokenResult2(_x21) {\n  return _getIdTokenResult.apply(this, arguments);\n}\nfunction _getIdTokenResult() {\n  _getIdTokenResult = _asyncToGenerator(function* (user) {\n    var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var userInternal = getModularInstance(user);\n    var token = yield userInternal.getIdToken(forceRefresh);\n    var claims = _parseToken(token);\n    _assert(claims && claims.exp && claims.auth_time && claims.iat, userInternal.auth, \"internal-error\");\n    var firebase = typeof claims.firebase === 'object' ? claims.firebase : undefined;\n    var signInProvider = firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_provider'];\n    return {\n      claims: claims,\n      token: token,\n      authTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.auth_time)),\n      issuedAtTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.iat)),\n      expirationTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.exp)),\n      signInProvider: signInProvider || null,\n      signInSecondFactor: (firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_second_factor']) || null\n    };\n  });\n  return _getIdTokenResult.apply(this, arguments);\n}\nfunction secondsStringToMilliseconds(seconds) {\n  return Number(seconds) * 1000;\n}\nfunction _parseToken(token) {\n  var _token$split = token.split('.'),\n    _token$split2 = _slicedToArray(_token$split, 3),\n    algorithm = _token$split2[0],\n    payload = _token$split2[1],\n    signature = _token$split2[2];\n  if (algorithm === undefined || payload === undefined || signature === undefined) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n  try {\n    var decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError('Caught error parsing JWT payload as JSON', e === null || e === void 0 ? void 0 : e.toString());\n    return null;\n  }\n}\nfunction _tokenExpiresIn(token) {\n  var parsedToken = _parseToken(token);\n  _assert(parsedToken, \"internal-error\");\n  _assert(typeof parsedToken.exp !== 'undefined', \"internal-error\");\n  _assert(typeof parsedToken.iat !== 'undefined', \"internal-error\");\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _logoutIfInvalidated(_x22, _x23) {\n  return _logoutIfInvalidated2.apply(this, arguments);\n}\nfunction _logoutIfInvalidated2() {\n  _logoutIfInvalidated2 = _asyncToGenerator(function* (user, promise) {\n    var bypassAuthState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (bypassAuthState) {\n      return promise;\n    }\n    try {\n      return yield promise;\n    } catch (e) {\n      if (e instanceof FirebaseError && isUserInvalidated(e)) {\n        if (user.auth.currentUser === user) {\n          yield user.auth.signOut();\n        }\n      }\n      throw e;\n    }\n  });\n  return _logoutIfInvalidated2.apply(this, arguments);\n}\nfunction isUserInvalidated(_ref3) {\n  var code = _ref3.code;\n  return code === `auth/${\"user-disabled\"}` || code === `auth/${\"user-token-expired\"}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ProactiveRefresh = function () {\n  function ProactiveRefresh(user) {\n    _classCallCheck(this, ProactiveRefresh);\n    this.user = user;\n    this.isRunning = false;\n    this.timerId = null;\n    this.errorBackoff = 30000;\n  }\n  return _createClass(ProactiveRefresh, [{\n    key: \"_start\",\n    value: function _start() {\n      if (this.isRunning) {\n        return;\n      }\n      this.isRunning = true;\n      this.schedule();\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      if (!this.isRunning) {\n        return;\n      }\n      this.isRunning = false;\n      if (this.timerId !== null) {\n        clearTimeout(this.timerId);\n      }\n    }\n  }, {\n    key: \"getInterval\",\n    value: function getInterval(wasError) {\n      var _a;\n      if (wasError) {\n        var interval = this.errorBackoff;\n        this.errorBackoff = Math.min(this.errorBackoff * 2, 960000);\n        return interval;\n      } else {\n        this.errorBackoff = 30000;\n        var expTime = (_a = this.user.stsTokenManager.expirationTime) !== null && _a !== void 0 ? _a : 0;\n        var _interval = expTime - Date.now() - 300000;\n        return Math.max(0, _interval);\n      }\n    }\n  }, {\n    key: \"schedule\",\n    value: function schedule() {\n      var _this2 = this;\n      var wasError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.isRunning) {\n        return;\n      }\n      var interval = this.getInterval(wasError);\n      this.timerId = setTimeout(_asyncToGenerator(function* () {\n        yield _this2.iteration();\n      }), interval);\n    }\n  }, {\n    key: \"iteration\",\n    value: function () {\n      var _iteration = _asyncToGenerator(function* () {\n        try {\n          yield this.user.getIdToken(true);\n        } catch (e) {\n          if ((e === null || e === void 0 ? void 0 : e.code) === `auth/${\"network-request-failed\"}`) {\n            this.schedule(true);\n          }\n          return;\n        }\n        this.schedule();\n      });\n      function iteration() {\n        return _iteration.apply(this, arguments);\n      }\n      return iteration;\n    }()\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar UserMetadata = function () {\n  function UserMetadata(createdAt, lastLoginAt) {\n    _classCallCheck(this, UserMetadata);\n    this.createdAt = createdAt;\n    this.lastLoginAt = lastLoginAt;\n    this._initializeTime();\n  }\n  return _createClass(UserMetadata, [{\n    key: \"_initializeTime\",\n    value: function _initializeTime() {\n      this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n      this.creationTime = utcTimestampToDateString(this.createdAt);\n    }\n  }, {\n    key: \"_copy\",\n    value: function _copy(metadata) {\n      this.createdAt = metadata.createdAt;\n      this.lastLoginAt = metadata.lastLoginAt;\n      this._initializeTime();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        createdAt: this.createdAt,\n        lastLoginAt: this.lastLoginAt\n      };\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _reloadWithoutSaving(_x24) {\n  return _reloadWithoutSaving2.apply(this, arguments);\n}\nfunction _reloadWithoutSaving2() {\n  _reloadWithoutSaving2 = _asyncToGenerator(function* (user) {\n    var _a;\n    var auth = user.auth;\n    var idToken = yield user.getIdToken();\n    var response = yield _logoutIfInvalidated(user, getAccountInfo(auth, {\n      idToken: idToken\n    }));\n    _assert(response === null || response === void 0 ? void 0 : response.users.length, auth, \"internal-error\");\n    var coreAccount = response.users[0];\n    user._notifyReloadListener(coreAccount);\n    var newProviderData = ((_a = coreAccount.providerUserInfo) === null || _a === void 0 ? void 0 : _a.length) ? extractProviderData(coreAccount.providerUserInfo) : [];\n    var providerData = mergeProviderData(user.providerData, newProviderData);\n    var oldIsAnonymous = user.isAnonymous;\n    var newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\n    var isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n    var updates = {\n      uid: coreAccount.localId,\n      displayName: coreAccount.displayName || null,\n      photoURL: coreAccount.photoUrl || null,\n      email: coreAccount.email || null,\n      emailVerified: coreAccount.emailVerified || false,\n      phoneNumber: coreAccount.phoneNumber || null,\n      tenantId: coreAccount.tenantId || null,\n      providerData: providerData,\n      metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n      isAnonymous: isAnonymous\n    };\n    Object.assign(user, updates);\n  });\n  return _reloadWithoutSaving2.apply(this, arguments);\n}\nfunction _reload2(_x25) {\n  return _reload.apply(this, arguments);\n}\nfunction _reload() {\n  _reload = _asyncToGenerator(function* (user) {\n    var userInternal = getModularInstance(user);\n    yield _reloadWithoutSaving(userInternal);\n    yield userInternal.auth._persistUserIfCurrent(userInternal);\n    userInternal.auth._notifyListenersIfCurrent(userInternal);\n  });\n  return _reload.apply(this, arguments);\n}\nfunction mergeProviderData(original, newData) {\n  var deduped = original.filter(function (o) {\n    return !newData.some(function (n) {\n      return n.providerId === o.providerId;\n    });\n  });\n  return [].concat(_toConsumableArray(deduped), _toConsumableArray(newData));\n}\nfunction extractProviderData(providers) {\n  return providers.map(function (_a) {\n    var providerId = _a.providerId,\n      provider = __rest(_a, [\"providerId\"]);\n    return {\n      providerId: providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction requestStsToken(_x26, _x27) {\n  return _requestStsToken.apply(this, arguments);\n}\nfunction _requestStsToken() {\n  _requestStsToken = _asyncToGenerator(function* (auth, refreshToken) {\n    var response = yield _performFetchWithErrorHandling(auth, {}, _asyncToGenerator(function* () {\n      var body = querystring({\n        'grant_type': 'refresh_token',\n        'refresh_token': refreshToken\n      }).slice(1);\n      var _auth$config = auth.config,\n        tokenApiHost = _auth$config.tokenApiHost,\n        apiKey = _auth$config.apiKey;\n      var url = _getFinalTarget(auth, tokenApiHost, \"/v1/token\", `key=${apiKey}`);\n      var headers = yield auth._getAdditionalHeaders();\n      headers[\"Content-Type\"] = 'application/x-www-form-urlencoded';\n      return FetchProvider.fetch()(url, {\n        method: \"POST\",\n        headers: headers,\n        body: body\n      });\n    }));\n    return {\n      accessToken: response.access_token,\n      expiresIn: response.expires_in,\n      refreshToken: response.refresh_token\n    };\n  });\n  return _requestStsToken.apply(this, arguments);\n}\nfunction revokeToken(_x28, _x29) {\n  return _revokeToken.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _revokeToken() {\n  _revokeToken = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v2/accounts:revokeToken\", _addTidIfNecessary(auth, request));\n  });\n  return _revokeToken.apply(this, arguments);\n}\nvar StsTokenManager = function () {\n  function StsTokenManager() {\n    _classCallCheck(this, StsTokenManager);\n    this.refreshToken = null;\n    this.accessToken = null;\n    this.expirationTime = null;\n  }\n  return _createClass(StsTokenManager, [{\n    key: \"isExpired\",\n    get: function get() {\n      return !this.expirationTime || Date.now() > this.expirationTime - 30000;\n    }\n  }, {\n    key: \"updateFromServerResponse\",\n    value: function updateFromServerResponse(response) {\n      _assert(response.idToken, \"internal-error\");\n      _assert(typeof response.idToken !== 'undefined', \"internal-error\");\n      _assert(typeof response.refreshToken !== 'undefined', \"internal-error\");\n      var expiresIn = 'expiresIn' in response && typeof response.expiresIn !== 'undefined' ? Number(response.expiresIn) : _tokenExpiresIn(response.idToken);\n      this.updateTokensAndExpiration(response.idToken, response.refreshToken, expiresIn);\n    }\n  }, {\n    key: \"updateFromIdToken\",\n    value: function updateFromIdToken(idToken) {\n      _assert(idToken.length !== 0, \"internal-error\");\n      var expiresIn = _tokenExpiresIn(idToken);\n      this.updateTokensAndExpiration(idToken, null, expiresIn);\n    }\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator(function* (auth) {\n        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        if (!forceRefresh && this.accessToken && !this.isExpired) {\n          return this.accessToken;\n        }\n        _assert(this.refreshToken, auth, \"user-token-expired\");\n        if (this.refreshToken) {\n          yield this.refresh(auth, this.refreshToken);\n          return this.accessToken;\n        }\n        return null;\n      });\n      function getToken(_x30) {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }, {\n    key: \"clearRefreshToken\",\n    value: function clearRefreshToken() {\n      this.refreshToken = null;\n    }\n  }, {\n    key: \"refresh\",\n    value: function () {\n      var _refresh = _asyncToGenerator(function* (auth, oldToken) {\n        var _yield$requestStsToke = yield requestStsToken(auth, oldToken),\n          accessToken = _yield$requestStsToke.accessToken,\n          refreshToken = _yield$requestStsToke.refreshToken,\n          expiresIn = _yield$requestStsToke.expiresIn;\n        this.updateTokensAndExpiration(accessToken, refreshToken, Number(expiresIn));\n      });\n      function refresh(_x31, _x32) {\n        return _refresh.apply(this, arguments);\n      }\n      return refresh;\n    }()\n  }, {\n    key: \"updateTokensAndExpiration\",\n    value: function updateTokensAndExpiration(accessToken, refreshToken, expiresInSec) {\n      this.refreshToken = refreshToken || null;\n      this.accessToken = accessToken || null;\n      this.expirationTime = Date.now() + expiresInSec * 1000;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        refreshToken: this.refreshToken,\n        accessToken: this.accessToken,\n        expirationTime: this.expirationTime\n      };\n    }\n  }, {\n    key: \"_assign\",\n    value: function _assign(stsTokenManager) {\n      this.accessToken = stsTokenManager.accessToken;\n      this.refreshToken = stsTokenManager.refreshToken;\n      this.expirationTime = stsTokenManager.expirationTime;\n    }\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return Object.assign(new StsTokenManager(), this.toJSON());\n    }\n  }, {\n    key: \"_performRefresh\",\n    value: function _performRefresh() {\n      return debugFail('not implemented');\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(appName, object) {\n      var refreshToken = object.refreshToken,\n        accessToken = object.accessToken,\n        expirationTime = object.expirationTime;\n      var manager = new StsTokenManager();\n      if (refreshToken) {\n        _assert(typeof refreshToken === 'string', \"internal-error\", {\n          appName: appName\n        });\n        manager.refreshToken = refreshToken;\n      }\n      if (accessToken) {\n        _assert(typeof accessToken === 'string', \"internal-error\", {\n          appName: appName\n        });\n        manager.accessToken = accessToken;\n      }\n      if (expirationTime) {\n        _assert(typeof expirationTime === 'number', \"internal-error\", {\n          appName: appName\n        });\n        manager.expirationTime = expirationTime;\n      }\n      return manager;\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction assertStringOrUndefined(assertion, appName) {\n  _assert(typeof assertion === 'string' || typeof assertion === 'undefined', \"internal-error\", {\n    appName: appName\n  });\n}\nvar UserImpl = function () {\n  function UserImpl(_a) {\n    _classCallCheck(this, UserImpl);\n    var uid = _a.uid,\n      auth = _a.auth,\n      stsTokenManager = _a.stsTokenManager,\n      opt = __rest(_a, [\"uid\", \"auth\", \"stsTokenManager\"]);\n    this.providerId = \"firebase\";\n    this.proactiveRefresh = new ProactiveRefresh(this);\n    this.reloadUserInfo = null;\n    this.reloadListener = null;\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? _toConsumableArray(opt.providerData) : [];\n    this.metadata = new UserMetadata(opt.createdAt || undefined, opt.lastLoginAt || undefined);\n  }\n  return _createClass(UserImpl, [{\n    key: \"getIdToken\",\n    value: function () {\n      var _getIdToken = _asyncToGenerator(function* (forceRefresh) {\n        var accessToken = yield _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh));\n        _assert(accessToken, this.auth, \"internal-error\");\n        if (this.accessToken !== accessToken) {\n          this.accessToken = accessToken;\n          yield this.auth._persistUserIfCurrent(this);\n          this.auth._notifyListenersIfCurrent(this);\n        }\n        return accessToken;\n      });\n      function getIdToken(_x33) {\n        return _getIdToken.apply(this, arguments);\n      }\n      return getIdToken;\n    }()\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult(forceRefresh) {\n      return _getIdTokenResult2(this, forceRefresh);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      return _reload2(this);\n    }\n  }, {\n    key: \"_assign\",\n    value: function _assign(user) {\n      if (this === user) {\n        return;\n      }\n      _assert(this.uid === user.uid, this.auth, \"internal-error\");\n      this.displayName = user.displayName;\n      this.photoURL = user.photoURL;\n      this.email = user.email;\n      this.emailVerified = user.emailVerified;\n      this.phoneNumber = user.phoneNumber;\n      this.isAnonymous = user.isAnonymous;\n      this.tenantId = user.tenantId;\n      this.providerData = user.providerData.map(function (userInfo) {\n        return Object.assign({}, userInfo);\n      });\n      this.metadata._copy(user.metadata);\n      this.stsTokenManager._assign(user.stsTokenManager);\n    }\n  }, {\n    key: \"_clone\",\n    value: function _clone(auth) {\n      var newUser = new UserImpl(Object.assign(Object.assign({}, this), {\n        auth: auth,\n        stsTokenManager: this.stsTokenManager._clone()\n      }));\n      newUser.metadata._copy(this.metadata);\n      return newUser;\n    }\n  }, {\n    key: \"_onReload\",\n    value: function _onReload(callback) {\n      _assert(!this.reloadListener, this.auth, \"internal-error\");\n      this.reloadListener = callback;\n      if (this.reloadUserInfo) {\n        this._notifyReloadListener(this.reloadUserInfo);\n        this.reloadUserInfo = null;\n      }\n    }\n  }, {\n    key: \"_notifyReloadListener\",\n    value: function _notifyReloadListener(userInfo) {\n      if (this.reloadListener) {\n        this.reloadListener(userInfo);\n      } else {\n        this.reloadUserInfo = userInfo;\n      }\n    }\n  }, {\n    key: \"_startProactiveRefresh\",\n    value: function _startProactiveRefresh() {\n      this.proactiveRefresh._start();\n    }\n  }, {\n    key: \"_stopProactiveRefresh\",\n    value: function _stopProactiveRefresh() {\n      this.proactiveRefresh._stop();\n    }\n  }, {\n    key: \"_updateTokensIfNecessary\",\n    value: function () {\n      var _updateTokensIfNecessary2 = _asyncToGenerator(function* (response) {\n        var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var tokensRefreshed = false;\n        if (response.idToken && response.idToken !== this.stsTokenManager.accessToken) {\n          this.stsTokenManager.updateFromServerResponse(response);\n          tokensRefreshed = true;\n        }\n        if (reload) {\n          yield _reloadWithoutSaving(this);\n        }\n        yield this.auth._persistUserIfCurrent(this);\n        if (tokensRefreshed) {\n          this.auth._notifyListenersIfCurrent(this);\n        }\n      });\n      function _updateTokensIfNecessary(_x34) {\n        return _updateTokensIfNecessary2.apply(this, arguments);\n      }\n      return _updateTokensIfNecessary;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator(function* () {\n        if (_isFirebaseServerApp(this.auth.app)) {\n          return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this.auth));\n        }\n        var idToken = yield this.getIdToken();\n        yield _logoutIfInvalidated(this, deleteAccount(this.auth, {\n          idToken: idToken\n        }));\n        this.stsTokenManager.clearRefreshToken();\n        return this.auth.signOut();\n      });\n      function _delete() {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign(Object.assign({\n        uid: this.uid,\n        email: this.email || undefined,\n        emailVerified: this.emailVerified,\n        displayName: this.displayName || undefined,\n        isAnonymous: this.isAnonymous,\n        photoURL: this.photoURL || undefined,\n        phoneNumber: this.phoneNumber || undefined,\n        tenantId: this.tenantId || undefined,\n        providerData: this.providerData.map(function (userInfo) {\n          return Object.assign({}, userInfo);\n        }),\n        stsTokenManager: this.stsTokenManager.toJSON(),\n        _redirectEventId: this._redirectEventId\n      }, this.metadata.toJSON()), {\n        apiKey: this.auth.config.apiKey,\n        appName: this.auth.name\n      });\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this.stsTokenManager.refreshToken || '';\n    }\n  }], [{\n    key: \"_fromJSON\",\n    value: function _fromJSON(auth, object) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      var displayName = (_a = object.displayName) !== null && _a !== void 0 ? _a : undefined;\n      var email = (_b = object.email) !== null && _b !== void 0 ? _b : undefined;\n      var phoneNumber = (_c = object.phoneNumber) !== null && _c !== void 0 ? _c : undefined;\n      var photoURL = (_d = object.photoURL) !== null && _d !== void 0 ? _d : undefined;\n      var tenantId = (_e = object.tenantId) !== null && _e !== void 0 ? _e : undefined;\n      var _redirectEventId = (_f = object._redirectEventId) !== null && _f !== void 0 ? _f : undefined;\n      var createdAt = (_g = object.createdAt) !== null && _g !== void 0 ? _g : undefined;\n      var lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== void 0 ? _h : undefined;\n      var uid = object.uid,\n        emailVerified = object.emailVerified,\n        isAnonymous = object.isAnonymous,\n        providerData = object.providerData,\n        plainObjectTokenManager = object.stsTokenManager;\n      _assert(uid && plainObjectTokenManager, auth, \"internal-error\");\n      var stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);\n      _assert(typeof uid === 'string', auth, \"internal-error\");\n      assertStringOrUndefined(displayName, auth.name);\n      assertStringOrUndefined(email, auth.name);\n      _assert(typeof emailVerified === 'boolean', auth, \"internal-error\");\n      _assert(typeof isAnonymous === 'boolean', auth, \"internal-error\");\n      assertStringOrUndefined(phoneNumber, auth.name);\n      assertStringOrUndefined(photoURL, auth.name);\n      assertStringOrUndefined(tenantId, auth.name);\n      assertStringOrUndefined(_redirectEventId, auth.name);\n      assertStringOrUndefined(createdAt, auth.name);\n      assertStringOrUndefined(lastLoginAt, auth.name);\n      var user = new UserImpl({\n        uid: uid,\n        auth: auth,\n        email: email,\n        emailVerified: emailVerified,\n        displayName: displayName,\n        isAnonymous: isAnonymous,\n        photoURL: photoURL,\n        phoneNumber: phoneNumber,\n        tenantId: tenantId,\n        stsTokenManager: stsTokenManager,\n        createdAt: createdAt,\n        lastLoginAt: lastLoginAt\n      });\n      if (providerData && Array.isArray(providerData)) {\n        user.providerData = providerData.map(function (userInfo) {\n          return Object.assign({}, userInfo);\n        });\n      }\n      if (_redirectEventId) {\n        user._redirectEventId = _redirectEventId;\n      }\n      return user;\n    }\n  }, {\n    key: \"_fromIdTokenResponse\",\n    value: (function () {\n      var _fromIdTokenResponse2 = _asyncToGenerator(function* (auth, idTokenResponse) {\n        var isAnonymous = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var stsTokenManager = new StsTokenManager();\n        stsTokenManager.updateFromServerResponse(idTokenResponse);\n        var user = new UserImpl({\n          uid: idTokenResponse.localId,\n          auth: auth,\n          stsTokenManager: stsTokenManager,\n          isAnonymous: isAnonymous\n        });\n        yield _reloadWithoutSaving(user);\n        return user;\n      });\n      function _fromIdTokenResponse(_x35, _x36) {\n        return _fromIdTokenResponse2.apply(this, arguments);\n      }\n      return _fromIdTokenResponse;\n    }())\n  }, {\n    key: \"_fromGetAccountInfoResponse\",\n    value: (function () {\n      var _fromGetAccountInfoResponse2 = _asyncToGenerator(function* (auth, response, idToken) {\n        var coreAccount = response.users[0];\n        _assert(coreAccount.localId !== undefined, \"internal-error\");\n        var providerData = coreAccount.providerUserInfo !== undefined ? extractProviderData(coreAccount.providerUserInfo) : [];\n        var isAnonymous = !(coreAccount.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\n        var stsTokenManager = new StsTokenManager();\n        stsTokenManager.updateFromIdToken(idToken);\n        var user = new UserImpl({\n          uid: coreAccount.localId,\n          auth: auth,\n          stsTokenManager: stsTokenManager,\n          isAnonymous: isAnonymous\n        });\n        var updates = {\n          uid: coreAccount.localId,\n          displayName: coreAccount.displayName || null,\n          photoURL: coreAccount.photoUrl || null,\n          email: coreAccount.email || null,\n          emailVerified: coreAccount.emailVerified || false,\n          phoneNumber: coreAccount.phoneNumber || null,\n          tenantId: coreAccount.tenantId || null,\n          providerData: providerData,\n          metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n          isAnonymous: !(coreAccount.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length)\n        };\n        Object.assign(user, updates);\n        return user;\n      });\n      function _fromGetAccountInfoResponse(_x37, _x38, _x39) {\n        return _fromGetAccountInfoResponse2.apply(this, arguments);\n      }\n      return _fromGetAccountInfoResponse;\n    }())\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar instanceCache = new Map();\nfunction _getInstance(cls) {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  var instance = instanceCache.get(cls);\n  if (instance) {\n    debugAssert(instance instanceof cls, 'Instance stored in cache mismatched with class');\n    return instance;\n  }\n  instance = new cls();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar InMemoryPersistence = function () {\n  function InMemoryPersistence() {\n    _classCallCheck(this, InMemoryPersistence);\n    this.type = \"NONE\";\n    this.storage = {};\n  }\n  return _createClass(InMemoryPersistence, [{\n    key: \"_isAvailable\",\n    value: function () {\n      var _isAvailable2 = _asyncToGenerator(function* () {\n        return true;\n      });\n      function _isAvailable() {\n        return _isAvailable2.apply(this, arguments);\n      }\n      return _isAvailable;\n    }()\n  }, {\n    key: \"_set\",\n    value: function () {\n      var _set2 = _asyncToGenerator(function* (key, value) {\n        this.storage[key] = value;\n      });\n      function _set(_x40, _x41) {\n        return _set2.apply(this, arguments);\n      }\n      return _set;\n    }()\n  }, {\n    key: \"_get\",\n    value: function () {\n      var _get2 = _asyncToGenerator(function* (key) {\n        var value = this.storage[key];\n        return value === undefined ? null : value;\n      });\n      function _get(_x42) {\n        return _get2.apply(this, arguments);\n      }\n      return _get;\n    }()\n  }, {\n    key: \"_remove\",\n    value: function () {\n      var _remove2 = _asyncToGenerator(function* (key) {\n        delete this.storage[key];\n      });\n      function _remove(_x43) {\n        return _remove2.apply(this, arguments);\n      }\n      return _remove;\n    }()\n  }, {\n    key: \"_addListener\",\n    value: function _addListener(_key, _listener) {\n      return;\n    }\n  }, {\n    key: \"_removeListener\",\n    value: function _removeListener(_key, _listener) {\n      return;\n    }\n  }]);\n}();\nInMemoryPersistence.type = 'NONE';\nvar inMemoryPersistence = InMemoryPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _persistenceKeyName(key, apiKey, appName) {\n  return `${\"firebase\"}:${key}:${apiKey}:${appName}`;\n}\nvar PersistenceUserManager = function () {\n  function PersistenceUserManager(persistence, auth, userKey) {\n    _classCallCheck(this, PersistenceUserManager);\n    this.persistence = persistence;\n    this.auth = auth;\n    this.userKey = userKey;\n    var _this$auth = this.auth,\n      config = _this$auth.config,\n      name = _this$auth.name;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\"persistence\", config.apiKey, name);\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n  return _createClass(PersistenceUserManager, [{\n    key: \"setCurrentUser\",\n    value: function setCurrentUser(user) {\n      return this.persistence._set(this.fullUserKey, user.toJSON());\n    }\n  }, {\n    key: \"getCurrentUser\",\n    value: function () {\n      var _getCurrentUser = _asyncToGenerator(function* () {\n        var blob = yield this.persistence._get(this.fullUserKey);\n        return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n      });\n      function getCurrentUser() {\n        return _getCurrentUser.apply(this, arguments);\n      }\n      return getCurrentUser;\n    }()\n  }, {\n    key: \"removeCurrentUser\",\n    value: function removeCurrentUser() {\n      return this.persistence._remove(this.fullUserKey);\n    }\n  }, {\n    key: \"savePersistenceForRedirect\",\n    value: function savePersistenceForRedirect() {\n      return this.persistence._set(this.fullPersistenceKey, this.persistence.type);\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function () {\n      var _setPersistence = _asyncToGenerator(function* (newPersistence) {\n        if (this.persistence === newPersistence) {\n          return;\n        }\n        var currentUser = yield this.getCurrentUser();\n        yield this.removeCurrentUser();\n        this.persistence = newPersistence;\n        if (currentUser) {\n          return this.setCurrentUser(currentUser);\n        }\n      });\n      function setPersistence(_x44) {\n        return _setPersistence.apply(this, arguments);\n      }\n      return setPersistence;\n    }()\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n    }\n  }], [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(function* (auth, persistenceHierarchy) {\n        var userKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"authUser\";\n        if (!persistenceHierarchy.length) {\n          return new PersistenceUserManager(_getInstance(inMemoryPersistence), auth, userKey);\n        }\n        var availablePersistences = (yield Promise.all(persistenceHierarchy.map(function () {\n          var _ref5 = _asyncToGenerator(function* (persistence) {\n            if (yield persistence._isAvailable()) {\n              return persistence;\n            }\n            return undefined;\n          });\n          return function (_x47) {\n            return _ref5.apply(this, arguments);\n          };\n        }()))).filter(function (persistence) {\n          return persistence;\n        });\n        var selectedPersistence = availablePersistences[0] || _getInstance(inMemoryPersistence);\n        var key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n        var userToMigrate = null;\n        for (var persistence of persistenceHierarchy) {\n          try {\n            var blob = yield persistence._get(key);\n            if (blob) {\n              var user = UserImpl._fromJSON(auth, blob);\n              if (persistence !== selectedPersistence) {\n                userToMigrate = user;\n              }\n              selectedPersistence = persistence;\n              break;\n            }\n          } catch (_a) {}\n        }\n        var migrationHierarchy = availablePersistences.filter(function (p) {\n          return p._shouldAllowMigration;\n        });\n        if (!selectedPersistence._shouldAllowMigration || !migrationHierarchy.length) {\n          return new PersistenceUserManager(selectedPersistence, auth, userKey);\n        }\n        selectedPersistence = migrationHierarchy[0];\n        if (userToMigrate) {\n          yield selectedPersistence._set(key, userToMigrate.toJSON());\n        }\n        yield Promise.all(persistenceHierarchy.map(function () {\n          var _ref6 = _asyncToGenerator(function* (persistence) {\n            if (persistence !== selectedPersistence) {\n              try {\n                yield persistence._remove(key);\n              } catch (_a) {}\n            }\n          });\n          return function (_x48) {\n            return _ref6.apply(this, arguments);\n          };\n        }()));\n        return new PersistenceUserManager(selectedPersistence, auth, userKey);\n      });\n      function create(_x45, _x46) {\n        return _create.apply(this, arguments);\n      }\n      return create;\n    }()\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getBrowserName(userAgent) {\n  var ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return \"Opera\";\n  } else if (_isIEMobile(ua)) {\n    return \"IEMobile\";\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return \"IE\";\n  } else if (ua.includes('edge/')) {\n    return \"Edge\";\n  } else if (_isFirefox(ua)) {\n    return \"Firefox\";\n  } else if (ua.includes('silk/')) {\n    return \"Silk\";\n  } else if (_isBlackBerry(ua)) {\n    return \"Blackberry\";\n  } else if (_isWebOS(ua)) {\n    return \"Webos\";\n  } else if (_isSafari(ua)) {\n    return \"Safari\";\n  } else if ((ua.includes('chrome/') || _isChromeIOS(ua)) && !ua.includes('edge/')) {\n    return \"Chrome\";\n  } else if (_isAndroid(ua)) {\n    return \"Android\";\n  } else {\n    var re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    var matches = userAgent.match(re);\n    if ((matches === null || matches === void 0 ? void 0 : matches.length) === 2) {\n      return matches[1];\n    }\n  }\n  return \"Other\";\n}\nfunction _isFirefox() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /firefox\\//i.test(ua);\n}\nfunction _isSafari() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  var ua = userAgent.toLowerCase();\n  return ua.includes('safari/') && !ua.includes('chrome/') && !ua.includes('crios/') && !ua.includes('android');\n}\nfunction _isChromeIOS() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /crios\\//i.test(ua);\n}\nfunction _isIEMobile() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /iemobile/i.test(ua);\n}\nfunction _isAndroid() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /android/i.test(ua);\n}\nfunction _isBlackBerry() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /blackberry/i.test(ua);\n}\nfunction _isWebOS() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /webos/i.test(ua);\n}\nfunction _isIOS() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /iphone|ipad|ipod/i.test(ua) || /macintosh/i.test(ua) && /mobile/i.test(ua);\n}\nfunction _isIOS7Or8() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) || /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua);\n}\nfunction _isIOSStandalone() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  var _a;\n  return _isIOS(ua) && !!((_a = window.navigator) === null || _a === void 0 ? void 0 : _a.standalone);\n}\nfunction _isIE10() {\n  return isIE() && document.documentMode === 10;\n}\nfunction _isMobileBrowser() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return _isIOS(ua) || _isAndroid(ua) || _isWebOS(ua) || _isBlackBerry(ua) || /windows phone/i.test(ua) || _isIEMobile(ua);\n}\nfunction _isIframe() {\n  try {\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getClientVersion(clientPlatform) {\n  var frameworks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var reportedPlatform;\n  switch (clientPlatform) {\n    case \"Browser\":\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case \"Worker\":\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  var reportedFrameworks = frameworks.length ? frameworks.join(',') : 'FirebaseCore-web';\n  return `${reportedPlatform}/${\"JsCore\"}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AuthMiddlewareQueue = function () {\n  function AuthMiddlewareQueue(auth) {\n    _classCallCheck(this, AuthMiddlewareQueue);\n    this.auth = auth;\n    this.queue = [];\n  }\n  return _createClass(AuthMiddlewareQueue, [{\n    key: \"pushCallback\",\n    value: function pushCallback(callback, onAbort) {\n      var _this3 = this;\n      var wrappedCallback = function wrappedCallback(user) {\n        return new Promise(function (resolve, reject) {\n          try {\n            var result = callback(user);\n            resolve(result);\n          } catch (e) {\n            reject(e);\n          }\n        });\n      };\n      wrappedCallback.onAbort = onAbort;\n      this.queue.push(wrappedCallback);\n      var index = this.queue.length - 1;\n      return function () {\n        _this3.queue[index] = function () {\n          return Promise.resolve();\n        };\n      };\n    }\n  }, {\n    key: \"runMiddleware\",\n    value: function () {\n      var _runMiddleware = _asyncToGenerator(function* (nextUser) {\n        if (this.auth.currentUser === nextUser) {\n          return;\n        }\n        var onAbortStack = [];\n        try {\n          for (var beforeStateCallback of this.queue) {\n            yield beforeStateCallback(nextUser);\n            if (beforeStateCallback.onAbort) {\n              onAbortStack.push(beforeStateCallback.onAbort);\n            }\n          }\n        } catch (e) {\n          onAbortStack.reverse();\n          for (var onAbort of onAbortStack) {\n            try {\n              onAbort();\n            } catch (_) {}\n          }\n          throw this.auth._errorFactory.create(\"login-blocked\", {\n            originalMessage: e === null || e === void 0 ? void 0 : e.message\n          });\n        }\n      });\n      function runMiddleware(_x49) {\n        return _runMiddleware.apply(this, arguments);\n      }\n      return runMiddleware;\n    }()\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getPasswordPolicy(_x50) {\n  return _getPasswordPolicy2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getPasswordPolicy2() {\n  _getPasswordPolicy2 = _asyncToGenerator(function* (auth) {\n    var request = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _performApiRequest(auth, \"GET\", \"/v2/passwordPolicy\", _addTidIfNecessary(auth, request));\n  });\n  return _getPasswordPolicy2.apply(this, arguments);\n}\nvar MINIMUM_MIN_PASSWORD_LENGTH = 6;\nvar PasswordPolicyImpl = function () {\n  function PasswordPolicyImpl(response) {\n    _classCallCheck(this, PasswordPolicyImpl);\n    var _a, _b, _c, _d;\n    var responseOptions = response.customStrengthOptions;\n    this.customStrengthOptions = {};\n    this.customStrengthOptions.minPasswordLength = (_a = responseOptions.minPasswordLength) !== null && _a !== void 0 ? _a : MINIMUM_MIN_PASSWORD_LENGTH;\n    if (responseOptions.maxPasswordLength) {\n      this.customStrengthOptions.maxPasswordLength = responseOptions.maxPasswordLength;\n    }\n    if (responseOptions.containsLowercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsLowercaseLetter = responseOptions.containsLowercaseCharacter;\n    }\n    if (responseOptions.containsUppercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsUppercaseLetter = responseOptions.containsUppercaseCharacter;\n    }\n    if (responseOptions.containsNumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNumericCharacter = responseOptions.containsNumericCharacter;\n    }\n    if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNonAlphanumericCharacter = responseOptions.containsNonAlphanumericCharacter;\n    }\n    this.enforcementState = response.enforcementState;\n    if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n      this.enforcementState = 'OFF';\n    }\n    this.allowedNonAlphanumericCharacters = (_c = (_b = response.allowedNonAlphanumericCharacters) === null || _b === void 0 ? void 0 : _b.join('')) !== null && _c !== void 0 ? _c : '';\n    this.forceUpgradeOnSignin = (_d = response.forceUpgradeOnSignin) !== null && _d !== void 0 ? _d : false;\n    this.schemaVersion = response.schemaVersion;\n  }\n  return _createClass(PasswordPolicyImpl, [{\n    key: \"validatePassword\",\n    value: function validatePassword(password) {\n      var _a, _b, _c, _d, _e, _f;\n      var status = {\n        isValid: true,\n        passwordPolicy: this\n      };\n      this.validatePasswordLengthOptions(password, status);\n      this.validatePasswordCharacterOptions(password, status);\n      status.isValid && (status.isValid = (_a = status.meetsMinPasswordLength) !== null && _a !== void 0 ? _a : true);\n      status.isValid && (status.isValid = (_b = status.meetsMaxPasswordLength) !== null && _b !== void 0 ? _b : true);\n      status.isValid && (status.isValid = (_c = status.containsLowercaseLetter) !== null && _c !== void 0 ? _c : true);\n      status.isValid && (status.isValid = (_d = status.containsUppercaseLetter) !== null && _d !== void 0 ? _d : true);\n      status.isValid && (status.isValid = (_e = status.containsNumericCharacter) !== null && _e !== void 0 ? _e : true);\n      status.isValid && (status.isValid = (_f = status.containsNonAlphanumericCharacter) !== null && _f !== void 0 ? _f : true);\n      return status;\n    }\n  }, {\n    key: \"validatePasswordLengthOptions\",\n    value: function validatePasswordLengthOptions(password, status) {\n      var minPasswordLength = this.customStrengthOptions.minPasswordLength;\n      var maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n      if (minPasswordLength) {\n        status.meetsMinPasswordLength = password.length >= minPasswordLength;\n      }\n      if (maxPasswordLength) {\n        status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n      }\n    }\n  }, {\n    key: \"validatePasswordCharacterOptions\",\n    value: function validatePasswordCharacterOptions(password, status) {\n      this.updatePasswordCharacterOptionsStatuses(status, false, false, false, false);\n      var passwordChar;\n      for (var i = 0; i < password.length; i++) {\n        passwordChar = password.charAt(i);\n        this.updatePasswordCharacterOptionsStatuses(status, passwordChar >= 'a' && passwordChar <= 'z', passwordChar >= 'A' && passwordChar <= 'Z', passwordChar >= '0' && passwordChar <= '9', this.allowedNonAlphanumericCharacters.includes(passwordChar));\n      }\n    }\n  }, {\n    key: \"updatePasswordCharacterOptionsStatuses\",\n    value: function updatePasswordCharacterOptionsStatuses(status, containsLowercaseCharacter, containsUppercaseCharacter, containsNumericCharacter, containsNonAlphanumericCharacter) {\n      if (this.customStrengthOptions.containsLowercaseLetter) {\n        status.containsLowercaseLetter || (status.containsLowercaseLetter = containsLowercaseCharacter);\n      }\n      if (this.customStrengthOptions.containsUppercaseLetter) {\n        status.containsUppercaseLetter || (status.containsUppercaseLetter = containsUppercaseCharacter);\n      }\n      if (this.customStrengthOptions.containsNumericCharacter) {\n        status.containsNumericCharacter || (status.containsNumericCharacter = containsNumericCharacter);\n      }\n      if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n        status.containsNonAlphanumericCharacter || (status.containsNonAlphanumericCharacter = containsNonAlphanumericCharacter);\n      }\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AuthImpl = function () {\n  function AuthImpl(app, heartbeatServiceProvider, appCheckServiceProvider, config) {\n    _classCallCheck(this, AuthImpl);\n    this.app = app;\n    this.heartbeatServiceProvider = heartbeatServiceProvider;\n    this.appCheckServiceProvider = appCheckServiceProvider;\n    this.config = config;\n    this.currentUser = null;\n    this.emulatorConfig = null;\n    this.operations = Promise.resolve();\n    this.authStateSubscription = new Subscription(this);\n    this.idTokenSubscription = new Subscription(this);\n    this.beforeStateQueue = new AuthMiddlewareQueue(this);\n    this.redirectUser = null;\n    this.isProactiveRefreshEnabled = false;\n    this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1;\n    this._canInitEmulator = true;\n    this._isInitialized = false;\n    this._deleted = false;\n    this._initializationPromise = null;\n    this._popupRedirectResolver = null;\n    this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;\n    this._agentRecaptchaConfig = null;\n    this._tenantRecaptchaConfigs = {};\n    this._projectPasswordPolicy = null;\n    this._tenantPasswordPolicies = {};\n    this.lastNotifiedUid = undefined;\n    this.languageCode = null;\n    this.tenantId = null;\n    this.settings = {\n      appVerificationDisabledForTesting: false\n    };\n    this.frameworks = [];\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n  return _createClass(AuthImpl, [{\n    key: \"_initializeWithPersistence\",\n    value: function _initializeWithPersistence(persistenceHierarchy, popupRedirectResolver) {\n      var _this4 = this;\n      if (popupRedirectResolver) {\n        this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n      }\n      this._initializationPromise = this.queue(_asyncToGenerator(function* () {\n        var _a, _b;\n        if (_this4._deleted) {\n          return;\n        }\n        _this4.persistenceManager = yield PersistenceUserManager.create(_this4, persistenceHierarchy);\n        if (_this4._deleted) {\n          return;\n        }\n        if ((_a = _this4._popupRedirectResolver) === null || _a === void 0 ? void 0 : _a._shouldInitProactively) {\n          try {\n            yield _this4._popupRedirectResolver._initialize(_this4);\n          } catch (e) {}\n        }\n        yield _this4.initializeCurrentUser(popupRedirectResolver);\n        _this4.lastNotifiedUid = ((_b = _this4.currentUser) === null || _b === void 0 ? void 0 : _b.uid) || null;\n        if (_this4._deleted) {\n          return;\n        }\n        _this4._isInitialized = true;\n      }));\n      return this._initializationPromise;\n    }\n  }, {\n    key: \"_onStorageEvent\",\n    value: (function () {\n      var _onStorageEvent2 = _asyncToGenerator(function* () {\n        if (this._deleted) {\n          return;\n        }\n        var user = yield this.assertedPersistence.getCurrentUser();\n        if (!this.currentUser && !user) {\n          return;\n        }\n        if (this.currentUser && user && this.currentUser.uid === user.uid) {\n          this._currentUser._assign(user);\n          yield this.currentUser.getIdToken();\n          return;\n        }\n        yield this._updateCurrentUser(user, true);\n      });\n      function _onStorageEvent() {\n        return _onStorageEvent2.apply(this, arguments);\n      }\n      return _onStorageEvent;\n    }())\n  }, {\n    key: \"initializeCurrentUserFromIdToken\",\n    value: function () {\n      var _initializeCurrentUserFromIdToken = _asyncToGenerator(function* (idToken) {\n        try {\n          var response = yield getAccountInfo(this, {\n            idToken: idToken\n          });\n          var user = yield UserImpl._fromGetAccountInfoResponse(this, response, idToken);\n          yield this.directlySetCurrentUser(user);\n        } catch (err) {\n          console.warn('FirebaseServerApp could not login user with provided authIdToken: ', err);\n          yield this.directlySetCurrentUser(null);\n        }\n      });\n      function initializeCurrentUserFromIdToken(_x51) {\n        return _initializeCurrentUserFromIdToken.apply(this, arguments);\n      }\n      return initializeCurrentUserFromIdToken;\n    }()\n  }, {\n    key: \"initializeCurrentUser\",\n    value: function () {\n      var _initializeCurrentUser = _asyncToGenerator(function* (popupRedirectResolver) {\n        var _this5 = this;\n        var _a;\n        if (_isFirebaseServerApp(this.app)) {\n          var idToken = this.app.settings.authIdToken;\n          if (idToken) {\n            return new Promise(function (resolve) {\n              setTimeout(function () {\n                return _this5.initializeCurrentUserFromIdToken(idToken).then(resolve, resolve);\n              });\n            });\n          } else {\n            return this.directlySetCurrentUser(null);\n          }\n        }\n        var previouslyStoredUser = yield this.assertedPersistence.getCurrentUser();\n        var futureCurrentUser = previouslyStoredUser;\n        var needsTocheckMiddleware = false;\n        if (popupRedirectResolver && this.config.authDomain) {\n          yield this.getOrInitRedirectPersistenceManager();\n          var redirectUserEventId = (_a = this.redirectUser) === null || _a === void 0 ? void 0 : _a._redirectEventId;\n          var storedUserEventId = futureCurrentUser === null || futureCurrentUser === void 0 ? void 0 : futureCurrentUser._redirectEventId;\n          var result = yield this.tryRedirectSignIn(popupRedirectResolver);\n          if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) && (result === null || result === void 0 ? void 0 : result.user)) {\n            futureCurrentUser = result.user;\n            needsTocheckMiddleware = true;\n          }\n        }\n        if (!futureCurrentUser) {\n          return this.directlySetCurrentUser(null);\n        }\n        if (!futureCurrentUser._redirectEventId) {\n          if (needsTocheckMiddleware) {\n            try {\n              yield this.beforeStateQueue.runMiddleware(futureCurrentUser);\n            } catch (e) {\n              futureCurrentUser = previouslyStoredUser;\n              this._popupRedirectResolver._overrideRedirectResult(this, function () {\n                return Promise.reject(e);\n              });\n            }\n          }\n          if (futureCurrentUser) {\n            return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n          } else {\n            return this.directlySetCurrentUser(null);\n          }\n        }\n        _assert(this._popupRedirectResolver, this, \"argument-error\");\n        yield this.getOrInitRedirectPersistenceManager();\n        if (this.redirectUser && this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId) {\n          return this.directlySetCurrentUser(futureCurrentUser);\n        }\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      });\n      function initializeCurrentUser(_x52) {\n        return _initializeCurrentUser.apply(this, arguments);\n      }\n      return initializeCurrentUser;\n    }()\n  }, {\n    key: \"tryRedirectSignIn\",\n    value: function () {\n      var _tryRedirectSignIn = _asyncToGenerator(function* (redirectResolver) {\n        var result = null;\n        try {\n          result = yield this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true);\n        } catch (e) {\n          yield this._setRedirectUser(null);\n        }\n        return result;\n      });\n      function tryRedirectSignIn(_x53) {\n        return _tryRedirectSignIn.apply(this, arguments);\n      }\n      return tryRedirectSignIn;\n    }()\n  }, {\n    key: \"reloadAndSetCurrentUserOrClear\",\n    value: function () {\n      var _reloadAndSetCurrentUserOrClear = _asyncToGenerator(function* (user) {\n        try {\n          yield _reloadWithoutSaving(user);\n        } catch (e) {\n          if ((e === null || e === void 0 ? void 0 : e.code) !== `auth/${\"network-request-failed\"}`) {\n            return this.directlySetCurrentUser(null);\n          }\n        }\n        return this.directlySetCurrentUser(user);\n      });\n      function reloadAndSetCurrentUserOrClear(_x54) {\n        return _reloadAndSetCurrentUserOrClear.apply(this, arguments);\n      }\n      return reloadAndSetCurrentUserOrClear;\n    }()\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      this.languageCode = _getUserLanguage();\n    }\n  }, {\n    key: \"_delete\",\n    value: function () {\n      var _delete3 = _asyncToGenerator(function* () {\n        this._deleted = true;\n      });\n      function _delete() {\n        return _delete3.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  }, {\n    key: \"updateCurrentUser\",\n    value: function () {\n      var _updateCurrentUser2 = _asyncToGenerator(function* (userExtern) {\n        if (_isFirebaseServerApp(this.app)) {\n          return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this));\n        }\n        var user = userExtern ? getModularInstance(userExtern) : null;\n        if (user) {\n          _assert(user.auth.config.apiKey === this.config.apiKey, this, \"invalid-user-token\");\n        }\n        return this._updateCurrentUser(user && user._clone(this));\n      });\n      function updateCurrentUser(_x55) {\n        return _updateCurrentUser2.apply(this, arguments);\n      }\n      return updateCurrentUser;\n    }()\n  }, {\n    key: \"_updateCurrentUser\",\n    value: function () {\n      var _updateCurrentUser3 = _asyncToGenerator(function* (user) {\n        var _this6 = this;\n        var skipBeforeStateCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        if (this._deleted) {\n          return;\n        }\n        if (user) {\n          _assert(this.tenantId === user.tenantId, this, \"tenant-id-mismatch\");\n        }\n        if (!skipBeforeStateCallbacks) {\n          yield this.beforeStateQueue.runMiddleware(user);\n        }\n        return this.queue(_asyncToGenerator(function* () {\n          yield _this6.directlySetCurrentUser(user);\n          _this6.notifyAuthListeners();\n        }));\n      });\n      function _updateCurrentUser(_x56) {\n        return _updateCurrentUser3.apply(this, arguments);\n      }\n      return _updateCurrentUser;\n    }()\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator(function* () {\n        if (_isFirebaseServerApp(this.app)) {\n          return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this));\n        }\n        yield this.beforeStateQueue.runMiddleware(null);\n        if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n          yield this._setRedirectUser(null);\n        }\n        return this._updateCurrentUser(null, true);\n      });\n      function signOut() {\n        return _signOut.apply(this, arguments);\n      }\n      return signOut;\n    }()\n  }, {\n    key: \"setPersistence\",\n    value: function setPersistence(persistence) {\n      var _this7 = this;\n      if (_isFirebaseServerApp(this.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this));\n      }\n      return this.queue(_asyncToGenerator(function* () {\n        yield _this7.assertedPersistence.setPersistence(_getInstance(persistence));\n      }));\n    }\n  }, {\n    key: \"_getRecaptchaConfig\",\n    value: function _getRecaptchaConfig() {\n      if (this.tenantId == null) {\n        return this._agentRecaptchaConfig;\n      } else {\n        return this._tenantRecaptchaConfigs[this.tenantId];\n      }\n    }\n  }, {\n    key: \"validatePassword\",\n    value: function () {\n      var _validatePassword = _asyncToGenerator(function* (password) {\n        if (!this._getPasswordPolicyInternal()) {\n          yield this._updatePasswordPolicy();\n        }\n        var passwordPolicy = this._getPasswordPolicyInternal();\n        if (passwordPolicy.schemaVersion !== this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION) {\n          return Promise.reject(this._errorFactory.create(\"unsupported-password-policy-schema-version\", {}));\n        }\n        return passwordPolicy.validatePassword(password);\n      });\n      function validatePassword(_x57) {\n        return _validatePassword.apply(this, arguments);\n      }\n      return validatePassword;\n    }()\n  }, {\n    key: \"_getPasswordPolicyInternal\",\n    value: function _getPasswordPolicyInternal() {\n      if (this.tenantId === null) {\n        return this._projectPasswordPolicy;\n      } else {\n        return this._tenantPasswordPolicies[this.tenantId];\n      }\n    }\n  }, {\n    key: \"_updatePasswordPolicy\",\n    value: function () {\n      var _updatePasswordPolicy2 = _asyncToGenerator(function* () {\n        var response = yield _getPasswordPolicy(this);\n        var passwordPolicy = new PasswordPolicyImpl(response);\n        if (this.tenantId === null) {\n          this._projectPasswordPolicy = passwordPolicy;\n        } else {\n          this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n        }\n      });\n      function _updatePasswordPolicy() {\n        return _updatePasswordPolicy2.apply(this, arguments);\n      }\n      return _updatePasswordPolicy;\n    }()\n  }, {\n    key: \"_getPersistence\",\n    value: function _getPersistence() {\n      return this.assertedPersistence.persistence.type;\n    }\n  }, {\n    key: \"_updateErrorMap\",\n    value: function _updateErrorMap(errorMap) {\n      this._errorFactory = new ErrorFactory('auth', 'Firebase', errorMap());\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(nextOrObserver, error, completed) {\n      return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);\n    }\n  }, {\n    key: \"beforeAuthStateChanged\",\n    value: function beforeAuthStateChanged(callback, onAbort) {\n      return this.beforeStateQueue.pushCallback(callback, onAbort);\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(nextOrObserver, error, completed) {\n      return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);\n    }\n  }, {\n    key: \"authStateReady\",\n    value: function authStateReady() {\n      var _this8 = this;\n      return new Promise(function (resolve, reject) {\n        if (_this8.currentUser) {\n          resolve();\n        } else {\n          var unsubscribe = _this8.onAuthStateChanged(function () {\n            unsubscribe();\n            resolve();\n          }, reject);\n        }\n      });\n    }\n  }, {\n    key: \"revokeAccessToken\",\n    value: (function () {\n      var _revokeAccessToken = _asyncToGenerator(function* (token) {\n        if (this.currentUser) {\n          var idToken = yield this.currentUser.getIdToken();\n          var request = {\n            providerId: 'apple.com',\n            tokenType: \"ACCESS_TOKEN\",\n            token: token,\n            idToken: idToken\n          };\n          if (this.tenantId != null) {\n            request.tenantId = this.tenantId;\n          }\n          yield revokeToken(this, request);\n        }\n      });\n      function revokeAccessToken(_x58) {\n        return _revokeAccessToken.apply(this, arguments);\n      }\n      return revokeAccessToken;\n    }())\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _a;\n      return {\n        apiKey: this.config.apiKey,\n        authDomain: this.config.authDomain,\n        appName: this.name,\n        currentUser: (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.toJSON()\n      };\n    }\n  }, {\n    key: \"_setRedirectUser\",\n    value: function () {\n      var _setRedirectUser2 = _asyncToGenerator(function* (user, popupRedirectResolver) {\n        var redirectManager = yield this.getOrInitRedirectPersistenceManager(popupRedirectResolver);\n        return user === null ? redirectManager.removeCurrentUser() : redirectManager.setCurrentUser(user);\n      });\n      function _setRedirectUser(_x59, _x60) {\n        return _setRedirectUser2.apply(this, arguments);\n      }\n      return _setRedirectUser;\n    }()\n  }, {\n    key: \"getOrInitRedirectPersistenceManager\",\n    value: function () {\n      var _getOrInitRedirectPersistenceManager = _asyncToGenerator(function* (popupRedirectResolver) {\n        if (!this.redirectPersistenceManager) {\n          var resolver = popupRedirectResolver && _getInstance(popupRedirectResolver) || this._popupRedirectResolver;\n          _assert(resolver, this, \"argument-error\");\n          this.redirectPersistenceManager = yield PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], \"redirectUser\");\n          this.redirectUser = yield this.redirectPersistenceManager.getCurrentUser();\n        }\n        return this.redirectPersistenceManager;\n      });\n      function getOrInitRedirectPersistenceManager(_x61) {\n        return _getOrInitRedirectPersistenceManager.apply(this, arguments);\n      }\n      return getOrInitRedirectPersistenceManager;\n    }()\n  }, {\n    key: \"_redirectUserForId\",\n    value: function () {\n      var _redirectUserForId2 = _asyncToGenerator(function* (id) {\n        var _a, _b;\n        if (this._isInitialized) {\n          yield this.queue(_asyncToGenerator(function* () {}));\n        }\n        if (((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a._redirectEventId) === id) {\n          return this._currentUser;\n        }\n        if (((_b = this.redirectUser) === null || _b === void 0 ? void 0 : _b._redirectEventId) === id) {\n          return this.redirectUser;\n        }\n        return null;\n      });\n      function _redirectUserForId(_x62) {\n        return _redirectUserForId2.apply(this, arguments);\n      }\n      return _redirectUserForId;\n    }()\n  }, {\n    key: \"_persistUserIfCurrent\",\n    value: function () {\n      var _persistUserIfCurrent2 = _asyncToGenerator(function* (user) {\n        var _this9 = this;\n        if (user === this.currentUser) {\n          return this.queue(_asyncToGenerator(function* () {\n            return _this9.directlySetCurrentUser(user);\n          }));\n        }\n      });\n      function _persistUserIfCurrent(_x63) {\n        return _persistUserIfCurrent2.apply(this, arguments);\n      }\n      return _persistUserIfCurrent;\n    }()\n  }, {\n    key: \"_notifyListenersIfCurrent\",\n    value: function _notifyListenersIfCurrent(user) {\n      if (user === this.currentUser) {\n        this.notifyAuthListeners();\n      }\n    }\n  }, {\n    key: \"_key\",\n    value: function _key() {\n      return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n    }\n  }, {\n    key: \"_startProactiveRefresh\",\n    value: function _startProactiveRefresh() {\n      this.isProactiveRefreshEnabled = true;\n      if (this.currentUser) {\n        this._currentUser._startProactiveRefresh();\n      }\n    }\n  }, {\n    key: \"_stopProactiveRefresh\",\n    value: function _stopProactiveRefresh() {\n      this.isProactiveRefreshEnabled = false;\n      if (this.currentUser) {\n        this._currentUser._stopProactiveRefresh();\n      }\n    }\n  }, {\n    key: \"_currentUser\",\n    get: function get() {\n      return this.currentUser;\n    }\n  }, {\n    key: \"notifyAuthListeners\",\n    value: function notifyAuthListeners() {\n      var _a, _b;\n      if (!this._isInitialized) {\n        return;\n      }\n      this.idTokenSubscription.next(this.currentUser);\n      var currentUid = (_b = (_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : null;\n      if (this.lastNotifiedUid !== currentUid) {\n        this.lastNotifiedUid = currentUid;\n        this.authStateSubscription.next(this.currentUser);\n      }\n    }\n  }, {\n    key: \"registerStateListener\",\n    value: function registerStateListener(subscription, nextOrObserver, error, completed) {\n      var _this10 = this;\n      if (this._deleted) {\n        return function () {};\n      }\n      var cb = typeof nextOrObserver === 'function' ? nextOrObserver : nextOrObserver.next.bind(nextOrObserver);\n      var isUnsubscribed = false;\n      var promise = this._isInitialized ? Promise.resolve() : this._initializationPromise;\n      _assert(promise, this, \"internal-error\");\n      promise.then(function () {\n        if (isUnsubscribed) {\n          return;\n        }\n        cb(_this10.currentUser);\n      });\n      if (typeof nextOrObserver === 'function') {\n        var unsubscribe = subscription.addObserver(nextOrObserver, error, completed);\n        return function () {\n          isUnsubscribed = true;\n          unsubscribe();\n        };\n      } else {\n        var _unsubscribe = subscription.addObserver(nextOrObserver);\n        return function () {\n          isUnsubscribed = true;\n          _unsubscribe();\n        };\n      }\n    }\n  }, {\n    key: \"directlySetCurrentUser\",\n    value: (function () {\n      var _directlySetCurrentUser = _asyncToGenerator(function* (user) {\n        if (this.currentUser && this.currentUser !== user) {\n          this._currentUser._stopProactiveRefresh();\n        }\n        if (user && this.isProactiveRefreshEnabled) {\n          user._startProactiveRefresh();\n        }\n        this.currentUser = user;\n        if (user) {\n          yield this.assertedPersistence.setCurrentUser(user);\n        } else {\n          yield this.assertedPersistence.removeCurrentUser();\n        }\n      });\n      function directlySetCurrentUser(_x64) {\n        return _directlySetCurrentUser.apply(this, arguments);\n      }\n      return directlySetCurrentUser;\n    }())\n  }, {\n    key: \"queue\",\n    value: function queue(action) {\n      this.operations = this.operations.then(action, action);\n      return this.operations;\n    }\n  }, {\n    key: \"assertedPersistence\",\n    get: function get() {\n      _assert(this.persistenceManager, this, \"internal-error\");\n      return this.persistenceManager;\n    }\n  }, {\n    key: \"_logFramework\",\n    value: function _logFramework(framework) {\n      if (!framework || this.frameworks.includes(framework)) {\n        return;\n      }\n      this.frameworks.push(framework);\n      this.frameworks.sort();\n      this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());\n    }\n  }, {\n    key: \"_getFrameworks\",\n    value: function _getFrameworks() {\n      return this.frameworks;\n    }\n  }, {\n    key: \"_getAdditionalHeaders\",\n    value: function () {\n      var _getAdditionalHeaders2 = _asyncToGenerator(function* () {\n        var _a;\n        var headers = _defineProperty({}, \"X-Client-Version\", this.clientVersion);\n        if (this.app.options.appId) {\n          headers[\"X-Firebase-gmpid\"] = this.app.options.appId;\n        }\n        var heartbeatsHeader = yield (_a = this.heartbeatServiceProvider.getImmediate({\n          optional: true\n        })) === null || _a === void 0 ? void 0 : _a.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n          headers[\"X-Firebase-Client\"] = heartbeatsHeader;\n        }\n        var appCheckToken = yield this._getAppCheckToken();\n        if (appCheckToken) {\n          headers[\"X-Firebase-AppCheck\"] = appCheckToken;\n        }\n        return headers;\n      });\n      function _getAdditionalHeaders() {\n        return _getAdditionalHeaders2.apply(this, arguments);\n      }\n      return _getAdditionalHeaders;\n    }()\n  }, {\n    key: \"_getAppCheckToken\",\n    value: function () {\n      var _getAppCheckToken2 = _asyncToGenerator(function* () {\n        var _a;\n        var appCheckTokenResult = yield (_a = this.appCheckServiceProvider.getImmediate({\n          optional: true\n        })) === null || _a === void 0 ? void 0 : _a.getToken();\n        if (appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.error) {\n          _logWarn(`Error while retrieving App Check token: ${appCheckTokenResult.error}`);\n        }\n        return appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.token;\n      });\n      function _getAppCheckToken() {\n        return _getAppCheckToken2.apply(this, arguments);\n      }\n      return _getAppCheckToken;\n    }()\n  }]);\n}();\nfunction _castAuth(auth) {\n  return getModularInstance(auth);\n}\nvar Subscription = function () {\n  function Subscription(auth) {\n    var _this11 = this;\n    _classCallCheck(this, Subscription);\n    this.auth = auth;\n    this.observer = null;\n    this.addObserver = createSubscribe(function (observer) {\n      return _this11.observer = observer;\n    });\n  }\n  return _createClass(Subscription, [{\n    key: \"next\",\n    get: function get() {\n      _assert(this.observer, this.auth, \"internal-error\");\n      return this.observer.next.bind(this.observer);\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar externalJSProvider = {\n  loadJS: function () {\n    var _loadJS2 = _asyncToGenerator(function* () {\n      throw new Error('Unable to load external scripts');\n    });\n    function loadJS() {\n      return _loadJS2.apply(this, arguments);\n    }\n    return loadJS;\n  }(),\n  recaptchaV2Script: '',\n  recaptchaEnterpriseScript: '',\n  gapiScript: ''\n};\nfunction _setExternalJSProvider(p) {\n  externalJSProvider = p;\n}\nfunction _loadJS(url) {\n  return externalJSProvider.loadJS(url);\n}\nfunction _recaptchaV2ScriptUrl() {\n  return externalJSProvider.recaptchaV2Script;\n}\nfunction _recaptchaEnterpriseScriptUrl() {\n  return externalJSProvider.recaptchaEnterpriseScript;\n}\nfunction _gapiScriptUrl() {\n  return externalJSProvider.gapiScript;\n}\nfunction _generateCallbackName(prefix) {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\nvar RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\nvar FAKE_TOKEN = 'NO_RECAPTCHA';\nvar RecaptchaEnterpriseVerifier = function () {\n  function RecaptchaEnterpriseVerifier(authExtern) {\n    _classCallCheck(this, RecaptchaEnterpriseVerifier);\n    this.type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n    this.auth = _castAuth(authExtern);\n  }\n  return _createClass(RecaptchaEnterpriseVerifier, [{\n    key: \"verify\",\n    value: (function () {\n      var _verify = _asyncToGenerator(function* () {\n        var _this12 = this;\n        var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'verify';\n        var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        function retrieveSiteKey(_x65) {\n          return _retrieveSiteKey.apply(this, arguments);\n        }\n        function _retrieveSiteKey() {\n          _retrieveSiteKey = _asyncToGenerator(function* (auth) {\n            if (!forceRefresh) {\n              if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n                return auth._agentRecaptchaConfig.siteKey;\n              }\n              if (auth.tenantId != null && auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined) {\n                return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\n              }\n            }\n            return new Promise(function () {\n              var _ref12 = _asyncToGenerator(function* (resolve, reject) {\n                getRecaptchaConfig(auth, {\n                  clientType: \"CLIENT_TYPE_WEB\",\n                  version: \"RECAPTCHA_ENTERPRISE\"\n                }).then(function (response) {\n                  if (response.recaptchaKey === undefined) {\n                    reject(new Error('recaptcha Enterprise site key undefined'));\n                  } else {\n                    var config = new RecaptchaConfig(response);\n                    if (auth.tenantId == null) {\n                      auth._agentRecaptchaConfig = config;\n                    } else {\n                      auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n                    }\n                    return resolve(config.siteKey);\n                  }\n                }).catch(function (error) {\n                  reject(error);\n                });\n              });\n              return function (_x66, _x67) {\n                return _ref12.apply(this, arguments);\n              };\n            }());\n          });\n          return _retrieveSiteKey.apply(this, arguments);\n        }\n        function retrieveRecaptchaToken(siteKey, resolve, reject) {\n          var grecaptcha = window.grecaptcha;\n          if (isEnterprise(grecaptcha)) {\n            grecaptcha.enterprise.ready(function () {\n              grecaptcha.enterprise.execute(siteKey, {\n                action: action\n              }).then(function (token) {\n                resolve(token);\n              }).catch(function () {\n                resolve(FAKE_TOKEN);\n              });\n            });\n          } else {\n            reject(Error('No reCAPTCHA enterprise script loaded.'));\n          }\n        }\n        return new Promise(function (resolve, reject) {\n          retrieveSiteKey(_this12.auth).then(function (siteKey) {\n            if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n              retrieveRecaptchaToken(siteKey, resolve, reject);\n            } else {\n              if (typeof window === 'undefined') {\n                reject(new Error('RecaptchaVerifier is only supported in browser'));\n                return;\n              }\n              var url = _recaptchaEnterpriseScriptUrl();\n              if (url.length !== 0) {\n                url += siteKey;\n              }\n              _loadJS(url).then(function () {\n                retrieveRecaptchaToken(siteKey, resolve, reject);\n              }).catch(function (error) {\n                reject(error);\n              });\n            }\n          }).catch(function (error) {\n            reject(error);\n          });\n        });\n      });\n      function verify() {\n        return _verify.apply(this, arguments);\n      }\n      return verify;\n    }())\n  }]);\n}();\nfunction injectRecaptchaFields(_x68, _x69, _x70) {\n  return _injectRecaptchaFields.apply(this, arguments);\n}\nfunction _injectRecaptchaFields() {\n  _injectRecaptchaFields = _asyncToGenerator(function* (auth, request, action) {\n    var captchaResp = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var verifier = new RecaptchaEnterpriseVerifier(auth);\n    var captchaResponse;\n    try {\n      captchaResponse = yield verifier.verify(action);\n    } catch (error) {\n      captchaResponse = yield verifier.verify(action, true);\n    }\n    var newRequest = Object.assign({}, request);\n    if (!captchaResp) {\n      Object.assign(newRequest, {\n        captchaResponse: captchaResponse\n      });\n    } else {\n      Object.assign(newRequest, {\n        'captchaResp': captchaResponse\n      });\n    }\n    Object.assign(newRequest, {\n      'clientType': \"CLIENT_TYPE_WEB\"\n    });\n    Object.assign(newRequest, {\n      'recaptchaVersion': \"RECAPTCHA_ENTERPRISE\"\n    });\n    return newRequest;\n  });\n  return _injectRecaptchaFields.apply(this, arguments);\n}\nfunction handleRecaptchaFlow(_x71, _x72, _x73, _x74) {\n  return _handleRecaptchaFlow.apply(this, arguments);\n}\nfunction _handleRecaptchaFlow() {\n  _handleRecaptchaFlow = _asyncToGenerator(function* (authInstance, request, actionName, actionMethod) {\n    var _a;\n    if ((_a = authInstance._getRecaptchaConfig()) === null || _a === void 0 ? void 0 : _a.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\")) {\n      var requestWithRecaptcha = yield injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\");\n      return actionMethod(authInstance, requestWithRecaptcha);\n    } else {\n      return actionMethod(authInstance, request).catch(function () {\n        var _ref43 = _asyncToGenerator(function* (error) {\n          if (error.code === `auth/${\"missing-recaptcha-token\"}`) {\n            console.log(`${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`);\n            var _requestWithRecaptcha = yield injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\");\n            return actionMethod(authInstance, _requestWithRecaptcha);\n          } else {\n            return Promise.reject(error);\n          }\n        });\n        return function (_x289) {\n          return _ref43.apply(this, arguments);\n        };\n      }());\n    }\n  });\n  return _handleRecaptchaFlow.apply(this, arguments);\n}\nfunction _initializeRecaptchaConfig(_x75) {\n  return _initializeRecaptchaConfig2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _initializeRecaptchaConfig2() {\n  _initializeRecaptchaConfig2 = _asyncToGenerator(function* (auth) {\n    var authInternal = _castAuth(auth);\n    var response = yield getRecaptchaConfig(authInternal, {\n      clientType: \"CLIENT_TYPE_WEB\",\n      version: \"RECAPTCHA_ENTERPRISE\"\n    });\n    var config = new RecaptchaConfig(response);\n    if (authInternal.tenantId == null) {\n      authInternal._agentRecaptchaConfig = config;\n    } else {\n      authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n    }\n    if (config.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\")) {\n      var verifier = new RecaptchaEnterpriseVerifier(authInternal);\n      void verifier.verify();\n    }\n  });\n  return _initializeRecaptchaConfig2.apply(this, arguments);\n}\nfunction initializeAuth(app, deps) {\n  var provider = _getProvider(app, 'auth');\n  if (provider.isInitialized()) {\n    var _auth2 = provider.getImmediate();\n    var initialOptions = provider.getOptions();\n    if (deepEqual(initialOptions, deps !== null && deps !== void 0 ? deps : {})) {\n      return _auth2;\n    } else {\n      _fail(_auth2, \"already-initialized\");\n    }\n  }\n  var auth = provider.initialize({\n    options: deps\n  });\n  return auth;\n}\nfunction _initializeAuthInstance(auth, deps) {\n  var persistence = (deps === null || deps === void 0 ? void 0 : deps.persistence) || [];\n  var hierarchy = (Array.isArray(persistence) ? persistence : [persistence]).map(_getInstance);\n  if (deps === null || deps === void 0 ? void 0 : deps.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n  auth._initializeWithPersistence(hierarchy, deps === null || deps === void 0 ? void 0 : deps.popupRedirectResolver);\n}\nfunction connectAuthEmulator(auth, url, options) {\n  var authInternal = _castAuth(auth);\n  _assert(authInternal._canInitEmulator, authInternal, \"emulator-config-failed\");\n  _assert(/^https?:\\/\\//.test(url), authInternal, \"invalid-emulator-scheme\");\n  var disableWarnings = !!(options === null || options === void 0 ? void 0 : options.disableWarnings);\n  var protocol = extractProtocol(url);\n  var _extractHostAndPort = extractHostAndPort(url),\n    host = _extractHostAndPort.host,\n    port = _extractHostAndPort.port;\n  var portStr = port === null ? '' : `:${port}`;\n  authInternal.config.emulator = {\n    url: `${protocol}//${host}${portStr}/`\n  };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host: host,\n    port: port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({\n      disableWarnings: disableWarnings\n    })\n  });\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\nfunction extractProtocol(url) {\n  var protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\nfunction extractHostAndPort(url) {\n  var protocol = extractProtocol(url);\n  var authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length));\n  if (!authority) {\n    return {\n      host: '',\n      port: null\n    };\n  }\n  var hostAndPort = authority[2].split('@').pop() || '';\n  var bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    var host = bracketedIPv6[1];\n    return {\n      host: host,\n      port: parsePort(hostAndPort.substr(host.length + 1))\n    };\n  } else {\n    var _hostAndPort$split = hostAndPort.split(':'),\n      _hostAndPort$split2 = _slicedToArray(_hostAndPort$split, 2),\n      _host = _hostAndPort$split2[0],\n      port = _hostAndPort$split2[1];\n    return {\n      host: _host,\n      port: parsePort(port)\n    };\n  }\n}\nfunction parsePort(portStr) {\n  if (!portStr) {\n    return null;\n  }\n  var port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\nfunction emitEmulatorWarning() {\n  function attachBanner() {\n    var el = document.createElement('p');\n    var sty = el.style;\n    el.innerText = 'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info('WARNING: You are using the Auth Emulator,' + ' which is intended for local testing only.  Do not use with' + ' production credentials.');\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AuthCredential = function () {\n  function AuthCredential(providerId, signInMethod) {\n    _classCallCheck(this, AuthCredential);\n    this.providerId = providerId;\n    this.signInMethod = signInMethod;\n  }\n  return _createClass(AuthCredential, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return debugFail('not implemented');\n    }\n  }, {\n    key: \"_getIdTokenResponse\",\n    value: function _getIdTokenResponse(_auth) {\n      return debugFail('not implemented');\n    }\n  }, {\n    key: \"_linkToIdToken\",\n    value: function _linkToIdToken(_auth, _idToken) {\n      return debugFail('not implemented');\n    }\n  }, {\n    key: \"_getReauthenticationResolver\",\n    value: function _getReauthenticationResolver(_auth) {\n      return debugFail('not implemented');\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction resetPassword(_x76, _x77) {\n  return _resetPassword.apply(this, arguments);\n}\nfunction _resetPassword() {\n  _resetPassword = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:resetPassword\", _addTidIfNecessary(auth, request));\n  });\n  return _resetPassword.apply(this, arguments);\n}\nfunction updateEmailPassword(_x78, _x79) {\n  return _updateEmailPassword.apply(this, arguments);\n}\nfunction _updateEmailPassword() {\n  _updateEmailPassword = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:update\", request);\n  });\n  return _updateEmailPassword.apply(this, arguments);\n}\nfunction linkEmailPassword(_x80, _x81) {\n  return _linkEmailPassword.apply(this, arguments);\n}\nfunction _linkEmailPassword() {\n  _linkEmailPassword = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:signUp\", request);\n  });\n  return _linkEmailPassword.apply(this, arguments);\n}\nfunction applyActionCode$1(_x82, _x83) {\n  return _applyActionCode$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _applyActionCode$() {\n  _applyActionCode$ = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:update\", _addTidIfNecessary(auth, request));\n  });\n  return _applyActionCode$.apply(this, arguments);\n}\nfunction signInWithPassword(_x84, _x85) {\n  return _signInWithPassword.apply(this, arguments);\n}\nfunction _signInWithPassword() {\n  _signInWithPassword = _asyncToGenerator(function* (auth, request) {\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithPassword\", _addTidIfNecessary(auth, request));\n  });\n  return _signInWithPassword.apply(this, arguments);\n}\nfunction sendOobCode(_x86, _x87) {\n  return _sendOobCode.apply(this, arguments);\n}\nfunction _sendOobCode() {\n  _sendOobCode = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:sendOobCode\", _addTidIfNecessary(auth, request));\n  });\n  return _sendOobCode.apply(this, arguments);\n}\nfunction sendEmailVerification$1(_x88, _x89) {\n  return _sendEmailVerification$.apply(this, arguments);\n}\nfunction _sendEmailVerification$() {\n  _sendEmailVerification$ = _asyncToGenerator(function* (auth, request) {\n    return sendOobCode(auth, request);\n  });\n  return _sendEmailVerification$.apply(this, arguments);\n}\nfunction sendPasswordResetEmail$1(_x90, _x91) {\n  return _sendPasswordResetEmail$.apply(this, arguments);\n}\nfunction _sendPasswordResetEmail$() {\n  _sendPasswordResetEmail$ = _asyncToGenerator(function* (auth, request) {\n    return sendOobCode(auth, request);\n  });\n  return _sendPasswordResetEmail$.apply(this, arguments);\n}\nfunction sendSignInLinkToEmail$1(_x92, _x93) {\n  return _sendSignInLinkToEmail$.apply(this, arguments);\n}\nfunction _sendSignInLinkToEmail$() {\n  _sendSignInLinkToEmail$ = _asyncToGenerator(function* (auth, request) {\n    return sendOobCode(auth, request);\n  });\n  return _sendSignInLinkToEmail$.apply(this, arguments);\n}\nfunction verifyAndChangeEmail(_x94, _x95) {\n  return _verifyAndChangeEmail.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _verifyAndChangeEmail() {\n  _verifyAndChangeEmail = _asyncToGenerator(function* (auth, request) {\n    return sendOobCode(auth, request);\n  });\n  return _verifyAndChangeEmail.apply(this, arguments);\n}\nfunction signInWithEmailLink$1(_x96, _x97) {\n  return _signInWithEmailLink$.apply(this, arguments);\n}\nfunction _signInWithEmailLink$() {\n  _signInWithEmailLink$ = _asyncToGenerator(function* (auth, request) {\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithEmailLink\", _addTidIfNecessary(auth, request));\n  });\n  return _signInWithEmailLink$.apply(this, arguments);\n}\nfunction signInWithEmailLinkForLinking(_x98, _x99) {\n  return _signInWithEmailLinkForLinking.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _signInWithEmailLinkForLinking() {\n  _signInWithEmailLinkForLinking = _asyncToGenerator(function* (auth, request) {\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithEmailLink\", _addTidIfNecessary(auth, request));\n  });\n  return _signInWithEmailLinkForLinking.apply(this, arguments);\n}\nvar EmailAuthCredential = function (_AuthCredential) {\n  function EmailAuthCredential(_email, _password, signInMethod) {\n    var _this13;\n    var _tenantId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    _classCallCheck(this, EmailAuthCredential);\n    _this13 = _callSuper(this, EmailAuthCredential, [\"password\", signInMethod]);\n    _this13._email = _email;\n    _this13._password = _password;\n    _this13._tenantId = _tenantId;\n    return _this13;\n  }\n  _inherits(EmailAuthCredential, _AuthCredential);\n  return _createClass(EmailAuthCredential, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        email: this._email,\n        password: this._password,\n        signInMethod: this.signInMethod,\n        tenantId: this._tenantId\n      };\n    }\n  }, {\n    key: \"_getIdTokenResponse\",\n    value: (function () {\n      var _getIdTokenResponse2 = _asyncToGenerator(function* (auth) {\n        switch (this.signInMethod) {\n          case \"password\":\n            var request = {\n              returnSecureToken: true,\n              email: this._email,\n              password: this._password,\n              clientType: \"CLIENT_TYPE_WEB\"\n            };\n            return handleRecaptchaFlow(auth, request, \"signInWithPassword\", signInWithPassword);\n          case \"emailLink\":\n            return signInWithEmailLink$1(auth, {\n              email: this._email,\n              oobCode: this._password\n            });\n          default:\n            _fail(auth, \"internal-error\");\n        }\n      });\n      function _getIdTokenResponse(_x100) {\n        return _getIdTokenResponse2.apply(this, arguments);\n      }\n      return _getIdTokenResponse;\n    }())\n  }, {\n    key: \"_linkToIdToken\",\n    value: (function () {\n      var _linkToIdToken2 = _asyncToGenerator(function* (auth, idToken) {\n        switch (this.signInMethod) {\n          case \"password\":\n            var request = {\n              idToken: idToken,\n              returnSecureToken: true,\n              email: this._email,\n              password: this._password,\n              clientType: \"CLIENT_TYPE_WEB\"\n            };\n            return handleRecaptchaFlow(auth, request, \"signUpPassword\", linkEmailPassword);\n          case \"emailLink\":\n            return signInWithEmailLinkForLinking(auth, {\n              idToken: idToken,\n              email: this._email,\n              oobCode: this._password\n            });\n          default:\n            _fail(auth, \"internal-error\");\n        }\n      });\n      function _linkToIdToken(_x101, _x102) {\n        return _linkToIdToken2.apply(this, arguments);\n      }\n      return _linkToIdToken;\n    }())\n  }, {\n    key: \"_getReauthenticationResolver\",\n    value: function _getReauthenticationResolver(auth) {\n      return this._getIdTokenResponse(auth);\n    }\n  }], [{\n    key: \"_fromEmailAndPassword\",\n    value: function _fromEmailAndPassword(email, password) {\n      return new EmailAuthCredential(email, password, \"password\");\n    }\n  }, {\n    key: \"_fromEmailAndCode\",\n    value: function _fromEmailAndCode(email, oobCode) {\n      var tenantId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return new EmailAuthCredential(email, oobCode, \"emailLink\", tenantId);\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      if ((obj === null || obj === void 0 ? void 0 : obj.email) && (obj === null || obj === void 0 ? void 0 : obj.password)) {\n        if (obj.signInMethod === \"password\") {\n          return this._fromEmailAndPassword(obj.email, obj.password);\n        } else if (obj.signInMethod === \"emailLink\") {\n          return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n        }\n      }\n      return null;\n    }\n  }]);\n}(AuthCredential);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction signInWithIdp(_x103, _x104) {\n  return _signInWithIdp.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _signInWithIdp() {\n  _signInWithIdp = _asyncToGenerator(function* (auth, request) {\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithIdp\", _addTidIfNecessary(auth, request));\n  });\n  return _signInWithIdp.apply(this, arguments);\n}\nvar IDP_REQUEST_URI$1 = 'http://localhost';\nvar OAuthCredential = function (_AuthCredential2) {\n  function OAuthCredential() {\n    var _this14;\n    _classCallCheck(this, OAuthCredential);\n    _this14 = _callSuper(this, OAuthCredential, arguments);\n    _this14.pendingToken = null;\n    return _this14;\n  }\n  _inherits(OAuthCredential, _AuthCredential2);\n  return _createClass(OAuthCredential, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        idToken: this.idToken,\n        accessToken: this.accessToken,\n        secret: this.secret,\n        nonce: this.nonce,\n        pendingToken: this.pendingToken,\n        providerId: this.providerId,\n        signInMethod: this.signInMethod\n      };\n    }\n  }, {\n    key: \"_getIdTokenResponse\",\n    value: function _getIdTokenResponse(auth) {\n      var request = this.buildRequest();\n      return signInWithIdp(auth, request);\n    }\n  }, {\n    key: \"_linkToIdToken\",\n    value: function _linkToIdToken(auth, idToken) {\n      var request = this.buildRequest();\n      request.idToken = idToken;\n      return signInWithIdp(auth, request);\n    }\n  }, {\n    key: \"_getReauthenticationResolver\",\n    value: function _getReauthenticationResolver(auth) {\n      var request = this.buildRequest();\n      request.autoCreate = false;\n      return signInWithIdp(auth, request);\n    }\n  }, {\n    key: \"buildRequest\",\n    value: function buildRequest() {\n      var request = {\n        requestUri: IDP_REQUEST_URI$1,\n        returnSecureToken: true\n      };\n      if (this.pendingToken) {\n        request.pendingToken = this.pendingToken;\n      } else {\n        var postBody = {};\n        if (this.idToken) {\n          postBody['id_token'] = this.idToken;\n        }\n        if (this.accessToken) {\n          postBody['access_token'] = this.accessToken;\n        }\n        if (this.secret) {\n          postBody['oauth_token_secret'] = this.secret;\n        }\n        postBody['providerId'] = this.providerId;\n        if (this.nonce && !this.pendingToken) {\n          postBody['nonce'] = this.nonce;\n        }\n        request.postBody = querystring(postBody);\n      }\n      return request;\n    }\n  }], [{\n    key: \"_fromParams\",\n    value: function _fromParams(params) {\n      var cred = new OAuthCredential(params.providerId, params.signInMethod);\n      if (params.idToken || params.accessToken) {\n        if (params.idToken) {\n          cred.idToken = params.idToken;\n        }\n        if (params.accessToken) {\n          cred.accessToken = params.accessToken;\n        }\n        if (params.nonce && !params.pendingToken) {\n          cred.nonce = params.nonce;\n        }\n        if (params.pendingToken) {\n          cred.pendingToken = params.pendingToken;\n        }\n      } else if (params.oauthToken && params.oauthTokenSecret) {\n        cred.accessToken = params.oauthToken;\n        cred.secret = params.oauthTokenSecret;\n      } else {\n        _fail(\"argument-error\");\n      }\n      return cred;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      var providerId = obj.providerId,\n        signInMethod = obj.signInMethod,\n        rest = __rest(obj, [\"providerId\", \"signInMethod\"]);\n      if (!providerId || !signInMethod) {\n        return null;\n      }\n      var cred = new OAuthCredential(providerId, signInMethod);\n      cred.idToken = rest.idToken || undefined;\n      cred.accessToken = rest.accessToken || undefined;\n      cred.secret = rest.secret;\n      cred.nonce = rest.nonce;\n      cred.pendingToken = rest.pendingToken || null;\n      return cred;\n    }\n  }]);\n}(AuthCredential);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction sendPhoneVerificationCode(_x105, _x106) {\n  return _sendPhoneVerificationCode.apply(this, arguments);\n}\nfunction _sendPhoneVerificationCode() {\n  _sendPhoneVerificationCode = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:sendVerificationCode\", _addTidIfNecessary(auth, request));\n  });\n  return _sendPhoneVerificationCode.apply(this, arguments);\n}\nfunction signInWithPhoneNumber$1(_x107, _x108) {\n  return _signInWithPhoneNumber$.apply(this, arguments);\n}\nfunction _signInWithPhoneNumber$() {\n  _signInWithPhoneNumber$ = _asyncToGenerator(function* (auth, request) {\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithPhoneNumber\", _addTidIfNecessary(auth, request));\n  });\n  return _signInWithPhoneNumber$.apply(this, arguments);\n}\nfunction linkWithPhoneNumber$1(_x109, _x110) {\n  return _linkWithPhoneNumber$.apply(this, arguments);\n}\nfunction _linkWithPhoneNumber$() {\n  _linkWithPhoneNumber$ = _asyncToGenerator(function* (auth, request) {\n    var response = yield _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithPhoneNumber\", _addTidIfNecessary(auth, request));\n    if (response.temporaryProof) {\n      throw _makeTaggedError(auth, \"account-exists-with-different-credential\", response);\n    }\n    return response;\n  });\n  return _linkWithPhoneNumber$.apply(this, arguments);\n}\nvar VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = _defineProperty({}, \"USER_NOT_FOUND\", \"user-not-found\");\nfunction verifyPhoneNumberForExisting(_x111, _x112) {\n  return _verifyPhoneNumberForExisting.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _verifyPhoneNumberForExisting() {\n  _verifyPhoneNumberForExisting = _asyncToGenerator(function* (auth, request) {\n    var apiRequest = Object.assign(Object.assign({}, request), {\n      operation: 'REAUTH'\n    });\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithPhoneNumber\", _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_);\n  });\n  return _verifyPhoneNumberForExisting.apply(this, arguments);\n}\nvar PhoneAuthCredential = function (_AuthCredential3) {\n  function PhoneAuthCredential(params) {\n    var _this15;\n    _classCallCheck(this, PhoneAuthCredential);\n    _this15 = _callSuper(this, PhoneAuthCredential, [\"phone\", \"phone\"]);\n    _this15.params = params;\n    return _this15;\n  }\n  _inherits(PhoneAuthCredential, _AuthCredential3);\n  return _createClass(PhoneAuthCredential, [{\n    key: \"_getIdTokenResponse\",\n    value: function _getIdTokenResponse(auth) {\n      return signInWithPhoneNumber$1(auth, this._makeVerificationRequest());\n    }\n  }, {\n    key: \"_linkToIdToken\",\n    value: function _linkToIdToken(auth, idToken) {\n      return linkWithPhoneNumber$1(auth, Object.assign({\n        idToken: idToken\n      }, this._makeVerificationRequest()));\n    }\n  }, {\n    key: \"_getReauthenticationResolver\",\n    value: function _getReauthenticationResolver(auth) {\n      return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n    }\n  }, {\n    key: \"_makeVerificationRequest\",\n    value: function _makeVerificationRequest() {\n      var _this$params = this.params,\n        temporaryProof = _this$params.temporaryProof,\n        phoneNumber = _this$params.phoneNumber,\n        verificationId = _this$params.verificationId,\n        verificationCode = _this$params.verificationCode;\n      if (temporaryProof && phoneNumber) {\n        return {\n          temporaryProof: temporaryProof,\n          phoneNumber: phoneNumber\n        };\n      }\n      return {\n        sessionInfo: verificationId,\n        code: verificationCode\n      };\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = {\n        providerId: this.providerId\n      };\n      if (this.params.phoneNumber) {\n        obj.phoneNumber = this.params.phoneNumber;\n      }\n      if (this.params.temporaryProof) {\n        obj.temporaryProof = this.params.temporaryProof;\n      }\n      if (this.params.verificationCode) {\n        obj.verificationCode = this.params.verificationCode;\n      }\n      if (this.params.verificationId) {\n        obj.verificationId = this.params.verificationId;\n      }\n      return obj;\n    }\n  }], [{\n    key: \"_fromVerification\",\n    value: function _fromVerification(verificationId, verificationCode) {\n      return new PhoneAuthCredential({\n        verificationId: verificationId,\n        verificationCode: verificationCode\n      });\n    }\n  }, {\n    key: \"_fromTokenResponse\",\n    value: function _fromTokenResponse(phoneNumber, temporaryProof) {\n      return new PhoneAuthCredential({\n        phoneNumber: phoneNumber,\n        temporaryProof: temporaryProof\n      });\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      if (typeof json === 'string') {\n        json = JSON.parse(json);\n      }\n      var _json = json,\n        verificationId = _json.verificationId,\n        verificationCode = _json.verificationCode,\n        phoneNumber = _json.phoneNumber,\n        temporaryProof = _json.temporaryProof;\n      if (!verificationCode && !verificationId && !phoneNumber && !temporaryProof) {\n        return null;\n      }\n      return new PhoneAuthCredential({\n        verificationId: verificationId,\n        verificationCode: verificationCode,\n        phoneNumber: phoneNumber,\n        temporaryProof: temporaryProof\n      });\n    }\n  }]);\n}(AuthCredential);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction parseMode(mode) {\n  switch (mode) {\n    case 'recoverEmail':\n      return \"RECOVER_EMAIL\";\n    case 'resetPassword':\n      return \"PASSWORD_RESET\";\n    case 'signIn':\n      return \"EMAIL_SIGNIN\";\n    case 'verifyEmail':\n      return \"VERIFY_EMAIL\";\n    case 'verifyAndChangeEmail':\n      return \"VERIFY_AND_CHANGE_EMAIL\";\n    case 'revertSecondFactorAddition':\n      return \"REVERT_SECOND_FACTOR_ADDITION\";\n    default:\n      return null;\n  }\n}\nfunction parseDeepLink(url) {\n  var link = querystringDecode(extractQuerystring(url))['link'];\n  var doubleDeepLink = link ? querystringDecode(extractQuerystring(link))['deep_link_id'] : null;\n  var iOSDeepLink = querystringDecode(extractQuerystring(url))['deep_link_id'];\n  var iOSDoubleDeepLink = iOSDeepLink ? querystringDecode(extractQuerystring(iOSDeepLink))['link'] : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\nvar ActionCodeURL = function () {\n  function ActionCodeURL(actionLink) {\n    _classCallCheck(this, ActionCodeURL);\n    var _a, _b, _c, _d, _e, _f;\n    var searchParams = querystringDecode(extractQuerystring(actionLink));\n    var apiKey = (_a = searchParams[\"apiKey\"]) !== null && _a !== void 0 ? _a : null;\n    var code = (_b = searchParams[\"oobCode\"]) !== null && _b !== void 0 ? _b : null;\n    var operation = parseMode((_c = searchParams[\"mode\"]) !== null && _c !== void 0 ? _c : null);\n    _assert(apiKey && code && operation, \"argument-error\");\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = (_d = searchParams[\"continueUrl\"]) !== null && _d !== void 0 ? _d : null;\n    this.languageCode = (_e = searchParams[\"languageCode\"]) !== null && _e !== void 0 ? _e : null;\n    this.tenantId = (_f = searchParams[\"tenantId\"]) !== null && _f !== void 0 ? _f : null;\n  }\n  return _createClass(ActionCodeURL, null, [{\n    key: \"parseLink\",\n    value: function parseLink(link) {\n      var actionLink = parseDeepLink(link);\n      try {\n        return new ActionCodeURL(actionLink);\n      } catch (_a) {\n        return null;\n      }\n    }\n  }]);\n}();\nfunction parseActionCodeURL(link) {\n  return ActionCodeURL.parseLink(link);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar EmailAuthProvider = function () {\n  function EmailAuthProvider() {\n    _classCallCheck(this, EmailAuthProvider);\n    this.providerId = EmailAuthProvider.PROVIDER_ID;\n  }\n  return _createClass(EmailAuthProvider, null, [{\n    key: \"credential\",\n    value: function credential(email, password) {\n      return EmailAuthCredential._fromEmailAndPassword(email, password);\n    }\n  }, {\n    key: \"credentialWithLink\",\n    value: function credentialWithLink(email, emailLink) {\n      var actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n      _assert(actionCodeUrl, \"argument-error\");\n      return EmailAuthCredential._fromEmailAndCode(email, actionCodeUrl.code, actionCodeUrl.tenantId);\n    }\n  }]);\n}();\nEmailAuthProvider.PROVIDER_ID = \"password\";\nEmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD = \"password\";\nEmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD = \"emailLink\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FederatedAuthProvider = function () {\n  function FederatedAuthProvider(providerId) {\n    _classCallCheck(this, FederatedAuthProvider);\n    this.providerId = providerId;\n    this.defaultLanguageCode = null;\n    this.customParameters = {};\n  }\n  return _createClass(FederatedAuthProvider, [{\n    key: \"setDefaultLanguage\",\n    value: function setDefaultLanguage(languageCode) {\n      this.defaultLanguageCode = languageCode;\n    }\n  }, {\n    key: \"setCustomParameters\",\n    value: function setCustomParameters(customOAuthParameters) {\n      this.customParameters = customOAuthParameters;\n      return this;\n    }\n  }, {\n    key: \"getCustomParameters\",\n    value: function getCustomParameters() {\n      return this.customParameters;\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar BaseOAuthProvider = function (_FederatedAuthProvide) {\n  function BaseOAuthProvider() {\n    var _this16;\n    _classCallCheck(this, BaseOAuthProvider);\n    _this16 = _callSuper(this, BaseOAuthProvider, arguments);\n    _this16.scopes = [];\n    return _this16;\n  }\n  _inherits(BaseOAuthProvider, _FederatedAuthProvide);\n  return _createClass(BaseOAuthProvider, [{\n    key: \"addScope\",\n    value: function addScope(scope) {\n      if (!this.scopes.includes(scope)) {\n        this.scopes.push(scope);\n      }\n      return this;\n    }\n  }, {\n    key: \"getScopes\",\n    value: function getScopes() {\n      return _toConsumableArray(this.scopes);\n    }\n  }]);\n}(FederatedAuthProvider);\nvar OAuthProvider = function (_BaseOAuthProvider) {\n  function OAuthProvider() {\n    _classCallCheck(this, OAuthProvider);\n    return _callSuper(this, OAuthProvider, arguments);\n  }\n  _inherits(OAuthProvider, _BaseOAuthProvider);\n  return _createClass(OAuthProvider, [{\n    key: \"credential\",\n    value: function credential(params) {\n      return this._credential(Object.assign(Object.assign({}, params), {\n        nonce: params.rawNonce\n      }));\n    }\n  }, {\n    key: \"_credential\",\n    value: function _credential(params) {\n      _assert(params.idToken || params.accessToken, \"argument-error\");\n      return OAuthCredential._fromParams(Object.assign(Object.assign({}, params), {\n        providerId: this.providerId,\n        signInMethod: this.providerId\n      }));\n    }\n  }], [{\n    key: \"credentialFromJSON\",\n    value: function credentialFromJSON(json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      _assert('providerId' in obj && 'signInMethod' in obj, \"argument-error\");\n      return OAuthCredential._fromParams(obj);\n    }\n  }, {\n    key: \"credentialFromResult\",\n    value: function credentialFromResult(userCredential) {\n      return OAuthProvider.oauthCredentialFromTaggedObject(userCredential);\n    }\n  }, {\n    key: \"credentialFromError\",\n    value: function credentialFromError(error) {\n      return OAuthProvider.oauthCredentialFromTaggedObject(error.customData || {});\n    }\n  }, {\n    key: \"oauthCredentialFromTaggedObject\",\n    value: function oauthCredentialFromTaggedObject(_ref13) {\n      var tokenResponse = _ref13._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var oauthIdToken = tokenResponse.oauthIdToken,\n        oauthAccessToken = tokenResponse.oauthAccessToken,\n        oauthTokenSecret = tokenResponse.oauthTokenSecret,\n        pendingToken = tokenResponse.pendingToken,\n        nonce = tokenResponse.nonce,\n        providerId = tokenResponse.providerId;\n      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {\n        return null;\n      }\n      if (!providerId) {\n        return null;\n      }\n      try {\n        return new OAuthProvider(providerId)._credential({\n          idToken: oauthIdToken,\n          accessToken: oauthAccessToken,\n          nonce: nonce,\n          pendingToken: pendingToken\n        });\n      } catch (e) {\n        return null;\n      }\n    }\n  }]);\n}(BaseOAuthProvider);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FacebookAuthProvider = function (_BaseOAuthProvider2) {\n  function FacebookAuthProvider() {\n    _classCallCheck(this, FacebookAuthProvider);\n    return _callSuper(this, FacebookAuthProvider, [\"facebook.com\"]);\n  }\n  _inherits(FacebookAuthProvider, _BaseOAuthProvider2);\n  return _createClass(FacebookAuthProvider, null, [{\n    key: \"credential\",\n    value: function credential(accessToken) {\n      return OAuthCredential._fromParams({\n        providerId: FacebookAuthProvider.PROVIDER_ID,\n        signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n        accessToken: accessToken\n      });\n    }\n  }, {\n    key: \"credentialFromResult\",\n    value: function credentialFromResult(userCredential) {\n      return FacebookAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n  }, {\n    key: \"credentialFromError\",\n    value: function credentialFromError(error) {\n      return FacebookAuthProvider.credentialFromTaggedObject(error.customData || {});\n    }\n  }, {\n    key: \"credentialFromTaggedObject\",\n    value: function credentialFromTaggedObject(_ref14) {\n      var tokenResponse = _ref14._tokenResponse;\n      if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n        return null;\n      }\n      if (!tokenResponse.oauthAccessToken) {\n        return null;\n      }\n      try {\n        return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n      } catch (_a) {\n        return null;\n      }\n    }\n  }]);\n}(BaseOAuthProvider);\nFacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD = \"facebook.com\";\nFacebookAuthProvider.PROVIDER_ID = \"facebook.com\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar GoogleAuthProvider = function (_BaseOAuthProvider3) {\n  function GoogleAuthProvider() {\n    var _this17;\n    _classCallCheck(this, GoogleAuthProvider);\n    _this17 = _callSuper(this, GoogleAuthProvider, [\"google.com\"]);\n    _this17.addScope('profile');\n    return _this17;\n  }\n  _inherits(GoogleAuthProvider, _BaseOAuthProvider3);\n  return _createClass(GoogleAuthProvider, null, [{\n    key: \"credential\",\n    value: function credential(idToken, accessToken) {\n      return OAuthCredential._fromParams({\n        providerId: GoogleAuthProvider.PROVIDER_ID,\n        signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n        idToken: idToken,\n        accessToken: accessToken\n      });\n    }\n  }, {\n    key: \"credentialFromResult\",\n    value: function credentialFromResult(userCredential) {\n      return GoogleAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n  }, {\n    key: \"credentialFromError\",\n    value: function credentialFromError(error) {\n      return GoogleAuthProvider.credentialFromTaggedObject(error.customData || {});\n    }\n  }, {\n    key: \"credentialFromTaggedObject\",\n    value: function credentialFromTaggedObject(_ref15) {\n      var tokenResponse = _ref15._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var oauthIdToken = tokenResponse.oauthIdToken,\n        oauthAccessToken = tokenResponse.oauthAccessToken;\n      if (!oauthIdToken && !oauthAccessToken) {\n        return null;\n      }\n      try {\n        return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n      } catch (_a) {\n        return null;\n      }\n    }\n  }]);\n}(BaseOAuthProvider);\nGoogleAuthProvider.GOOGLE_SIGN_IN_METHOD = \"google.com\";\nGoogleAuthProvider.PROVIDER_ID = \"google.com\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar GithubAuthProvider = function (_BaseOAuthProvider4) {\n  function GithubAuthProvider() {\n    _classCallCheck(this, GithubAuthProvider);\n    return _callSuper(this, GithubAuthProvider, [\"github.com\"]);\n  }\n  _inherits(GithubAuthProvider, _BaseOAuthProvider4);\n  return _createClass(GithubAuthProvider, null, [{\n    key: \"credential\",\n    value: function credential(accessToken) {\n      return OAuthCredential._fromParams({\n        providerId: GithubAuthProvider.PROVIDER_ID,\n        signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n        accessToken: accessToken\n      });\n    }\n  }, {\n    key: \"credentialFromResult\",\n    value: function credentialFromResult(userCredential) {\n      return GithubAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n  }, {\n    key: \"credentialFromError\",\n    value: function credentialFromError(error) {\n      return GithubAuthProvider.credentialFromTaggedObject(error.customData || {});\n    }\n  }, {\n    key: \"credentialFromTaggedObject\",\n    value: function credentialFromTaggedObject(_ref16) {\n      var tokenResponse = _ref16._tokenResponse;\n      if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n        return null;\n      }\n      if (!tokenResponse.oauthAccessToken) {\n        return null;\n      }\n      try {\n        return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n      } catch (_a) {\n        return null;\n      }\n    }\n  }]);\n}(BaseOAuthProvider);\nGithubAuthProvider.GITHUB_SIGN_IN_METHOD = \"github.com\";\nGithubAuthProvider.PROVIDER_ID = \"github.com\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar IDP_REQUEST_URI = 'http://localhost';\nvar SAMLAuthCredential = function (_AuthCredential4) {\n  function SAMLAuthCredential(providerId, pendingToken) {\n    var _this18;\n    _classCallCheck(this, SAMLAuthCredential);\n    _this18 = _callSuper(this, SAMLAuthCredential, [providerId, providerId]);\n    _this18.pendingToken = pendingToken;\n    return _this18;\n  }\n  _inherits(SAMLAuthCredential, _AuthCredential4);\n  return _createClass(SAMLAuthCredential, [{\n    key: \"_getIdTokenResponse\",\n    value: function _getIdTokenResponse(auth) {\n      var request = this.buildRequest();\n      return signInWithIdp(auth, request);\n    }\n  }, {\n    key: \"_linkToIdToken\",\n    value: function _linkToIdToken(auth, idToken) {\n      var request = this.buildRequest();\n      request.idToken = idToken;\n      return signInWithIdp(auth, request);\n    }\n  }, {\n    key: \"_getReauthenticationResolver\",\n    value: function _getReauthenticationResolver(auth) {\n      var request = this.buildRequest();\n      request.autoCreate = false;\n      return signInWithIdp(auth, request);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        signInMethod: this.signInMethod,\n        providerId: this.providerId,\n        pendingToken: this.pendingToken\n      };\n    }\n  }, {\n    key: \"buildRequest\",\n    value: function buildRequest() {\n      return {\n        requestUri: IDP_REQUEST_URI,\n        returnSecureToken: true,\n        pendingToken: this.pendingToken\n      };\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      var providerId = obj.providerId,\n        signInMethod = obj.signInMethod,\n        pendingToken = obj.pendingToken;\n      if (!providerId || !signInMethod || !pendingToken || providerId !== signInMethod) {\n        return null;\n      }\n      return new SAMLAuthCredential(providerId, pendingToken);\n    }\n  }, {\n    key: \"_create\",\n    value: function _create(providerId, pendingToken) {\n      return new SAMLAuthCredential(providerId, pendingToken);\n    }\n  }]);\n}(AuthCredential);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SAML_PROVIDER_PREFIX = 'saml.';\nvar SAMLAuthProvider = function (_FederatedAuthProvide2) {\n  function SAMLAuthProvider(providerId) {\n    _classCallCheck(this, SAMLAuthProvider);\n    _assert(providerId.startsWith(SAML_PROVIDER_PREFIX), \"argument-error\");\n    return _callSuper(this, SAMLAuthProvider, [providerId]);\n  }\n  _inherits(SAMLAuthProvider, _FederatedAuthProvide2);\n  return _createClass(SAMLAuthProvider, null, [{\n    key: \"credentialFromResult\",\n    value: function credentialFromResult(userCredential) {\n      return SAMLAuthProvider.samlCredentialFromTaggedObject(userCredential);\n    }\n  }, {\n    key: \"credentialFromError\",\n    value: function credentialFromError(error) {\n      return SAMLAuthProvider.samlCredentialFromTaggedObject(error.customData || {});\n    }\n  }, {\n    key: \"credentialFromJSON\",\n    value: function credentialFromJSON(json) {\n      var credential = SAMLAuthCredential.fromJSON(json);\n      _assert(credential, \"argument-error\");\n      return credential;\n    }\n  }, {\n    key: \"samlCredentialFromTaggedObject\",\n    value: function samlCredentialFromTaggedObject(_ref17) {\n      var tokenResponse = _ref17._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var pendingToken = tokenResponse.pendingToken,\n        providerId = tokenResponse.providerId;\n      if (!pendingToken || !providerId) {\n        return null;\n      }\n      try {\n        return SAMLAuthCredential._create(providerId, pendingToken);\n      } catch (e) {\n        return null;\n      }\n    }\n  }]);\n}(FederatedAuthProvider);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar TwitterAuthProvider = function (_BaseOAuthProvider5) {\n  function TwitterAuthProvider() {\n    _classCallCheck(this, TwitterAuthProvider);\n    return _callSuper(this, TwitterAuthProvider, [\"twitter.com\"]);\n  }\n  _inherits(TwitterAuthProvider, _BaseOAuthProvider5);\n  return _createClass(TwitterAuthProvider, null, [{\n    key: \"credential\",\n    value: function credential(token, secret) {\n      return OAuthCredential._fromParams({\n        providerId: TwitterAuthProvider.PROVIDER_ID,\n        signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n        oauthToken: token,\n        oauthTokenSecret: secret\n      });\n    }\n  }, {\n    key: \"credentialFromResult\",\n    value: function credentialFromResult(userCredential) {\n      return TwitterAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n  }, {\n    key: \"credentialFromError\",\n    value: function credentialFromError(error) {\n      return TwitterAuthProvider.credentialFromTaggedObject(error.customData || {});\n    }\n  }, {\n    key: \"credentialFromTaggedObject\",\n    value: function credentialFromTaggedObject(_ref18) {\n      var tokenResponse = _ref18._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var oauthAccessToken = tokenResponse.oauthAccessToken,\n        oauthTokenSecret = tokenResponse.oauthTokenSecret;\n      if (!oauthAccessToken || !oauthTokenSecret) {\n        return null;\n      }\n      try {\n        return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n      } catch (_a) {\n        return null;\n      }\n    }\n  }]);\n}(BaseOAuthProvider);\nTwitterAuthProvider.TWITTER_SIGN_IN_METHOD = \"twitter.com\";\nTwitterAuthProvider.PROVIDER_ID = \"twitter.com\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction signUp(_x113, _x114) {\n  return _signUp.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _signUp() {\n  _signUp = _asyncToGenerator(function* (auth, request) {\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signUp\", _addTidIfNecessary(auth, request));\n  });\n  return _signUp.apply(this, arguments);\n}\nvar UserCredentialImpl = function () {\n  function UserCredentialImpl(params) {\n    _classCallCheck(this, UserCredentialImpl);\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n  return _createClass(UserCredentialImpl, null, [{\n    key: \"_fromIdTokenResponse\",\n    value: function () {\n      var _fromIdTokenResponse3 = _asyncToGenerator(function* (auth, operationType, idTokenResponse) {\n        var isAnonymous = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var user = yield UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous);\n        var providerId = providerIdForResponse(idTokenResponse);\n        var userCred = new UserCredentialImpl({\n          user: user,\n          providerId: providerId,\n          _tokenResponse: idTokenResponse,\n          operationType: operationType\n        });\n        return userCred;\n      });\n      function _fromIdTokenResponse(_x115, _x116, _x117) {\n        return _fromIdTokenResponse3.apply(this, arguments);\n      }\n      return _fromIdTokenResponse;\n    }()\n  }, {\n    key: \"_forOperation\",\n    value: function () {\n      var _forOperation2 = _asyncToGenerator(function* (user, operationType, response) {\n        yield user._updateTokensIfNecessary(response, true);\n        var providerId = providerIdForResponse(response);\n        return new UserCredentialImpl({\n          user: user,\n          providerId: providerId,\n          _tokenResponse: response,\n          operationType: operationType\n        });\n      });\n      function _forOperation(_x118, _x119, _x120) {\n        return _forOperation2.apply(this, arguments);\n      }\n      return _forOperation;\n    }()\n  }]);\n}();\nfunction providerIdForResponse(response) {\n  if (response.providerId) {\n    return response.providerId;\n  }\n  if ('phoneNumber' in response) {\n    return \"phone\";\n  }\n  return null;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction signInAnonymously(_x121) {\n  return _signInAnonymously.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _signInAnonymously() {\n  _signInAnonymously = _asyncToGenerator(function* (auth) {\n    var _a;\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var authInternal = _castAuth(auth);\n    yield authInternal._initializationPromise;\n    if ((_a = authInternal.currentUser) === null || _a === void 0 ? void 0 : _a.isAnonymous) {\n      return new UserCredentialImpl({\n        user: authInternal.currentUser,\n        providerId: null,\n        operationType: \"signIn\"\n      });\n    }\n    var response = yield signUp(authInternal, {\n      returnSecureToken: true\n    });\n    var userCredential = yield UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\", response, true);\n    yield authInternal._updateCurrentUser(userCredential.user);\n    return userCredential;\n  });\n  return _signInAnonymously.apply(this, arguments);\n}\nvar MultiFactorError = function (_FirebaseError) {\n  function MultiFactorError(auth, error, operationType, user) {\n    var _this19;\n    _classCallCheck(this, MultiFactorError);\n    var _a;\n    _this19 = _callSuper(this, MultiFactorError, [error.code, error.message]);\n    _this19.operationType = operationType;\n    _this19.user = user;\n    Object.setPrototypeOf(_this19, MultiFactorError.prototype);\n    _this19.customData = {\n      appName: auth.name,\n      tenantId: (_a = auth.tenantId) !== null && _a !== void 0 ? _a : undefined,\n      _serverResponse: error.customData._serverResponse,\n      operationType: operationType\n    };\n    return _this19;\n  }\n  _inherits(MultiFactorError, _FirebaseError);\n  return _createClass(MultiFactorError, null, [{\n    key: \"_fromErrorAndOperation\",\n    value: function _fromErrorAndOperation(auth, error, operationType, user) {\n      return new MultiFactorError(auth, error, operationType, user);\n    }\n  }]);\n}(FirebaseError);\nfunction _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user) {\n  var idTokenProvider = operationType === \"reauthenticate\" ? credential._getReauthenticationResolver(auth) : credential._getIdTokenResponse(auth);\n  return idTokenProvider.catch(function (error) {\n    if (error.code === `auth/${\"multi-factor-auth-required\"}`) {\n      throw MultiFactorError._fromErrorAndOperation(auth, error, operationType, user);\n    }\n    throw error;\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction providerDataAsNames(providerData) {\n  return new Set(providerData.map(function (_ref19) {\n    var providerId = _ref19.providerId;\n    return providerId;\n  }).filter(function (pid) {\n    return !!pid;\n  }));\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction unlink(_x122, _x123) {\n  return _unlink.apply(this, arguments);\n}\nfunction _unlink() {\n  _unlink = _asyncToGenerator(function* (user, providerId) {\n    var userInternal = getModularInstance(user);\n    yield _assertLinkedStatus(true, userInternal, providerId);\n    var _yield$deleteLinkedAc = yield deleteLinkedAccounts(userInternal.auth, {\n        idToken: yield userInternal.getIdToken(),\n        deleteProvider: [providerId]\n      }),\n      providerUserInfo = _yield$deleteLinkedAc.providerUserInfo;\n    var providersLeft = providerDataAsNames(providerUserInfo || []);\n    userInternal.providerData = userInternal.providerData.filter(function (pd) {\n      return providersLeft.has(pd.providerId);\n    });\n    if (!providersLeft.has(\"phone\")) {\n      userInternal.phoneNumber = null;\n    }\n    yield userInternal.auth._persistUserIfCurrent(userInternal);\n    return userInternal;\n  });\n  return _unlink.apply(this, arguments);\n}\nfunction _link$1(_x124, _x125) {\n  return _link$.apply(this, arguments);\n}\nfunction _link$() {\n  _link$ = _asyncToGenerator(function* (user, credential) {\n    var bypassAuthState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var response = yield _logoutIfInvalidated(user, credential._linkToIdToken(user.auth, yield user.getIdToken()), bypassAuthState);\n    return UserCredentialImpl._forOperation(user, \"link\", response);\n  });\n  return _link$.apply(this, arguments);\n}\nfunction _assertLinkedStatus(_x126, _x127, _x128) {\n  return _assertLinkedStatus2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _assertLinkedStatus2() {\n  _assertLinkedStatus2 = _asyncToGenerator(function* (expected, user, provider) {\n    yield _reloadWithoutSaving(user);\n    var providerIds = providerDataAsNames(user.providerData);\n    var code = expected === false ? \"provider-already-linked\" : \"no-such-provider\";\n    _assert(providerIds.has(provider) === expected, user.auth, code);\n  });\n  return _assertLinkedStatus2.apply(this, arguments);\n}\nfunction _reauthenticate(_x129, _x130) {\n  return _reauthenticate2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _reauthenticate2() {\n  _reauthenticate2 = _asyncToGenerator(function* (user, credential) {\n    var bypassAuthState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var auth = user.auth;\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var operationType = \"reauthenticate\";\n    try {\n      var response = yield _logoutIfInvalidated(user, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user), bypassAuthState);\n      _assert(response.idToken, auth, \"internal-error\");\n      var parsed = _parseToken(response.idToken);\n      _assert(parsed, auth, \"internal-error\");\n      var localId = parsed.sub;\n      _assert(user.uid === localId, auth, \"user-mismatch\");\n      return UserCredentialImpl._forOperation(user, operationType, response);\n    } catch (e) {\n      if ((e === null || e === void 0 ? void 0 : e.code) === `auth/${\"user-not-found\"}`) {\n        _fail(auth, \"user-mismatch\");\n      }\n      throw e;\n    }\n  });\n  return _reauthenticate2.apply(this, arguments);\n}\nfunction _signInWithCredential(_x131, _x132) {\n  return _signInWithCredential2.apply(this, arguments);\n}\nfunction _signInWithCredential2() {\n  _signInWithCredential2 = _asyncToGenerator(function* (auth, credential) {\n    var bypassAuthState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var operationType = \"signIn\";\n    var response = yield _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential);\n    var userCredential = yield UserCredentialImpl._fromIdTokenResponse(auth, operationType, response);\n    if (!bypassAuthState) {\n      yield auth._updateCurrentUser(userCredential.user);\n    }\n    return userCredential;\n  });\n  return _signInWithCredential2.apply(this, arguments);\n}\nfunction signInWithCredential(_x133, _x134) {\n  return _signInWithCredential3.apply(this, arguments);\n}\nfunction _signInWithCredential3() {\n  _signInWithCredential3 = _asyncToGenerator(function* (auth, credential) {\n    return _signInWithCredential(_castAuth(auth), credential);\n  });\n  return _signInWithCredential3.apply(this, arguments);\n}\nfunction linkWithCredential(_x135, _x136) {\n  return _linkWithCredential.apply(this, arguments);\n}\nfunction _linkWithCredential() {\n  _linkWithCredential = _asyncToGenerator(function* (user, credential) {\n    var userInternal = getModularInstance(user);\n    yield _assertLinkedStatus(false, userInternal, credential.providerId);\n    return _link$1(userInternal, credential);\n  });\n  return _linkWithCredential.apply(this, arguments);\n}\nfunction reauthenticateWithCredential(_x137, _x138) {\n  return _reauthenticateWithCredential.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _reauthenticateWithCredential() {\n  _reauthenticateWithCredential = _asyncToGenerator(function* (user, credential) {\n    return _reauthenticate(getModularInstance(user), credential);\n  });\n  return _reauthenticateWithCredential.apply(this, arguments);\n}\nfunction signInWithCustomToken$1(_x139, _x140) {\n  return _signInWithCustomToken$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _signInWithCustomToken$() {\n  _signInWithCustomToken$ = _asyncToGenerator(function* (auth, request) {\n    return _performSignInRequest(auth, \"POST\", \"/v1/accounts:signInWithCustomToken\", _addTidIfNecessary(auth, request));\n  });\n  return _signInWithCustomToken$.apply(this, arguments);\n}\nfunction signInWithCustomToken(_x141, _x142) {\n  return _signInWithCustomToken.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _signInWithCustomToken() {\n  _signInWithCustomToken = _asyncToGenerator(function* (auth, customToken) {\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var authInternal = _castAuth(auth);\n    var response = yield signInWithCustomToken$1(authInternal, {\n      token: customToken,\n      returnSecureToken: true\n    });\n    var cred = yield UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\", response);\n    yield authInternal._updateCurrentUser(cred.user);\n    return cred;\n  });\n  return _signInWithCustomToken.apply(this, arguments);\n}\nvar MultiFactorInfoImpl = function () {\n  function MultiFactorInfoImpl(factorId, response) {\n    _classCallCheck(this, MultiFactorInfoImpl);\n    this.factorId = factorId;\n    this.uid = response.mfaEnrollmentId;\n    this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n    this.displayName = response.displayName;\n  }\n  return _createClass(MultiFactorInfoImpl, null, [{\n    key: \"_fromServerResponse\",\n    value: function _fromServerResponse(auth, enrollment) {\n      if ('phoneInfo' in enrollment) {\n        return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n      } else if ('totpInfo' in enrollment) {\n        return TotpMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n      }\n      return _fail(auth, \"internal-error\");\n    }\n  }]);\n}();\nvar PhoneMultiFactorInfoImpl = function (_MultiFactorInfoImpl) {\n  function PhoneMultiFactorInfoImpl(response) {\n    var _this20;\n    _classCallCheck(this, PhoneMultiFactorInfoImpl);\n    _this20 = _callSuper(this, PhoneMultiFactorInfoImpl, [\"phone\", response]);\n    _this20.phoneNumber = response.phoneInfo;\n    return _this20;\n  }\n  _inherits(PhoneMultiFactorInfoImpl, _MultiFactorInfoImpl);\n  return _createClass(PhoneMultiFactorInfoImpl, null, [{\n    key: \"_fromServerResponse\",\n    value: function _fromServerResponse(_auth, enrollment) {\n      return new PhoneMultiFactorInfoImpl(enrollment);\n    }\n  }]);\n}(MultiFactorInfoImpl);\nvar TotpMultiFactorInfoImpl = function (_MultiFactorInfoImpl2) {\n  function TotpMultiFactorInfoImpl(response) {\n    _classCallCheck(this, TotpMultiFactorInfoImpl);\n    return _callSuper(this, TotpMultiFactorInfoImpl, [\"totp\", response]);\n  }\n  _inherits(TotpMultiFactorInfoImpl, _MultiFactorInfoImpl2);\n  return _createClass(TotpMultiFactorInfoImpl, null, [{\n    key: \"_fromServerResponse\",\n    value: function _fromServerResponse(_auth, enrollment) {\n      return new TotpMultiFactorInfoImpl(enrollment);\n    }\n  }]);\n}(MultiFactorInfoImpl);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _setActionCodeSettingsOnRequest(auth, request, actionCodeSettings) {\n  var _a;\n  _assert(((_a = actionCodeSettings.url) === null || _a === void 0 ? void 0 : _a.length) > 0, auth, \"invalid-continue-uri\");\n  _assert(typeof actionCodeSettings.dynamicLinkDomain === 'undefined' || actionCodeSettings.dynamicLinkDomain.length > 0, auth, \"invalid-dynamic-link-domain\");\n  request.continueUrl = actionCodeSettings.url;\n  request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n  request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n  if (actionCodeSettings.iOS) {\n    _assert(actionCodeSettings.iOS.bundleId.length > 0, auth, \"missing-ios-bundle-id\");\n    request.iOSBundleId = actionCodeSettings.iOS.bundleId;\n  }\n  if (actionCodeSettings.android) {\n    _assert(actionCodeSettings.android.packageName.length > 0, auth, \"missing-android-pkg-name\");\n    request.androidInstallApp = actionCodeSettings.android.installApp;\n    request.androidMinimumVersionCode = actionCodeSettings.android.minimumVersion;\n    request.androidPackageName = actionCodeSettings.android.packageName;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction recachePasswordPolicy(_x143) {\n  return _recachePasswordPolicy.apply(this, arguments);\n}\nfunction _recachePasswordPolicy() {\n  _recachePasswordPolicy = _asyncToGenerator(function* (auth) {\n    var authInternal = _castAuth(auth);\n    if (authInternal._getPasswordPolicyInternal()) {\n      yield authInternal._updatePasswordPolicy();\n    }\n  });\n  return _recachePasswordPolicy.apply(this, arguments);\n}\nfunction sendPasswordResetEmail(_x144, _x145, _x146) {\n  return _sendPasswordResetEmail.apply(this, arguments);\n}\nfunction _sendPasswordResetEmail() {\n  _sendPasswordResetEmail = _asyncToGenerator(function* (auth, email, actionCodeSettings) {\n    var authInternal = _castAuth(auth);\n    var request = {\n      requestType: \"PASSWORD_RESET\",\n      email: email,\n      clientType: \"CLIENT_TYPE_WEB\"\n    };\n    if (actionCodeSettings) {\n      _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n    }\n    yield handleRecaptchaFlow(authInternal, request, \"getOobCode\", sendPasswordResetEmail$1);\n  });\n  return _sendPasswordResetEmail.apply(this, arguments);\n}\nfunction confirmPasswordReset(_x147, _x148, _x149) {\n  return _confirmPasswordReset.apply(this, arguments);\n}\nfunction _confirmPasswordReset() {\n  _confirmPasswordReset = _asyncToGenerator(function* (auth, oobCode, newPassword) {\n    yield resetPassword(getModularInstance(auth), {\n      oobCode: oobCode,\n      newPassword: newPassword\n    }).catch(function () {\n      var _ref44 = _asyncToGenerator(function* (error) {\n        if (error.code === `auth/${\"password-does-not-meet-requirements\"}`) {\n          void recachePasswordPolicy(auth);\n        }\n        throw error;\n      });\n      return function (_x290) {\n        return _ref44.apply(this, arguments);\n      };\n    }());\n  });\n  return _confirmPasswordReset.apply(this, arguments);\n}\nfunction applyActionCode(_x150, _x151) {\n  return _applyActionCode.apply(this, arguments);\n}\nfunction _applyActionCode() {\n  _applyActionCode = _asyncToGenerator(function* (auth, oobCode) {\n    yield applyActionCode$1(getModularInstance(auth), {\n      oobCode: oobCode\n    });\n  });\n  return _applyActionCode.apply(this, arguments);\n}\nfunction checkActionCode(_x152, _x153) {\n  return _checkActionCode.apply(this, arguments);\n}\nfunction _checkActionCode() {\n  _checkActionCode = _asyncToGenerator(function* (auth, oobCode) {\n    var authModular = getModularInstance(auth);\n    var response = yield resetPassword(authModular, {\n      oobCode: oobCode\n    });\n    var operation = response.requestType;\n    _assert(operation, authModular, \"internal-error\");\n    switch (operation) {\n      case \"EMAIL_SIGNIN\":\n        break;\n      case \"VERIFY_AND_CHANGE_EMAIL\":\n        _assert(response.newEmail, authModular, \"internal-error\");\n        break;\n      case \"REVERT_SECOND_FACTOR_ADDITION\":\n        _assert(response.mfaInfo, authModular, \"internal-error\");\n      default:\n        _assert(response.email, authModular, \"internal-error\");\n    }\n    var multiFactorInfo = null;\n    if (response.mfaInfo) {\n      multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(_castAuth(authModular), response.mfaInfo);\n    }\n    return {\n      data: {\n        email: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" ? response.newEmail : response.email) || null,\n        previousEmail: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" ? response.email : response.newEmail) || null,\n        multiFactorInfo: multiFactorInfo\n      },\n      operation: operation\n    };\n  });\n  return _checkActionCode.apply(this, arguments);\n}\nfunction verifyPasswordResetCode(_x154, _x155) {\n  return _verifyPasswordResetCode.apply(this, arguments);\n}\nfunction _verifyPasswordResetCode() {\n  _verifyPasswordResetCode = _asyncToGenerator(function* (auth, code) {\n    var _yield$checkActionCod = yield checkActionCode(getModularInstance(auth), code),\n      data = _yield$checkActionCod.data;\n    return data.email;\n  });\n  return _verifyPasswordResetCode.apply(this, arguments);\n}\nfunction createUserWithEmailAndPassword(_x156, _x157, _x158) {\n  return _createUserWithEmailAndPassword.apply(this, arguments);\n}\nfunction _createUserWithEmailAndPassword() {\n  _createUserWithEmailAndPassword = _asyncToGenerator(function* (auth, email, password) {\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var authInternal = _castAuth(auth);\n    var request = {\n      returnSecureToken: true,\n      email: email,\n      password: password,\n      clientType: \"CLIENT_TYPE_WEB\"\n    };\n    var signUpResponse = handleRecaptchaFlow(authInternal, request, \"signUpPassword\", signUp);\n    var response = yield signUpResponse.catch(function (error) {\n      if (error.code === `auth/${\"password-does-not-meet-requirements\"}`) {\n        void recachePasswordPolicy(auth);\n      }\n      throw error;\n    });\n    var userCredential = yield UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\", response);\n    yield authInternal._updateCurrentUser(userCredential.user);\n    return userCredential;\n  });\n  return _createUserWithEmailAndPassword.apply(this, arguments);\n}\nfunction signInWithEmailAndPassword(auth, email, password) {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n  }\n  return signInWithCredential(getModularInstance(auth), EmailAuthProvider.credential(email, password)).catch(function () {\n    var _ref20 = _asyncToGenerator(function* (error) {\n      if (error.code === `auth/${\"password-does-not-meet-requirements\"}`) {\n        void recachePasswordPolicy(auth);\n      }\n      throw error;\n    });\n    return function (_x159) {\n      return _ref20.apply(this, arguments);\n    };\n  }());\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction sendSignInLinkToEmail(_x160, _x161, _x162) {\n  return _sendSignInLinkToEmail.apply(this, arguments);\n}\nfunction _sendSignInLinkToEmail() {\n  _sendSignInLinkToEmail = _asyncToGenerator(function* (auth, email, actionCodeSettings) {\n    var authInternal = _castAuth(auth);\n    var request = {\n      requestType: \"EMAIL_SIGNIN\",\n      email: email,\n      clientType: \"CLIENT_TYPE_WEB\"\n    };\n    function setActionCodeSettings(request, actionCodeSettings) {\n      _assert(actionCodeSettings.handleCodeInApp, authInternal, \"argument-error\");\n      if (actionCodeSettings) {\n        _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n      }\n    }\n    setActionCodeSettings(request, actionCodeSettings);\n    yield handleRecaptchaFlow(authInternal, request, \"getOobCode\", sendSignInLinkToEmail$1);\n  });\n  return _sendSignInLinkToEmail.apply(this, arguments);\n}\nfunction isSignInWithEmailLink(auth, emailLink) {\n  var actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n  return (actionCodeUrl === null || actionCodeUrl === void 0 ? void 0 : actionCodeUrl.operation) === \"EMAIL_SIGNIN\";\n}\nfunction signInWithEmailLink(_x163, _x164, _x165) {\n  return _signInWithEmailLink.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _signInWithEmailLink() {\n  _signInWithEmailLink = _asyncToGenerator(function* (auth, email, emailLink) {\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var authModular = getModularInstance(auth);\n    var credential = EmailAuthProvider.credentialWithLink(email, emailLink || _getCurrentUrl());\n    _assert(credential._tenantId === (authModular.tenantId || null), authModular, \"tenant-id-mismatch\");\n    return signInWithCredential(authModular, credential);\n  });\n  return _signInWithEmailLink.apply(this, arguments);\n}\nfunction createAuthUri(_x166, _x167) {\n  return _createAuthUri.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _createAuthUri() {\n  _createAuthUri = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:createAuthUri\", _addTidIfNecessary(auth, request));\n  });\n  return _createAuthUri.apply(this, arguments);\n}\nfunction fetchSignInMethodsForEmail(_x168, _x169) {\n  return _fetchSignInMethodsForEmail.apply(this, arguments);\n}\nfunction _fetchSignInMethodsForEmail() {\n  _fetchSignInMethodsForEmail = _asyncToGenerator(function* (auth, email) {\n    var continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n    var request = {\n      identifier: email,\n      continueUri: continueUri\n    };\n    var _yield$createAuthUri = yield createAuthUri(getModularInstance(auth), request),\n      signinMethods = _yield$createAuthUri.signinMethods;\n    return signinMethods || [];\n  });\n  return _fetchSignInMethodsForEmail.apply(this, arguments);\n}\nfunction sendEmailVerification(_x170, _x171) {\n  return _sendEmailVerification.apply(this, arguments);\n}\nfunction _sendEmailVerification() {\n  _sendEmailVerification = _asyncToGenerator(function* (user, actionCodeSettings) {\n    var userInternal = getModularInstance(user);\n    var idToken = yield user.getIdToken();\n    var request = {\n      requestType: \"VERIFY_EMAIL\",\n      idToken: idToken\n    };\n    if (actionCodeSettings) {\n      _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\n    }\n    var _yield$sendEmailVerif = yield sendEmailVerification$1(userInternal.auth, request),\n      email = _yield$sendEmailVerif.email;\n    if (email !== user.email) {\n      yield user.reload();\n    }\n  });\n  return _sendEmailVerification.apply(this, arguments);\n}\nfunction verifyBeforeUpdateEmail(_x172, _x173, _x174) {\n  return _verifyBeforeUpdateEmail.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _verifyBeforeUpdateEmail() {\n  _verifyBeforeUpdateEmail = _asyncToGenerator(function* (user, newEmail, actionCodeSettings) {\n    var userInternal = getModularInstance(user);\n    var idToken = yield user.getIdToken();\n    var request = {\n      requestType: \"VERIFY_AND_CHANGE_EMAIL\",\n      idToken: idToken,\n      newEmail: newEmail\n    };\n    if (actionCodeSettings) {\n      _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\n    }\n    var _yield$verifyAndChang = yield verifyAndChangeEmail(userInternal.auth, request),\n      email = _yield$verifyAndChang.email;\n    if (email !== user.email) {\n      yield user.reload();\n    }\n  });\n  return _verifyBeforeUpdateEmail.apply(this, arguments);\n}\nfunction updateProfile$1(_x175, _x176) {\n  return _updateProfile$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _updateProfile$() {\n  _updateProfile$ = _asyncToGenerator(function* (auth, request) {\n    return _performApiRequest(auth, \"POST\", \"/v1/accounts:update\", request);\n  });\n  return _updateProfile$.apply(this, arguments);\n}\nfunction updateProfile(_x177, _x178) {\n  return _updateProfile.apply(this, arguments);\n}\nfunction _updateProfile() {\n  _updateProfile = _asyncToGenerator(function* (user, _ref21) {\n    var displayName = _ref21.displayName,\n      photoUrl = _ref21.photoURL;\n    if (displayName === undefined && photoUrl === undefined) {\n      return;\n    }\n    var userInternal = getModularInstance(user);\n    var idToken = yield userInternal.getIdToken();\n    var profileRequest = {\n      idToken: idToken,\n      displayName: displayName,\n      photoUrl: photoUrl,\n      returnSecureToken: true\n    };\n    var response = yield _logoutIfInvalidated(userInternal, updateProfile$1(userInternal.auth, profileRequest));\n    userInternal.displayName = response.displayName || null;\n    userInternal.photoURL = response.photoUrl || null;\n    var passwordProvider = userInternal.providerData.find(function (_ref45) {\n      var providerId = _ref45.providerId;\n      return providerId === \"password\";\n    });\n    if (passwordProvider) {\n      passwordProvider.displayName = userInternal.displayName;\n      passwordProvider.photoURL = userInternal.photoURL;\n    }\n    yield userInternal._updateTokensIfNecessary(response);\n  });\n  return _updateProfile.apply(this, arguments);\n}\nfunction updateEmail(user, newEmail) {\n  var userInternal = getModularInstance(user);\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth));\n  }\n  return updateEmailOrPassword(userInternal, newEmail, null);\n}\nfunction updatePassword(user, newPassword) {\n  return updateEmailOrPassword(getModularInstance(user), null, newPassword);\n}\nfunction updateEmailOrPassword(_x179, _x180, _x181) {\n  return _updateEmailOrPassword.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _updateEmailOrPassword() {\n  _updateEmailOrPassword = _asyncToGenerator(function* (user, email, password) {\n    var auth = user.auth;\n    var idToken = yield user.getIdToken();\n    var request = {\n      idToken: idToken,\n      returnSecureToken: true\n    };\n    if (email) {\n      request.email = email;\n    }\n    if (password) {\n      request.password = password;\n    }\n    var response = yield _logoutIfInvalidated(user, updateEmailPassword(auth, request));\n    yield user._updateTokensIfNecessary(response, true);\n  });\n  return _updateEmailOrPassword.apply(this, arguments);\n}\nfunction _fromIdTokenResponse(idTokenResponse) {\n  var _a, _b;\n  if (!idTokenResponse) {\n    return null;\n  }\n  var providerId = idTokenResponse.providerId;\n  var profile = idTokenResponse.rawUserInfo ? JSON.parse(idTokenResponse.rawUserInfo) : {};\n  var isNewUser = idTokenResponse.isNewUser || idTokenResponse.kind === \"identitytoolkit#SignupNewUserResponse\";\n  if (!providerId && (idTokenResponse === null || idTokenResponse === void 0 ? void 0 : idTokenResponse.idToken)) {\n    var signInProvider = (_b = (_a = _parseToken(idTokenResponse.idToken)) === null || _a === void 0 ? void 0 : _a.firebase) === null || _b === void 0 ? void 0 : _b['sign_in_provider'];\n    if (signInProvider) {\n      var filteredProviderId = signInProvider !== \"anonymous\" && signInProvider !== \"custom\" ? signInProvider : null;\n      return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n    }\n  }\n  if (!providerId) {\n    return null;\n  }\n  switch (providerId) {\n    case \"facebook.com\":\n      return new FacebookAdditionalUserInfo(isNewUser, profile);\n    case \"github.com\":\n      return new GithubAdditionalUserInfo(isNewUser, profile);\n    case \"google.com\":\n      return new GoogleAdditionalUserInfo(isNewUser, profile);\n    case \"twitter.com\":\n      return new TwitterAdditionalUserInfo(isNewUser, profile, idTokenResponse.screenName || null);\n    case \"custom\":\n    case \"anonymous\":\n      return new GenericAdditionalUserInfo(isNewUser, null);\n    default:\n      return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n  }\n}\nvar GenericAdditionalUserInfo = _createClass(function GenericAdditionalUserInfo(isNewUser, providerId) {\n  var profile = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  _classCallCheck(this, GenericAdditionalUserInfo);\n  this.isNewUser = isNewUser;\n  this.providerId = providerId;\n  this.profile = profile;\n});\nvar FederatedAdditionalUserInfoWithUsername = function (_GenericAdditionalUse) {\n  function FederatedAdditionalUserInfoWithUsername(isNewUser, providerId, profile, username) {\n    var _this21;\n    _classCallCheck(this, FederatedAdditionalUserInfoWithUsername);\n    _this21 = _callSuper(this, FederatedAdditionalUserInfoWithUsername, [isNewUser, providerId, profile]);\n    _this21.username = username;\n    return _this21;\n  }\n  _inherits(FederatedAdditionalUserInfoWithUsername, _GenericAdditionalUse);\n  return _createClass(FederatedAdditionalUserInfoWithUsername);\n}(GenericAdditionalUserInfo);\nvar FacebookAdditionalUserInfo = function (_GenericAdditionalUse2) {\n  function FacebookAdditionalUserInfo(isNewUser, profile) {\n    _classCallCheck(this, FacebookAdditionalUserInfo);\n    return _callSuper(this, FacebookAdditionalUserInfo, [isNewUser, \"facebook.com\", profile]);\n  }\n  _inherits(FacebookAdditionalUserInfo, _GenericAdditionalUse2);\n  return _createClass(FacebookAdditionalUserInfo);\n}(GenericAdditionalUserInfo);\nvar GithubAdditionalUserInfo = function (_FederatedAdditionalU) {\n  function GithubAdditionalUserInfo(isNewUser, profile) {\n    _classCallCheck(this, GithubAdditionalUserInfo);\n    return _callSuper(this, GithubAdditionalUserInfo, [isNewUser, \"github.com\", profile, typeof (profile === null || profile === void 0 ? void 0 : profile.login) === 'string' ? profile === null || profile === void 0 ? void 0 : profile.login : null]);\n  }\n  _inherits(GithubAdditionalUserInfo, _FederatedAdditionalU);\n  return _createClass(GithubAdditionalUserInfo);\n}(FederatedAdditionalUserInfoWithUsername);\nvar GoogleAdditionalUserInfo = function (_GenericAdditionalUse3) {\n  function GoogleAdditionalUserInfo(isNewUser, profile) {\n    _classCallCheck(this, GoogleAdditionalUserInfo);\n    return _callSuper(this, GoogleAdditionalUserInfo, [isNewUser, \"google.com\", profile]);\n  }\n  _inherits(GoogleAdditionalUserInfo, _GenericAdditionalUse3);\n  return _createClass(GoogleAdditionalUserInfo);\n}(GenericAdditionalUserInfo);\nvar TwitterAdditionalUserInfo = function (_FederatedAdditionalU2) {\n  function TwitterAdditionalUserInfo(isNewUser, profile, screenName) {\n    _classCallCheck(this, TwitterAdditionalUserInfo);\n    return _callSuper(this, TwitterAdditionalUserInfo, [isNewUser, \"twitter.com\", profile, screenName]);\n  }\n  _inherits(TwitterAdditionalUserInfo, _FederatedAdditionalU2);\n  return _createClass(TwitterAdditionalUserInfo);\n}(FederatedAdditionalUserInfoWithUsername);\nfunction getAdditionalUserInfo(userCredential) {\n  var user = userCredential.user,\n    _tokenResponse = userCredential._tokenResponse;\n  if (user.isAnonymous && !_tokenResponse) {\n    return {\n      providerId: null,\n      isNewUser: false,\n      profile: null\n    };\n  }\n  return _fromIdTokenResponse(_tokenResponse);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction setPersistence(auth, persistence) {\n  return getModularInstance(auth).setPersistence(persistence);\n}\nfunction initializeRecaptchaConfig(auth) {\n  return _initializeRecaptchaConfig(auth);\n}\nfunction validatePassword(_x182, _x183) {\n  return _validatePassword2.apply(this, arguments);\n}\nfunction _validatePassword2() {\n  _validatePassword2 = _asyncToGenerator(function* (auth, password) {\n    var authInternal = _castAuth(auth);\n    return authInternal.validatePassword(password);\n  });\n  return _validatePassword2.apply(this, arguments);\n}\nfunction onIdTokenChanged(auth, nextOrObserver, error, completed) {\n  return getModularInstance(auth).onIdTokenChanged(nextOrObserver, error, completed);\n}\nfunction beforeAuthStateChanged(auth, callback, onAbort) {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\nfunction onAuthStateChanged(auth, nextOrObserver, error, completed) {\n  return getModularInstance(auth).onAuthStateChanged(nextOrObserver, error, completed);\n}\nfunction useDeviceLanguage(auth) {\n  getModularInstance(auth).useDeviceLanguage();\n}\nfunction updateCurrentUser(auth, user) {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\nfunction signOut(auth) {\n  return getModularInstance(auth).signOut();\n}\nfunction revokeAccessToken(auth, token) {\n  var authInternal = _castAuth(auth);\n  return authInternal.revokeAccessToken(token);\n}\nfunction deleteUser(_x184) {\n  return _deleteUser.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _deleteUser() {\n  _deleteUser = _asyncToGenerator(function* (user) {\n    return getModularInstance(user).delete();\n  });\n  return _deleteUser.apply(this, arguments);\n}\nvar MultiFactorSessionImpl = function () {\n  function MultiFactorSessionImpl(type, credential, user) {\n    _classCallCheck(this, MultiFactorSessionImpl);\n    this.type = type;\n    this.credential = credential;\n    this.user = user;\n  }\n  return _createClass(MultiFactorSessionImpl, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var key = this.type === \"enroll\" ? 'idToken' : 'pendingCredential';\n      return {\n        multiFactorSession: _defineProperty({}, key, this.credential)\n      };\n    }\n  }], [{\n    key: \"_fromIdtoken\",\n    value: function _fromIdtoken(idToken, user) {\n      return new MultiFactorSessionImpl(\"enroll\", idToken, user);\n    }\n  }, {\n    key: \"_fromMfaPendingCredential\",\n    value: function _fromMfaPendingCredential(mfaPendingCredential) {\n      return new MultiFactorSessionImpl(\"signin\", mfaPendingCredential);\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(obj) {\n      var _a, _b;\n      if (obj === null || obj === void 0 ? void 0 : obj.multiFactorSession) {\n        if ((_a = obj.multiFactorSession) === null || _a === void 0 ? void 0 : _a.pendingCredential) {\n          return MultiFactorSessionImpl._fromMfaPendingCredential(obj.multiFactorSession.pendingCredential);\n        } else if ((_b = obj.multiFactorSession) === null || _b === void 0 ? void 0 : _b.idToken) {\n          return MultiFactorSessionImpl._fromIdtoken(obj.multiFactorSession.idToken);\n        }\n      }\n      return null;\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MultiFactorResolverImpl = function () {\n  function MultiFactorResolverImpl(session, hints, signInResolver) {\n    _classCallCheck(this, MultiFactorResolverImpl);\n    this.session = session;\n    this.hints = hints;\n    this.signInResolver = signInResolver;\n  }\n  return _createClass(MultiFactorResolverImpl, [{\n    key: \"resolveSignIn\",\n    value: function () {\n      var _resolveSignIn = _asyncToGenerator(function* (assertionExtern) {\n        var assertion = assertionExtern;\n        return this.signInResolver(assertion);\n      });\n      function resolveSignIn(_x185) {\n        return _resolveSignIn.apply(this, arguments);\n      }\n      return resolveSignIn;\n    }()\n  }], [{\n    key: \"_fromError\",\n    value: function _fromError(authExtern, error) {\n      var auth = _castAuth(authExtern);\n      var serverResponse = error.customData._serverResponse;\n      var hints = (serverResponse.mfaInfo || []).map(function (enrollment) {\n        return MultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n      });\n      _assert(serverResponse.mfaPendingCredential, auth, \"internal-error\");\n      var session = MultiFactorSessionImpl._fromMfaPendingCredential(serverResponse.mfaPendingCredential);\n      return new MultiFactorResolverImpl(session, hints, function () {\n        var _ref22 = _asyncToGenerator(function* (assertion) {\n          var mfaResponse = yield assertion._process(auth, session);\n          delete serverResponse.mfaInfo;\n          delete serverResponse.mfaPendingCredential;\n          var idTokenResponse = Object.assign(Object.assign({}, serverResponse), {\n            idToken: mfaResponse.idToken,\n            refreshToken: mfaResponse.refreshToken\n          });\n          switch (error.operationType) {\n            case \"signIn\":\n              var userCredential = yield UserCredentialImpl._fromIdTokenResponse(auth, error.operationType, idTokenResponse);\n              yield auth._updateCurrentUser(userCredential.user);\n              return userCredential;\n            case \"reauthenticate\":\n              _assert(error.user, auth, \"internal-error\");\n              return UserCredentialImpl._forOperation(error.user, error.operationType, idTokenResponse);\n            default:\n              _fail(auth, \"internal-error\");\n          }\n        });\n        return function (_x186) {\n          return _ref22.apply(this, arguments);\n        };\n      }());\n    }\n  }]);\n}();\nfunction getMultiFactorResolver(auth, error) {\n  var _a;\n  var authModular = getModularInstance(auth);\n  var errorInternal = error;\n  _assert(error.customData.operationType, authModular, \"argument-error\");\n  _assert((_a = errorInternal.customData._serverResponse) === null || _a === void 0 ? void 0 : _a.mfaPendingCredential, authModular, \"argument-error\");\n  return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction startEnrollPhoneMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaEnrollment:start\", _addTidIfNecessary(auth, request));\n}\nfunction finalizeEnrollPhoneMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaEnrollment:finalize\", _addTidIfNecessary(auth, request));\n}\nfunction startEnrollTotpMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaEnrollment:start\", _addTidIfNecessary(auth, request));\n}\nfunction finalizeEnrollTotpMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaEnrollment:finalize\", _addTidIfNecessary(auth, request));\n}\nfunction withdrawMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaEnrollment:withdraw\", _addTidIfNecessary(auth, request));\n}\nvar MultiFactorUserImpl = function () {\n  function MultiFactorUserImpl(user) {\n    var _this22 = this;\n    _classCallCheck(this, MultiFactorUserImpl);\n    this.user = user;\n    this.enrolledFactors = [];\n    user._onReload(function (userInfo) {\n      if (userInfo.mfaInfo) {\n        _this22.enrolledFactors = userInfo.mfaInfo.map(function (enrollment) {\n          return MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment);\n        });\n      }\n    });\n  }\n  return _createClass(MultiFactorUserImpl, [{\n    key: \"getSession\",\n    value: function () {\n      var _getSession = _asyncToGenerator(function* () {\n        return MultiFactorSessionImpl._fromIdtoken(yield this.user.getIdToken(), this.user);\n      });\n      function getSession() {\n        return _getSession.apply(this, arguments);\n      }\n      return getSession;\n    }()\n  }, {\n    key: \"enroll\",\n    value: function () {\n      var _enroll = _asyncToGenerator(function* (assertionExtern, displayName) {\n        var assertion = assertionExtern;\n        var session = yield this.getSession();\n        var finalizeMfaResponse = yield _logoutIfInvalidated(this.user, assertion._process(this.user.auth, session, displayName));\n        yield this.user._updateTokensIfNecessary(finalizeMfaResponse);\n        return this.user.reload();\n      });\n      function enroll(_x187, _x188) {\n        return _enroll.apply(this, arguments);\n      }\n      return enroll;\n    }()\n  }, {\n    key: \"unenroll\",\n    value: function () {\n      var _unenroll = _asyncToGenerator(function* (infoOrUid) {\n        var mfaEnrollmentId = typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n        var idToken = yield this.user.getIdToken();\n        try {\n          var idTokenResponse = yield _logoutIfInvalidated(this.user, withdrawMfa(this.user.auth, {\n            idToken: idToken,\n            mfaEnrollmentId: mfaEnrollmentId\n          }));\n          this.enrolledFactors = this.enrolledFactors.filter(function (_ref23) {\n            var uid = _ref23.uid;\n            return uid !== mfaEnrollmentId;\n          });\n          yield this.user._updateTokensIfNecessary(idTokenResponse);\n          yield this.user.reload();\n        } catch (e) {\n          throw e;\n        }\n      });\n      function unenroll(_x189) {\n        return _unenroll.apply(this, arguments);\n      }\n      return unenroll;\n    }()\n  }], [{\n    key: \"_fromUser\",\n    value: function _fromUser(user) {\n      return new MultiFactorUserImpl(user);\n    }\n  }]);\n}();\nvar multiFactorUserCache = new WeakMap();\nfunction multiFactor(user) {\n  var userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(userModular, MultiFactorUserImpl._fromUser(userModular));\n  }\n  return multiFactorUserCache.get(userModular);\n}\nvar STORAGE_AVAILABLE_KEY = '__sak';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar BrowserPersistenceClass = function () {\n  function BrowserPersistenceClass(storageRetriever, type) {\n    _classCallCheck(this, BrowserPersistenceClass);\n    this.storageRetriever = storageRetriever;\n    this.type = type;\n  }\n  return _createClass(BrowserPersistenceClass, [{\n    key: \"_isAvailable\",\n    value: function _isAvailable() {\n      try {\n        if (!this.storage) {\n          return Promise.resolve(false);\n        }\n        this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n        this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n        return Promise.resolve(true);\n      } catch (_a) {\n        return Promise.resolve(false);\n      }\n    }\n  }, {\n    key: \"_set\",\n    value: function _set(key, value) {\n      this.storage.setItem(key, JSON.stringify(value));\n      return Promise.resolve();\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(key) {\n      var json = this.storage.getItem(key);\n      return Promise.resolve(json ? JSON.parse(json) : null);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove(key) {\n      this.storage.removeItem(key);\n      return Promise.resolve();\n    }\n  }, {\n    key: \"storage\",\n    get: function get() {\n      return this.storageRetriever();\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _iframeCannotSyncWebStorage() {\n  var ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\nvar _POLLING_INTERVAL_MS$1 = 1000;\nvar IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\nvar BrowserLocalPersistence = function (_BrowserPersistenceCl) {\n  function BrowserLocalPersistence() {\n    var _this23;\n    _classCallCheck(this, BrowserLocalPersistence);\n    _this23 = _callSuper(this, BrowserLocalPersistence, [function () {\n      return window.localStorage;\n    }, \"LOCAL\"]);\n    _this23.boundEventHandler = function (event, poll) {\n      return _this23.onStorageEvent(event, poll);\n    };\n    _this23.listeners = {};\n    _this23.localCache = {};\n    _this23.pollTimer = null;\n    _this23.safariLocalStorageNotSynced = _iframeCannotSyncWebStorage() && _isIframe();\n    _this23.fallbackToPolling = _isMobileBrowser();\n    _this23._shouldAllowMigration = true;\n    return _this23;\n  }\n  _inherits(BrowserLocalPersistence, _BrowserPersistenceCl);\n  return _createClass(BrowserLocalPersistence, [{\n    key: \"forAllChangedKeys\",\n    value: function forAllChangedKeys(cb) {\n      for (var key of Object.keys(this.listeners)) {\n        var newValue = this.storage.getItem(key);\n        var oldValue = this.localCache[key];\n        if (newValue !== oldValue) {\n          cb(key, oldValue, newValue);\n        }\n      }\n    }\n  }, {\n    key: \"onStorageEvent\",\n    value: function onStorageEvent(event) {\n      var _this24 = this;\n      var poll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!event.key) {\n        this.forAllChangedKeys(function (key, _oldValue, newValue) {\n          _this24.notifyListeners(key, newValue);\n        });\n        return;\n      }\n      var key = event.key;\n      if (poll) {\n        this.detachListener();\n      } else {\n        this.stopPolling();\n      }\n      if (this.safariLocalStorageNotSynced) {\n        var _storedValue = this.storage.getItem(key);\n        if (event.newValue !== _storedValue) {\n          if (event.newValue !== null) {\n            this.storage.setItem(key, event.newValue);\n          } else {\n            this.storage.removeItem(key);\n          }\n        } else if (this.localCache[key] === event.newValue && !poll) {\n          return;\n        }\n      }\n      var triggerListeners = function triggerListeners() {\n        var storedValue = _this24.storage.getItem(key);\n        if (!poll && _this24.localCache[key] === storedValue) {\n          return;\n        }\n        _this24.notifyListeners(key, storedValue);\n      };\n      var storedValue = this.storage.getItem(key);\n      if (_isIE10() && storedValue !== event.newValue && event.newValue !== event.oldValue) {\n        setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n      } else {\n        triggerListeners();\n      }\n    }\n  }, {\n    key: \"notifyListeners\",\n    value: function notifyListeners(key, value) {\n      this.localCache[key] = value;\n      var listeners = this.listeners[key];\n      if (listeners) {\n        for (var listener of Array.from(listeners)) {\n          listener(value ? JSON.parse(value) : value);\n        }\n      }\n    }\n  }, {\n    key: \"startPolling\",\n    value: function startPolling() {\n      var _this25 = this;\n      this.stopPolling();\n      this.pollTimer = setInterval(function () {\n        _this25.forAllChangedKeys(function (key, oldValue, newValue) {\n          _this25.onStorageEvent(new StorageEvent('storage', {\n            key: key,\n            oldValue: oldValue,\n            newValue: newValue\n          }), true);\n        });\n      }, _POLLING_INTERVAL_MS$1);\n    }\n  }, {\n    key: \"stopPolling\",\n    value: function stopPolling() {\n      if (this.pollTimer) {\n        clearInterval(this.pollTimer);\n        this.pollTimer = null;\n      }\n    }\n  }, {\n    key: \"attachListener\",\n    value: function attachListener() {\n      window.addEventListener('storage', this.boundEventHandler);\n    }\n  }, {\n    key: \"detachListener\",\n    value: function detachListener() {\n      window.removeEventListener('storage', this.boundEventHandler);\n    }\n  }, {\n    key: \"_addListener\",\n    value: function _addListener(key, listener) {\n      if (Object.keys(this.listeners).length === 0) {\n        if (this.fallbackToPolling) {\n          this.startPolling();\n        } else {\n          this.attachListener();\n        }\n      }\n      if (!this.listeners[key]) {\n        this.listeners[key] = new Set();\n        this.localCache[key] = this.storage.getItem(key);\n      }\n      this.listeners[key].add(listener);\n    }\n  }, {\n    key: \"_removeListener\",\n    value: function _removeListener(key, listener) {\n      if (this.listeners[key]) {\n        this.listeners[key].delete(listener);\n        if (this.listeners[key].size === 0) {\n          delete this.listeners[key];\n        }\n      }\n      if (Object.keys(this.listeners).length === 0) {\n        this.detachListener();\n        this.stopPolling();\n      }\n    }\n  }, {\n    key: \"_set\",\n    value: function () {\n      var _set3 = _asyncToGenerator(function* (key, value) {\n        yield _superPropGet(BrowserLocalPersistence, \"_set\", this, 3)([key, value]);\n        this.localCache[key] = JSON.stringify(value);\n      });\n      function _set(_x190, _x191) {\n        return _set3.apply(this, arguments);\n      }\n      return _set;\n    }()\n  }, {\n    key: \"_get\",\n    value: function () {\n      var _get4 = _asyncToGenerator(function* (key) {\n        var value = yield _superPropGet(BrowserLocalPersistence, \"_get\", this, 3)([key]);\n        this.localCache[key] = JSON.stringify(value);\n        return value;\n      });\n      function _get(_x192) {\n        return _get4.apply(this, arguments);\n      }\n      return _get;\n    }()\n  }, {\n    key: \"_remove\",\n    value: function () {\n      var _remove3 = _asyncToGenerator(function* (key) {\n        yield _superPropGet(BrowserLocalPersistence, \"_remove\", this, 3)([key]);\n        delete this.localCache[key];\n      });\n      function _remove(_x193) {\n        return _remove3.apply(this, arguments);\n      }\n      return _remove;\n    }()\n  }]);\n}(BrowserPersistenceClass);\nBrowserLocalPersistence.type = 'LOCAL';\nvar browserLocalPersistence = BrowserLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar BrowserSessionPersistence = function (_BrowserPersistenceCl2) {\n  function BrowserSessionPersistence() {\n    _classCallCheck(this, BrowserSessionPersistence);\n    return _callSuper(this, BrowserSessionPersistence, [function () {\n      return window.sessionStorage;\n    }, \"SESSION\"]);\n  }\n  _inherits(BrowserSessionPersistence, _BrowserPersistenceCl2);\n  return _createClass(BrowserSessionPersistence, [{\n    key: \"_addListener\",\n    value: function _addListener(_key, _listener) {\n      return;\n    }\n  }, {\n    key: \"_removeListener\",\n    value: function _removeListener(_key, _listener) {\n      return;\n    }\n  }]);\n}(BrowserPersistenceClass);\nBrowserSessionPersistence.type = 'SESSION';\nvar browserSessionPersistence = BrowserSessionPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _allSettled(promises) {\n  return Promise.all(promises.map(function () {\n    var _ref24 = _asyncToGenerator(function* (promise) {\n      try {\n        var value = yield promise;\n        return {\n          fulfilled: true,\n          value: value\n        };\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason: reason\n        };\n      }\n    });\n    return function (_x194) {\n      return _ref24.apply(this, arguments);\n    };\n  }()));\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Receiver = function () {\n  function Receiver(eventTarget) {\n    _classCallCheck(this, Receiver);\n    this.eventTarget = eventTarget;\n    this.handlersMap = {};\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n  return _createClass(Receiver, [{\n    key: \"isListeningto\",\n    value: function isListeningto(eventTarget) {\n      return this.eventTarget === eventTarget;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: (function () {\n      var _handleEvent = _asyncToGenerator(function* (event) {\n        var messageEvent = event;\n        var _messageEvent$data = messageEvent.data,\n          eventId = _messageEvent$data.eventId,\n          eventType = _messageEvent$data.eventType,\n          data = _messageEvent$data.data;\n        var handlers = this.handlersMap[eventType];\n        if (!(handlers === null || handlers === void 0 ? void 0 : handlers.size)) {\n          return;\n        }\n        messageEvent.ports[0].postMessage({\n          status: \"ack\",\n          eventId: eventId,\n          eventType: eventType\n        });\n        var promises = Array.from(handlers).map(function () {\n          var _ref25 = _asyncToGenerator(function* (handler) {\n            return handler(messageEvent.origin, data);\n          });\n          return function (_x196) {\n            return _ref25.apply(this, arguments);\n          };\n        }());\n        var response = yield _allSettled(promises);\n        messageEvent.ports[0].postMessage({\n          status: \"done\",\n          eventId: eventId,\n          eventType: eventType,\n          response: response\n        });\n      });\n      function handleEvent(_x195) {\n        return _handleEvent.apply(this, arguments);\n      }\n      return handleEvent;\n    }())\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(eventType, eventHandler) {\n      if (Object.keys(this.handlersMap).length === 0) {\n        this.eventTarget.addEventListener('message', this.boundEventHandler);\n      }\n      if (!this.handlersMap[eventType]) {\n        this.handlersMap[eventType] = new Set();\n      }\n      this.handlersMap[eventType].add(eventHandler);\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe(eventType, eventHandler) {\n      if (this.handlersMap[eventType] && eventHandler) {\n        this.handlersMap[eventType].delete(eventHandler);\n      }\n      if (!eventHandler || this.handlersMap[eventType].size === 0) {\n        delete this.handlersMap[eventType];\n      }\n      if (Object.keys(this.handlersMap).length === 0) {\n        this.eventTarget.removeEventListener('message', this.boundEventHandler);\n      }\n    }\n  }], [{\n    key: \"_getInstance\",\n    value: function _getInstance(eventTarget) {\n      var existingInstance = this.receivers.find(function (receiver) {\n        return receiver.isListeningto(eventTarget);\n      });\n      if (existingInstance) {\n        return existingInstance;\n      }\n      var newInstance = new Receiver(eventTarget);\n      this.receivers.push(newInstance);\n      return newInstance;\n    }\n  }]);\n}();\nReceiver.receivers = [];\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _generateEventId() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var random = '';\n  for (var i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Sender = function () {\n  function Sender(target) {\n    _classCallCheck(this, Sender);\n    this.target = target;\n    this.handlers = new Set();\n  }\n  return _createClass(Sender, [{\n    key: \"removeMessageHandler\",\n    value: function removeMessageHandler(handler) {\n      if (handler.messageChannel) {\n        handler.messageChannel.port1.removeEventListener('message', handler.onMessage);\n        handler.messageChannel.port1.close();\n      }\n      this.handlers.delete(handler);\n    }\n  }, {\n    key: \"_send\",\n    value: (function () {\n      var _send2 = _asyncToGenerator(function* (eventType, data) {\n        var _this26 = this;\n        var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n        var messageChannel = typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n        if (!messageChannel) {\n          throw new Error(\"connection_unavailable\");\n        }\n        var completionTimer;\n        var handler;\n        return new Promise(function (resolve, reject) {\n          var eventId = _generateEventId('', 20);\n          messageChannel.port1.start();\n          var ackTimer = setTimeout(function () {\n            reject(new Error(\"unsupported_event\"));\n          }, timeout);\n          handler = {\n            messageChannel: messageChannel,\n            onMessage: function onMessage(event) {\n              var messageEvent = event;\n              if (messageEvent.data.eventId !== eventId) {\n                return;\n              }\n              switch (messageEvent.data.status) {\n                case \"ack\":\n                  clearTimeout(ackTimer);\n                  completionTimer = setTimeout(function () {\n                    reject(new Error(\"timeout\"));\n                  }, 3000);\n                  break;\n                case \"done\":\n                  clearTimeout(completionTimer);\n                  resolve(messageEvent.data.response);\n                  break;\n                default:\n                  clearTimeout(ackTimer);\n                  clearTimeout(completionTimer);\n                  reject(new Error(\"invalid_response\"));\n                  break;\n              }\n            }\n          };\n          _this26.handlers.add(handler);\n          messageChannel.port1.addEventListener('message', handler.onMessage);\n          _this26.target.postMessage({\n            eventType: eventType,\n            eventId: eventId,\n            data: data\n          }, [messageChannel.port2]);\n        }).finally(function () {\n          if (handler) {\n            _this26.removeMessageHandler(handler);\n          }\n        });\n      });\n      function _send(_x197, _x198) {\n        return _send2.apply(this, arguments);\n      }\n      return _send;\n    }())\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _window() {\n  return window;\n}\nfunction _setWindowLocation(url) {\n  _window().location.href = url;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _isWorker() {\n  return typeof _window()['WorkerGlobalScope'] !== 'undefined' && typeof _window()['importScripts'] === 'function';\n}\nfunction _getActiveServiceWorker() {\n  return _getActiveServiceWorker2.apply(this, arguments);\n}\nfunction _getActiveServiceWorker2() {\n  _getActiveServiceWorker2 = _asyncToGenerator(function* () {\n    if (!(navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker)) {\n      return null;\n    }\n    try {\n      var registration = yield navigator.serviceWorker.ready;\n      return registration.active;\n    } catch (_a) {\n      return null;\n    }\n  });\n  return _getActiveServiceWorker2.apply(this, arguments);\n}\nfunction _getServiceWorkerController() {\n  var _a;\n  return ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker) === null || _a === void 0 ? void 0 : _a.controller) || null;\n}\nfunction _getWorkerGlobalScope() {\n  return _isWorker() ? self : null;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DB_NAME = 'firebaseLocalStorageDb';\nvar DB_VERSION = 1;\nvar DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nvar DB_DATA_KEYPATH = 'fbase_key';\nvar DBPromise = function () {\n  function DBPromise(request) {\n    _classCallCheck(this, DBPromise);\n    this.request = request;\n  }\n  return _createClass(DBPromise, [{\n    key: \"toPromise\",\n    value: function toPromise() {\n      var _this27 = this;\n      return new Promise(function (resolve, reject) {\n        _this27.request.addEventListener('success', function () {\n          resolve(_this27.request.result);\n        });\n        _this27.request.addEventListener('error', function () {\n          reject(_this27.request.error);\n        });\n      });\n    }\n  }]);\n}();\nfunction getObjectStore(db, isReadWrite) {\n  return db.transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly').objectStore(DB_OBJECTSTORE_NAME);\n}\nfunction _deleteDatabase() {\n  var request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise(request).toPromise();\n}\nfunction _openDatabase() {\n  var request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise(function (resolve, reject) {\n    request.addEventListener('error', function () {\n      reject(request.error);\n    });\n    request.addEventListener('upgradeneeded', function () {\n      var db = request.result;\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, {\n          keyPath: DB_DATA_KEYPATH\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n    request.addEventListener('success', _asyncToGenerator(function* () {\n      var db = request.result;\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        db.close();\n        yield _deleteDatabase();\n        resolve(yield _openDatabase());\n      } else {\n        resolve(db);\n      }\n    }));\n  });\n}\nfunction _putObject(_x199, _x200, _x201) {\n  return _putObject2.apply(this, arguments);\n}\nfunction _putObject2() {\n  _putObject2 = _asyncToGenerator(function* (db, key, value) {\n    var request = getObjectStore(db, true).put(_defineProperty(_defineProperty({}, DB_DATA_KEYPATH, key), \"value\", value));\n    return new DBPromise(request).toPromise();\n  });\n  return _putObject2.apply(this, arguments);\n}\nfunction getObject(_x202, _x203) {\n  return _getObject.apply(this, arguments);\n}\nfunction _getObject() {\n  _getObject = _asyncToGenerator(function* (db, key) {\n    var request = getObjectStore(db, false).get(key);\n    var data = yield new DBPromise(request).toPromise();\n    return data === undefined ? null : data.value;\n  });\n  return _getObject.apply(this, arguments);\n}\nfunction _deleteObject(db, key) {\n  var request = getObjectStore(db, true).delete(key);\n  return new DBPromise(request).toPromise();\n}\nvar _POLLING_INTERVAL_MS = 800;\nvar _TRANSACTION_RETRY_COUNT = 3;\nvar IndexedDBLocalPersistence = function () {\n  function IndexedDBLocalPersistence() {\n    _classCallCheck(this, IndexedDBLocalPersistence);\n    this.type = \"LOCAL\";\n    this._shouldAllowMigration = true;\n    this.listeners = {};\n    this.localCache = {};\n    this.pollTimer = null;\n    this.pendingWrites = 0;\n    this.receiver = null;\n    this.sender = null;\n    this.serviceWorkerReceiverAvailable = false;\n    this.activeServiceWorker = null;\n    this._workerInitializationPromise = this.initializeServiceWorkerMessaging().then(function () {}, function () {});\n  }\n  return _createClass(IndexedDBLocalPersistence, [{\n    key: \"_openDb\",\n    value: function () {\n      var _openDb2 = _asyncToGenerator(function* () {\n        if (this.db) {\n          return this.db;\n        }\n        this.db = yield _openDatabase();\n        return this.db;\n      });\n      function _openDb() {\n        return _openDb2.apply(this, arguments);\n      }\n      return _openDb;\n    }()\n  }, {\n    key: \"_withRetries\",\n    value: function () {\n      var _withRetries2 = _asyncToGenerator(function* (op) {\n        var numAttempts = 0;\n        while (true) {\n          try {\n            var db = yield this._openDb();\n            return yield op(db);\n          } catch (e) {\n            if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n              throw e;\n            }\n            if (this.db) {\n              this.db.close();\n              this.db = undefined;\n            }\n          }\n        }\n      });\n      function _withRetries(_x204) {\n        return _withRetries2.apply(this, arguments);\n      }\n      return _withRetries;\n    }()\n  }, {\n    key: \"initializeServiceWorkerMessaging\",\n    value: (function () {\n      var _initializeServiceWorkerMessaging = _asyncToGenerator(function* () {\n        return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n      });\n      function initializeServiceWorkerMessaging() {\n        return _initializeServiceWorkerMessaging.apply(this, arguments);\n      }\n      return initializeServiceWorkerMessaging;\n    }())\n  }, {\n    key: \"initializeReceiver\",\n    value: (function () {\n      var _initializeReceiver = _asyncToGenerator(function* () {\n        var _this28 = this;\n        this.receiver = Receiver._getInstance(_getWorkerGlobalScope());\n        this.receiver._subscribe(\"keyChanged\", function () {\n          var _ref27 = _asyncToGenerator(function* (_origin, data) {\n            var keys = yield _this28._poll();\n            return {\n              keyProcessed: keys.includes(data.key)\n            };\n          });\n          return function (_x205, _x206) {\n            return _ref27.apply(this, arguments);\n          };\n        }());\n        this.receiver._subscribe(\"ping\", function () {\n          var _ref28 = _asyncToGenerator(function* (_origin, _data) {\n            return [\"keyChanged\"];\n          });\n          return function (_x207, _x208) {\n            return _ref28.apply(this, arguments);\n          };\n        }());\n      });\n      function initializeReceiver() {\n        return _initializeReceiver.apply(this, arguments);\n      }\n      return initializeReceiver;\n    }())\n  }, {\n    key: \"initializeSender\",\n    value: (function () {\n      var _initializeSender = _asyncToGenerator(function* () {\n        var _a, _b;\n        this.activeServiceWorker = yield _getActiveServiceWorker();\n        if (!this.activeServiceWorker) {\n          return;\n        }\n        this.sender = new Sender(this.activeServiceWorker);\n        var results = yield this.sender._send(\"ping\", {}, 800);\n        if (!results) {\n          return;\n        }\n        if (((_a = results[0]) === null || _a === void 0 ? void 0 : _a.fulfilled) && ((_b = results[0]) === null || _b === void 0 ? void 0 : _b.value.includes(\"keyChanged\"))) {\n          this.serviceWorkerReceiverAvailable = true;\n        }\n      });\n      function initializeSender() {\n        return _initializeSender.apply(this, arguments);\n      }\n      return initializeSender;\n    }())\n  }, {\n    key: \"notifyServiceWorker\",\n    value: (function () {\n      var _notifyServiceWorker = _asyncToGenerator(function* (key) {\n        if (!this.sender || !this.activeServiceWorker || _getServiceWorkerController() !== this.activeServiceWorker) {\n          return;\n        }\n        try {\n          yield this.sender._send(\"keyChanged\", {\n            key: key\n          }, this.serviceWorkerReceiverAvailable ? 800 : 50);\n        } catch (_a) {}\n      });\n      function notifyServiceWorker(_x209) {\n        return _notifyServiceWorker.apply(this, arguments);\n      }\n      return notifyServiceWorker;\n    }())\n  }, {\n    key: \"_isAvailable\",\n    value: function () {\n      var _isAvailable3 = _asyncToGenerator(function* () {\n        try {\n          if (!indexedDB) {\n            return false;\n          }\n          var db = yield _openDatabase();\n          yield _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n          yield _deleteObject(db, STORAGE_AVAILABLE_KEY);\n          return true;\n        } catch (_a) {}\n        return false;\n      });\n      function _isAvailable() {\n        return _isAvailable3.apply(this, arguments);\n      }\n      return _isAvailable;\n    }()\n  }, {\n    key: \"_withPendingWrite\",\n    value: function () {\n      var _withPendingWrite2 = _asyncToGenerator(function* (write) {\n        this.pendingWrites++;\n        try {\n          yield write();\n        } finally {\n          this.pendingWrites--;\n        }\n      });\n      function _withPendingWrite(_x210) {\n        return _withPendingWrite2.apply(this, arguments);\n      }\n      return _withPendingWrite;\n    }()\n  }, {\n    key: \"_set\",\n    value: function () {\n      var _set4 = _asyncToGenerator(function* (key, value) {\n        var _this29 = this;\n        return this._withPendingWrite(_asyncToGenerator(function* () {\n          yield _this29._withRetries(function (db) {\n            return _putObject(db, key, value);\n          });\n          _this29.localCache[key] = value;\n          return _this29.notifyServiceWorker(key);\n        }));\n      });\n      function _set(_x211, _x212) {\n        return _set4.apply(this, arguments);\n      }\n      return _set;\n    }()\n  }, {\n    key: \"_get\",\n    value: function () {\n      var _get5 = _asyncToGenerator(function* (key) {\n        var obj = yield this._withRetries(function (db) {\n          return getObject(db, key);\n        });\n        this.localCache[key] = obj;\n        return obj;\n      });\n      function _get(_x213) {\n        return _get5.apply(this, arguments);\n      }\n      return _get;\n    }()\n  }, {\n    key: \"_remove\",\n    value: function () {\n      var _remove4 = _asyncToGenerator(function* (key) {\n        var _this30 = this;\n        return this._withPendingWrite(_asyncToGenerator(function* () {\n          yield _this30._withRetries(function (db) {\n            return _deleteObject(db, key);\n          });\n          delete _this30.localCache[key];\n          return _this30.notifyServiceWorker(key);\n        }));\n      });\n      function _remove(_x214) {\n        return _remove4.apply(this, arguments);\n      }\n      return _remove;\n    }()\n  }, {\n    key: \"_poll\",\n    value: function () {\n      var _poll2 = _asyncToGenerator(function* () {\n        var result = yield this._withRetries(function (db) {\n          var getAllRequest = getObjectStore(db, false).getAll();\n          return new DBPromise(getAllRequest).toPromise();\n        });\n        if (!result) {\n          return [];\n        }\n        if (this.pendingWrites !== 0) {\n          return [];\n        }\n        var keys = [];\n        var keysInResult = new Set();\n        if (result.length !== 0) {\n          for (var _ref31 of result) {\n            var key = _ref31.fbase_key;\n            var value = _ref31.value;\n            keysInResult.add(key);\n            if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n              this.notifyListeners(key, value);\n              keys.push(key);\n            }\n          }\n        }\n        for (var localKey of Object.keys(this.localCache)) {\n          if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n            this.notifyListeners(localKey, null);\n            keys.push(localKey);\n          }\n        }\n        return keys;\n      });\n      function _poll() {\n        return _poll2.apply(this, arguments);\n      }\n      return _poll;\n    }()\n  }, {\n    key: \"notifyListeners\",\n    value: function notifyListeners(key, newValue) {\n      this.localCache[key] = newValue;\n      var listeners = this.listeners[key];\n      if (listeners) {\n        for (var listener of Array.from(listeners)) {\n          listener(newValue);\n        }\n      }\n    }\n  }, {\n    key: \"startPolling\",\n    value: function startPolling() {\n      var _this31 = this;\n      this.stopPolling();\n      this.pollTimer = setInterval(_asyncToGenerator(function* () {\n        return _this31._poll();\n      }), _POLLING_INTERVAL_MS);\n    }\n  }, {\n    key: \"stopPolling\",\n    value: function stopPolling() {\n      if (this.pollTimer) {\n        clearInterval(this.pollTimer);\n        this.pollTimer = null;\n      }\n    }\n  }, {\n    key: \"_addListener\",\n    value: function _addListener(key, listener) {\n      if (Object.keys(this.listeners).length === 0) {\n        this.startPolling();\n      }\n      if (!this.listeners[key]) {\n        this.listeners[key] = new Set();\n        void this._get(key);\n      }\n      this.listeners[key].add(listener);\n    }\n  }, {\n    key: \"_removeListener\",\n    value: function _removeListener(key, listener) {\n      if (this.listeners[key]) {\n        this.listeners[key].delete(listener);\n        if (this.listeners[key].size === 0) {\n          delete this.listeners[key];\n        }\n      }\n      if (Object.keys(this.listeners).length === 0) {\n        this.stopPolling();\n      }\n    }\n  }]);\n}();\nIndexedDBLocalPersistence.type = 'LOCAL';\nvar indexedDBLocalPersistence = IndexedDBLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction startSignInPhoneMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaSignIn:start\", _addTidIfNecessary(auth, request));\n}\nfunction finalizeSignInPhoneMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaSignIn:finalize\", _addTidIfNecessary(auth, request));\n}\nfunction finalizeSignInTotpMfa(auth, request) {\n  return _performApiRequest(auth, \"POST\", \"/v2/accounts/mfaSignIn:finalize\", _addTidIfNecessary(auth, request));\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _SOLVE_TIME_MS = 500;\nvar _EXPIRATION_TIME_MS = 60000;\nvar _WIDGET_ID_START = 1000000000000;\nvar MockReCaptcha = function () {\n  function MockReCaptcha(auth) {\n    _classCallCheck(this, MockReCaptcha);\n    this.auth = auth;\n    this.counter = _WIDGET_ID_START;\n    this._widgets = new Map();\n  }\n  return _createClass(MockReCaptcha, [{\n    key: \"render\",\n    value: function render(container, parameters) {\n      var id = this.counter;\n      this._widgets.set(id, new MockWidget(container, this.auth.name, parameters || {}));\n      this.counter++;\n      return id;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(optWidgetId) {\n      var _a;\n      var id = optWidgetId || _WIDGET_ID_START;\n      void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.delete());\n      this._widgets.delete(id);\n    }\n  }, {\n    key: \"getResponse\",\n    value: function getResponse(optWidgetId) {\n      var _a;\n      var id = optWidgetId || _WIDGET_ID_START;\n      return ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.getResponse()) || '';\n    }\n  }, {\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator(function* (optWidgetId) {\n        var _a;\n        var id = optWidgetId || _WIDGET_ID_START;\n        void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.execute());\n        return '';\n      });\n      function execute(_x215) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\nvar MockWidget = function () {\n  function MockWidget(containerOrId, appName, params) {\n    var _this32 = this;\n    _classCallCheck(this, MockWidget);\n    this.params = params;\n    this.timerId = null;\n    this.deleted = false;\n    this.responseToken = null;\n    this.clickHandler = function () {\n      _this32.execute();\n    };\n    var container = typeof containerOrId === 'string' ? document.getElementById(containerOrId) : containerOrId;\n    _assert(container, \"argument-error\", {\n      appName: appName\n    });\n    this.container = container;\n    this.isVisible = this.params.size !== 'invisible';\n    if (this.isVisible) {\n      this.execute();\n    } else {\n      this.container.addEventListener('click', this.clickHandler);\n    }\n  }\n  return _createClass(MockWidget, [{\n    key: \"getResponse\",\n    value: function getResponse() {\n      this.checkIfDeleted();\n      return this.responseToken;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      this.checkIfDeleted();\n      this.deleted = true;\n      if (this.timerId) {\n        clearTimeout(this.timerId);\n        this.timerId = null;\n      }\n      this.container.removeEventListener('click', this.clickHandler);\n    }\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this33 = this;\n      this.checkIfDeleted();\n      if (this.timerId) {\n        return;\n      }\n      this.timerId = window.setTimeout(function () {\n        _this33.responseToken = generateRandomAlphaNumericString(50);\n        var _this33$params = _this33.params,\n          callback = _this33$params.callback,\n          expiredCallback = _this33$params['expired-callback'];\n        if (callback) {\n          try {\n            callback(_this33.responseToken);\n          } catch (e) {}\n        }\n        _this33.timerId = window.setTimeout(function () {\n          _this33.timerId = null;\n          _this33.responseToken = null;\n          if (expiredCallback) {\n            try {\n              expiredCallback();\n            } catch (e) {}\n          }\n          if (_this33.isVisible) {\n            _this33.execute();\n          }\n        }, _EXPIRATION_TIME_MS);\n      }, _SOLVE_TIME_MS);\n    }\n  }, {\n    key: \"checkIfDeleted\",\n    value: function checkIfDeleted() {\n      if (this.deleted) {\n        throw new Error('reCAPTCHA mock was already deleted!');\n      }\n    }\n  }]);\n}();\nfunction generateRandomAlphaNumericString(len) {\n  var chars = [];\n  var allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (var i = 0; i < len; i++) {\n    chars.push(allowedChars.charAt(Math.floor(Math.random() * allowedChars.length)));\n  }\n  return chars.join('');\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _JSLOAD_CALLBACK = _generateCallbackName('rcb');\nvar NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\nvar ReCaptchaLoaderImpl = function () {\n  function ReCaptchaLoaderImpl() {\n    _classCallCheck(this, ReCaptchaLoaderImpl);\n    var _a;\n    this.hostLanguage = '';\n    this.counter = 0;\n    this.librarySeparatelyLoaded = !!((_a = _window().grecaptcha) === null || _a === void 0 ? void 0 : _a.render);\n  }\n  return _createClass(ReCaptchaLoaderImpl, [{\n    key: \"load\",\n    value: function load(auth) {\n      var _this34 = this;\n      var hl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      _assert(isHostLanguageValid(hl), auth, \"argument-error\");\n      if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\n        return Promise.resolve(_window().grecaptcha);\n      }\n      return new Promise(function (resolve, reject) {\n        var networkTimeout = _window().setTimeout(function () {\n          reject(_createError(auth, \"network-request-failed\"));\n        }, NETWORK_TIMEOUT_DELAY.get());\n        _window()[_JSLOAD_CALLBACK] = function () {\n          _window().clearTimeout(networkTimeout);\n          delete _window()[_JSLOAD_CALLBACK];\n          var recaptcha = _window().grecaptcha;\n          if (!recaptcha || !isV2(recaptcha)) {\n            reject(_createError(auth, \"internal-error\"));\n            return;\n          }\n          var render = recaptcha.render;\n          recaptcha.render = function (container, params) {\n            var widgetId = render(container, params);\n            _this34.counter++;\n            return widgetId;\n          };\n          _this34.hostLanguage = hl;\n          resolve(recaptcha);\n        };\n        var url = `${_recaptchaV2ScriptUrl()}?${querystring({\n          onload: _JSLOAD_CALLBACK,\n          render: 'explicit',\n          hl: hl\n        })}`;\n        _loadJS(url).catch(function () {\n          clearTimeout(networkTimeout);\n          reject(_createError(auth, \"internal-error\"));\n        });\n      });\n    }\n  }, {\n    key: \"clearedOneInstance\",\n    value: function clearedOneInstance() {\n      this.counter--;\n    }\n  }, {\n    key: \"shouldResolveImmediately\",\n    value: function shouldResolveImmediately(hl) {\n      var _a;\n      return !!((_a = _window().grecaptcha) === null || _a === void 0 ? void 0 : _a.render) && (hl === this.hostLanguage || this.counter > 0 || this.librarySeparatelyLoaded);\n    }\n  }]);\n}();\nfunction isHostLanguageValid(hl) {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\nvar MockReCaptchaLoaderImpl = function () {\n  function MockReCaptchaLoaderImpl() {\n    _classCallCheck(this, MockReCaptchaLoaderImpl);\n  }\n  return _createClass(MockReCaptchaLoaderImpl, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator(function* (auth) {\n        return new MockReCaptcha(auth);\n      });\n      function load(_x216) {\n        return _load.apply(this, arguments);\n      }\n      return load;\n    }()\n  }, {\n    key: \"clearedOneInstance\",\n    value: function clearedOneInstance() {}\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\nvar DEFAULT_PARAMS = {\n  theme: 'light',\n  type: 'image'\n};\nvar RecaptchaVerifier = function () {\n  function RecaptchaVerifier(authExtern, containerOrId) {\n    var parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Object.assign({}, DEFAULT_PARAMS);\n    _classCallCheck(this, RecaptchaVerifier);\n    this.parameters = parameters;\n    this.type = RECAPTCHA_VERIFIER_TYPE;\n    this.destroyed = false;\n    this.widgetId = null;\n    this.tokenChangeListeners = new Set();\n    this.renderPromise = null;\n    this.recaptcha = null;\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\");\n    var container = typeof containerOrId === 'string' ? document.getElementById(containerOrId) : containerOrId;\n    _assert(container, this.auth, \"argument-error\");\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting ? new MockReCaptchaLoaderImpl() : new ReCaptchaLoaderImpl();\n    this.validateStartingState();\n  }\n  return _createClass(RecaptchaVerifier, [{\n    key: \"verify\",\n    value: (function () {\n      var _verify2 = _asyncToGenerator(function* () {\n        var _this35 = this;\n        this.assertNotDestroyed();\n        var id = yield this.render();\n        var recaptcha = this.getAssertedRecaptcha();\n        var response = recaptcha.getResponse(id);\n        if (response) {\n          return response;\n        }\n        return new Promise(function (resolve) {\n          var _tokenChange = function tokenChange(token) {\n            if (!token) {\n              return;\n            }\n            _this35.tokenChangeListeners.delete(_tokenChange);\n            resolve(token);\n          };\n          _this35.tokenChangeListeners.add(_tokenChange);\n          if (_this35.isInvisible) {\n            recaptcha.execute(id);\n          }\n        });\n      });\n      function verify() {\n        return _verify2.apply(this, arguments);\n      }\n      return verify;\n    }())\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this36 = this;\n      try {\n        this.assertNotDestroyed();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      if (this.renderPromise) {\n        return this.renderPromise;\n      }\n      this.renderPromise = this.makeRenderPromise().catch(function (e) {\n        _this36.renderPromise = null;\n        throw e;\n      });\n      return this.renderPromise;\n    }\n  }, {\n    key: \"_reset\",\n    value: function _reset() {\n      this.assertNotDestroyed();\n      if (this.widgetId !== null) {\n        this.getAssertedRecaptcha().reset(this.widgetId);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this37 = this;\n      this.assertNotDestroyed();\n      this.destroyed = true;\n      this._recaptchaLoader.clearedOneInstance();\n      if (!this.isInvisible) {\n        this.container.childNodes.forEach(function (node) {\n          _this37.container.removeChild(node);\n        });\n      }\n    }\n  }, {\n    key: \"validateStartingState\",\n    value: function validateStartingState() {\n      _assert(!this.parameters.sitekey, this.auth, \"argument-error\");\n      _assert(this.isInvisible || !this.container.hasChildNodes(), this.auth, \"argument-error\");\n      _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\");\n    }\n  }, {\n    key: \"makeTokenCallback\",\n    value: function makeTokenCallback(existing) {\n      var _this38 = this;\n      return function (token) {\n        _this38.tokenChangeListeners.forEach(function (listener) {\n          return listener(token);\n        });\n        if (typeof existing === 'function') {\n          existing(token);\n        } else if (typeof existing === 'string') {\n          var globalFunc = _window()[existing];\n          if (typeof globalFunc === 'function') {\n            globalFunc(token);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"assertNotDestroyed\",\n    value: function assertNotDestroyed() {\n      _assert(!this.destroyed, this.auth, \"internal-error\");\n    }\n  }, {\n    key: \"makeRenderPromise\",\n    value: function () {\n      var _makeRenderPromise = _asyncToGenerator(function* () {\n        yield this.init();\n        if (!this.widgetId) {\n          var container = this.container;\n          if (!this.isInvisible) {\n            var guaranteedEmpty = document.createElement('div');\n            container.appendChild(guaranteedEmpty);\n            container = guaranteedEmpty;\n          }\n          this.widgetId = this.getAssertedRecaptcha().render(container, this.parameters);\n        }\n        return this.widgetId;\n      });\n      function makeRenderPromise() {\n        return _makeRenderPromise.apply(this, arguments);\n      }\n      return makeRenderPromise;\n    }()\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(function* () {\n        _assert(_isHttpOrHttps() && !_isWorker(), this.auth, \"internal-error\");\n        yield domReady();\n        this.recaptcha = yield this._recaptchaLoader.load(this.auth, this.auth.languageCode || undefined);\n        var siteKey = yield getRecaptchaParams(this.auth);\n        _assert(siteKey, this.auth, \"internal-error\");\n        this.parameters.sitekey = siteKey;\n      });\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"getAssertedRecaptcha\",\n    value: function getAssertedRecaptcha() {\n      _assert(this.recaptcha, this.auth, \"internal-error\");\n      return this.recaptcha;\n    }\n  }]);\n}();\nfunction domReady() {\n  var resolver = null;\n  return new Promise(function (resolve) {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n    resolver = function resolver() {\n      return resolve();\n    };\n    window.addEventListener('load', resolver);\n  }).catch(function (e) {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n    throw e;\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ConfirmationResultImpl = function () {\n  function ConfirmationResultImpl(verificationId, onConfirmation) {\n    _classCallCheck(this, ConfirmationResultImpl);\n    this.verificationId = verificationId;\n    this.onConfirmation = onConfirmation;\n  }\n  return _createClass(ConfirmationResultImpl, [{\n    key: \"confirm\",\n    value: function confirm(verificationCode) {\n      var authCredential = PhoneAuthCredential._fromVerification(this.verificationId, verificationCode);\n      return this.onConfirmation(authCredential);\n    }\n  }]);\n}();\nfunction signInWithPhoneNumber(_x217, _x218, _x219) {\n  return _signInWithPhoneNumber.apply(this, arguments);\n}\nfunction _signInWithPhoneNumber() {\n  _signInWithPhoneNumber = _asyncToGenerator(function* (auth, phoneNumber, appVerifier) {\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var authInternal = _castAuth(auth);\n    var verificationId = yield _verifyPhoneNumber(authInternal, phoneNumber, getModularInstance(appVerifier));\n    return new ConfirmationResultImpl(verificationId, function (cred) {\n      return signInWithCredential(authInternal, cred);\n    });\n  });\n  return _signInWithPhoneNumber.apply(this, arguments);\n}\nfunction linkWithPhoneNumber(_x220, _x221, _x222) {\n  return _linkWithPhoneNumber.apply(this, arguments);\n}\nfunction _linkWithPhoneNumber() {\n  _linkWithPhoneNumber = _asyncToGenerator(function* (user, phoneNumber, appVerifier) {\n    var userInternal = getModularInstance(user);\n    yield _assertLinkedStatus(false, userInternal, \"phone\");\n    var verificationId = yield _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\n    return new ConfirmationResultImpl(verificationId, function (cred) {\n      return linkWithCredential(userInternal, cred);\n    });\n  });\n  return _linkWithPhoneNumber.apply(this, arguments);\n}\nfunction reauthenticateWithPhoneNumber(_x223, _x224, _x225) {\n  return _reauthenticateWithPhoneNumber.apply(this, arguments);\n}\nfunction _reauthenticateWithPhoneNumber() {\n  _reauthenticateWithPhoneNumber = _asyncToGenerator(function* (user, phoneNumber, appVerifier) {\n    var userInternal = getModularInstance(user);\n    if (_isFirebaseServerApp(userInternal.auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth));\n    }\n    var verificationId = yield _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\n    return new ConfirmationResultImpl(verificationId, function (cred) {\n      return reauthenticateWithCredential(userInternal, cred);\n    });\n  });\n  return _reauthenticateWithPhoneNumber.apply(this, arguments);\n}\nfunction _verifyPhoneNumber(_x226, _x227, _x228) {\n  return _verifyPhoneNumber2.apply(this, arguments);\n}\nfunction _verifyPhoneNumber2() {\n  _verifyPhoneNumber2 = _asyncToGenerator(function* (auth, options, verifier) {\n    var _a;\n    var recaptchaToken = yield verifier.verify();\n    try {\n      _assert(typeof recaptchaToken === 'string', auth, \"argument-error\");\n      _assert(verifier.type === RECAPTCHA_VERIFIER_TYPE, auth, \"argument-error\");\n      var phoneInfoOptions;\n      if (typeof options === 'string') {\n        phoneInfoOptions = {\n          phoneNumber: options\n        };\n      } else {\n        phoneInfoOptions = options;\n      }\n      if ('session' in phoneInfoOptions) {\n        var session = phoneInfoOptions.session;\n        if ('phoneNumber' in phoneInfoOptions) {\n          _assert(session.type === \"enroll\", auth, \"internal-error\");\n          var response = yield startEnrollPhoneMfa(auth, {\n            idToken: session.credential,\n            phoneEnrollmentInfo: {\n              phoneNumber: phoneInfoOptions.phoneNumber,\n              recaptchaToken: recaptchaToken\n            }\n          });\n          return response.phoneSessionInfo.sessionInfo;\n        } else {\n          _assert(session.type === \"signin\", auth, \"internal-error\");\n          var mfaEnrollmentId = ((_a = phoneInfoOptions.multiFactorHint) === null || _a === void 0 ? void 0 : _a.uid) || phoneInfoOptions.multiFactorUid;\n          _assert(mfaEnrollmentId, auth, \"missing-multi-factor-info\");\n          var _response = yield startSignInPhoneMfa(auth, {\n            mfaPendingCredential: session.credential,\n            mfaEnrollmentId: mfaEnrollmentId,\n            phoneSignInInfo: {\n              recaptchaToken: recaptchaToken\n            }\n          });\n          return _response.phoneResponseInfo.sessionInfo;\n        }\n      } else {\n        var _yield$sendPhoneVerif = yield sendPhoneVerificationCode(auth, {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken: recaptchaToken\n          }),\n          sessionInfo = _yield$sendPhoneVerif.sessionInfo;\n        return sessionInfo;\n      }\n    } finally {\n      verifier._reset();\n    }\n  });\n  return _verifyPhoneNumber2.apply(this, arguments);\n}\nfunction updatePhoneNumber(_x229, _x230) {\n  return _updatePhoneNumber.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _updatePhoneNumber() {\n  _updatePhoneNumber = _asyncToGenerator(function* (user, credential) {\n    var userInternal = getModularInstance(user);\n    if (_isFirebaseServerApp(userInternal.auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth));\n    }\n    yield _link$1(userInternal, credential);\n  });\n  return _updatePhoneNumber.apply(this, arguments);\n}\nvar PhoneAuthProvider = function () {\n  function PhoneAuthProvider(auth) {\n    _classCallCheck(this, PhoneAuthProvider);\n    this.providerId = PhoneAuthProvider.PROVIDER_ID;\n    this.auth = _castAuth(auth);\n  }\n  return _createClass(PhoneAuthProvider, [{\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneOptions, applicationVerifier) {\n      return _verifyPhoneNumber(this.auth, phoneOptions, getModularInstance(applicationVerifier));\n    }\n  }], [{\n    key: \"credential\",\n    value: function credential(verificationId, verificationCode) {\n      return PhoneAuthCredential._fromVerification(verificationId, verificationCode);\n    }\n  }, {\n    key: \"credentialFromResult\",\n    value: function credentialFromResult(userCredential) {\n      var credential = userCredential;\n      return PhoneAuthProvider.credentialFromTaggedObject(credential);\n    }\n  }, {\n    key: \"credentialFromError\",\n    value: function credentialFromError(error) {\n      return PhoneAuthProvider.credentialFromTaggedObject(error.customData || {});\n    }\n  }, {\n    key: \"credentialFromTaggedObject\",\n    value: function credentialFromTaggedObject(_ref33) {\n      var tokenResponse = _ref33._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var phoneNumber = tokenResponse.phoneNumber,\n        temporaryProof = tokenResponse.temporaryProof;\n      if (phoneNumber && temporaryProof) {\n        return PhoneAuthCredential._fromTokenResponse(phoneNumber, temporaryProof);\n      }\n      return null;\n    }\n  }]);\n}();\nPhoneAuthProvider.PROVIDER_ID = \"phone\";\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = \"phone\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _withDefaultResolver(auth, resolverOverride) {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n  _assert(auth._popupRedirectResolver, auth, \"argument-error\");\n  return auth._popupRedirectResolver;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar IdpCredential = function (_AuthCredential5) {\n  function IdpCredential(params) {\n    var _this39;\n    _classCallCheck(this, IdpCredential);\n    _this39 = _callSuper(this, IdpCredential, [\"custom\", \"custom\"]);\n    _this39.params = params;\n    return _this39;\n  }\n  _inherits(IdpCredential, _AuthCredential5);\n  return _createClass(IdpCredential, [{\n    key: \"_getIdTokenResponse\",\n    value: function _getIdTokenResponse(auth) {\n      return signInWithIdp(auth, this._buildIdpRequest());\n    }\n  }, {\n    key: \"_linkToIdToken\",\n    value: function _linkToIdToken(auth, idToken) {\n      return signInWithIdp(auth, this._buildIdpRequest(idToken));\n    }\n  }, {\n    key: \"_getReauthenticationResolver\",\n    value: function _getReauthenticationResolver(auth) {\n      return signInWithIdp(auth, this._buildIdpRequest());\n    }\n  }, {\n    key: \"_buildIdpRequest\",\n    value: function _buildIdpRequest(idToken) {\n      var request = {\n        requestUri: this.params.requestUri,\n        sessionId: this.params.sessionId,\n        postBody: this.params.postBody,\n        tenantId: this.params.tenantId,\n        pendingToken: this.params.pendingToken,\n        returnSecureToken: true,\n        returnIdpCredential: true\n      };\n      if (idToken) {\n        request.idToken = idToken;\n      }\n      return request;\n    }\n  }]);\n}(AuthCredential);\nfunction _signIn(params) {\n  return _signInWithCredential(params.auth, new IdpCredential(params), params.bypassAuthState);\n}\nfunction _reauth(params) {\n  var auth = params.auth,\n    user = params.user;\n  _assert(user, auth, \"internal-error\");\n  return _reauthenticate(user, new IdpCredential(params), params.bypassAuthState);\n}\nfunction _link(_x231) {\n  return _link2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _link2() {\n  _link2 = _asyncToGenerator(function* (params) {\n    var auth = params.auth,\n      user = params.user;\n    _assert(user, auth, \"internal-error\");\n    return _link$1(user, new IdpCredential(params), params.bypassAuthState);\n  });\n  return _link2.apply(this, arguments);\n}\nvar AbstractPopupRedirectOperation = function () {\n  function AbstractPopupRedirectOperation(auth, filter, resolver, user) {\n    var bypassAuthState = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    _classCallCheck(this, AbstractPopupRedirectOperation);\n    this.auth = auth;\n    this.resolver = resolver;\n    this.user = user;\n    this.bypassAuthState = bypassAuthState;\n    this.pendingPromise = null;\n    this.eventManager = null;\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n  return _createClass(AbstractPopupRedirectOperation, [{\n    key: \"execute\",\n    value: function execute() {\n      var _this40 = this;\n      return new Promise(function () {\n        var _ref34 = _asyncToGenerator(function* (resolve, reject) {\n          _this40.pendingPromise = {\n            resolve: resolve,\n            reject: reject\n          };\n          try {\n            _this40.eventManager = yield _this40.resolver._initialize(_this40.auth);\n            yield _this40.onExecution();\n            _this40.eventManager.registerConsumer(_this40);\n          } catch (e) {\n            _this40.reject(e);\n          }\n        });\n        return function (_x232, _x233) {\n          return _ref34.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"onAuthEvent\",\n    value: function () {\n      var _onAuthEvent = _asyncToGenerator(function* (event) {\n        var urlResponse = event.urlResponse,\n          sessionId = event.sessionId,\n          postBody = event.postBody,\n          tenantId = event.tenantId,\n          error = event.error,\n          type = event.type;\n        if (error) {\n          this.reject(error);\n          return;\n        }\n        var params = {\n          auth: this.auth,\n          requestUri: urlResponse,\n          sessionId: sessionId,\n          tenantId: tenantId || undefined,\n          postBody: postBody || undefined,\n          user: this.user,\n          bypassAuthState: this.bypassAuthState\n        };\n        try {\n          this.resolve(yield this.getIdpTask(type)(params));\n        } catch (e) {\n          this.reject(e);\n        }\n      });\n      function onAuthEvent(_x234) {\n        return _onAuthEvent.apply(this, arguments);\n      }\n      return onAuthEvent;\n    }()\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      this.reject(error);\n    }\n  }, {\n    key: \"getIdpTask\",\n    value: function getIdpTask(type) {\n      switch (type) {\n        case \"signInViaPopup\":\n        case \"signInViaRedirect\":\n          return _signIn;\n        case \"linkViaPopup\":\n        case \"linkViaRedirect\":\n          return _link;\n        case \"reauthViaPopup\":\n        case \"reauthViaRedirect\":\n          return _reauth;\n        default:\n          _fail(this.auth, \"internal-error\");\n      }\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(cred) {\n      debugAssert(this.pendingPromise, 'Pending promise was never set');\n      this.pendingPromise.resolve(cred);\n      this.unregisterAndCleanUp();\n    }\n  }, {\n    key: \"reject\",\n    value: function reject(error) {\n      debugAssert(this.pendingPromise, 'Pending promise was never set');\n      this.pendingPromise.reject(error);\n      this.unregisterAndCleanUp();\n    }\n  }, {\n    key: \"unregisterAndCleanUp\",\n    value: function unregisterAndCleanUp() {\n      if (this.eventManager) {\n        this.eventManager.unregisterConsumer(this);\n      }\n      this.pendingPromise = null;\n      this.cleanUp();\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\nfunction signInWithPopup(_x235, _x236, _x237) {\n  return _signInWithPopup.apply(this, arguments);\n}\nfunction _signInWithPopup() {\n  _signInWithPopup = _asyncToGenerator(function* (auth, provider, resolver) {\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_createError(auth, \"operation-not-supported-in-this-environment\"));\n    }\n    var authInternal = _castAuth(auth);\n    _assertInstanceOf(auth, provider, FederatedAuthProvider);\n    var resolverInternal = _withDefaultResolver(authInternal, resolver);\n    var action = new PopupOperation(authInternal, \"signInViaPopup\", provider, resolverInternal);\n    return action.executeNotNull();\n  });\n  return _signInWithPopup.apply(this, arguments);\n}\nfunction reauthenticateWithPopup(_x238, _x239, _x240) {\n  return _reauthenticateWithPopup.apply(this, arguments);\n}\nfunction _reauthenticateWithPopup() {\n  _reauthenticateWithPopup = _asyncToGenerator(function* (user, provider, resolver) {\n    var userInternal = getModularInstance(user);\n    if (_isFirebaseServerApp(userInternal.auth.app)) {\n      return Promise.reject(_createError(userInternal.auth, \"operation-not-supported-in-this-environment\"));\n    }\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n    var resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n    var action = new PopupOperation(userInternal.auth, \"reauthViaPopup\", provider, resolverInternal, userInternal);\n    return action.executeNotNull();\n  });\n  return _reauthenticateWithPopup.apply(this, arguments);\n}\nfunction linkWithPopup(_x241, _x242, _x243) {\n  return _linkWithPopup.apply(this, arguments);\n}\nfunction _linkWithPopup() {\n  _linkWithPopup = _asyncToGenerator(function* (user, provider, resolver) {\n    var userInternal = getModularInstance(user);\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n    var resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n    var action = new PopupOperation(userInternal.auth, \"linkViaPopup\", provider, resolverInternal, userInternal);\n    return action.executeNotNull();\n  });\n  return _linkWithPopup.apply(this, arguments);\n}\nvar PopupOperation = function (_AbstractPopupRedirec) {\n  function PopupOperation(auth, filter, provider, resolver, user) {\n    var _this41;\n    _classCallCheck(this, PopupOperation);\n    _this41 = _callSuper(this, PopupOperation, [auth, filter, resolver, user]);\n    _this41.provider = provider;\n    _this41.authWindow = null;\n    _this41.pollId = null;\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n    PopupOperation.currentPopupAction = _this41;\n    return _this41;\n  }\n  _inherits(PopupOperation, _AbstractPopupRedirec);\n  return _createClass(PopupOperation, [{\n    key: \"executeNotNull\",\n    value: function () {\n      var _executeNotNull = _asyncToGenerator(function* () {\n        var result = yield this.execute();\n        _assert(result, this.auth, \"internal-error\");\n        return result;\n      });\n      function executeNotNull() {\n        return _executeNotNull.apply(this, arguments);\n      }\n      return executeNotNull;\n    }()\n  }, {\n    key: \"onExecution\",\n    value: function () {\n      var _onExecution = _asyncToGenerator(function* () {\n        var _this42 = this;\n        debugAssert(this.filter.length === 1, 'Popup operations only handle one event');\n        var eventId = _generateEventId();\n        this.authWindow = yield this.resolver._openPopup(this.auth, this.provider, this.filter[0], eventId);\n        this.authWindow.associatedEvent = eventId;\n        this.resolver._originValidation(this.auth).catch(function (e) {\n          _this42.reject(e);\n        });\n        this.resolver._isIframeWebStorageSupported(this.auth, function (isSupported) {\n          if (!isSupported) {\n            _this42.reject(_createError(_this42.auth, \"web-storage-unsupported\"));\n          }\n        });\n        this.pollUserCancellation();\n      });\n      function onExecution() {\n        return _onExecution.apply(this, arguments);\n      }\n      return onExecution;\n    }()\n  }, {\n    key: \"eventId\",\n    get: function get() {\n      var _a;\n      return ((_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.associatedEvent) || null;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.reject(_createError(this.auth, \"cancelled-popup-request\"));\n    }\n  }, {\n    key: \"cleanUp\",\n    value: function cleanUp() {\n      if (this.authWindow) {\n        this.authWindow.close();\n      }\n      if (this.pollId) {\n        window.clearTimeout(this.pollId);\n      }\n      this.authWindow = null;\n      this.pollId = null;\n      PopupOperation.currentPopupAction = null;\n    }\n  }, {\n    key: \"pollUserCancellation\",\n    value: function pollUserCancellation() {\n      var _this43 = this;\n      var _poll3 = function poll() {\n        var _a, _b;\n        if ((_b = (_a = _this43.authWindow) === null || _a === void 0 ? void 0 : _a.window) === null || _b === void 0 ? void 0 : _b.closed) {\n          _this43.pollId = window.setTimeout(function () {\n            _this43.pollId = null;\n            _this43.reject(_createError(_this43.auth, \"popup-closed-by-user\"));\n          }, 8000);\n          return;\n        }\n        _this43.pollId = window.setTimeout(_poll3, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n      };\n      _poll3();\n    }\n  }]);\n}(AbstractPopupRedirectOperation);\nPopupOperation.currentPopupAction = null;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PENDING_REDIRECT_KEY = 'pendingRedirect';\nvar redirectOutcomeMap = new Map();\nvar RedirectAction = function (_AbstractPopupRedirec2) {\n  function RedirectAction(auth, resolver) {\n    var _this44;\n    var bypassAuthState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, RedirectAction);\n    _this44 = _callSuper(this, RedirectAction, [auth, [\"signInViaRedirect\", \"linkViaRedirect\", \"reauthViaRedirect\", \"unknown\"], resolver, undefined, bypassAuthState]);\n    _this44.eventId = null;\n    return _this44;\n  }\n  _inherits(RedirectAction, _AbstractPopupRedirec2);\n  return _createClass(RedirectAction, [{\n    key: \"execute\",\n    value: (function () {\n      var _execute2 = _asyncToGenerator(function* () {\n        var readyOutcome = redirectOutcomeMap.get(this.auth._key());\n        if (!readyOutcome) {\n          try {\n            var hasPendingRedirect = yield _getAndClearPendingRedirectStatus(this.resolver, this.auth);\n            var result = hasPendingRedirect ? yield _superPropGet(RedirectAction, \"execute\", this, 3)([]) : null;\n            readyOutcome = function readyOutcome() {\n              return Promise.resolve(result);\n            };\n          } catch (e) {\n            readyOutcome = function readyOutcome() {\n              return Promise.reject(e);\n            };\n          }\n          redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n        }\n        if (!this.bypassAuthState) {\n          redirectOutcomeMap.set(this.auth._key(), function () {\n            return Promise.resolve(null);\n          });\n        }\n        return readyOutcome();\n      });\n      function execute() {\n        return _execute2.apply(this, arguments);\n      }\n      return execute;\n    }())\n  }, {\n    key: \"onAuthEvent\",\n    value: function () {\n      var _onAuthEvent2 = _asyncToGenerator(function* (event) {\n        if (event.type === \"signInViaRedirect\") {\n          return _superPropGet(RedirectAction, \"onAuthEvent\", this, 3)([event]);\n        } else if (event.type === \"unknown\") {\n          this.resolve(null);\n          return;\n        }\n        if (event.eventId) {\n          var user = yield this.auth._redirectUserForId(event.eventId);\n          if (user) {\n            this.user = user;\n            return _superPropGet(RedirectAction, \"onAuthEvent\", this, 3)([event]);\n          } else {\n            this.resolve(null);\n          }\n        }\n      });\n      function onAuthEvent(_x244) {\n        return _onAuthEvent2.apply(this, arguments);\n      }\n      return onAuthEvent;\n    }()\n  }, {\n    key: \"onExecution\",\n    value: function () {\n      var _onExecution2 = _asyncToGenerator(function* () {});\n      function onExecution() {\n        return _onExecution2.apply(this, arguments);\n      }\n      return onExecution;\n    }()\n  }, {\n    key: \"cleanUp\",\n    value: function cleanUp() {}\n  }]);\n}(AbstractPopupRedirectOperation);\nfunction _getAndClearPendingRedirectStatus(_x245, _x246) {\n  return _getAndClearPendingRedirectStatus2.apply(this, arguments);\n}\nfunction _getAndClearPendingRedirectStatus2() {\n  _getAndClearPendingRedirectStatus2 = _asyncToGenerator(function* (resolver, auth) {\n    var key = pendingRedirectKey(auth);\n    var persistence = resolverPersistence(resolver);\n    if (!(yield persistence._isAvailable())) {\n      return false;\n    }\n    var hasPendingRedirect = (yield persistence._get(key)) === 'true';\n    yield persistence._remove(key);\n    return hasPendingRedirect;\n  });\n  return _getAndClearPendingRedirectStatus2.apply(this, arguments);\n}\nfunction _setPendingRedirectStatus(_x247, _x248) {\n  return _setPendingRedirectStatus2.apply(this, arguments);\n}\nfunction _setPendingRedirectStatus2() {\n  _setPendingRedirectStatus2 = _asyncToGenerator(function* (resolver, auth) {\n    return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n  });\n  return _setPendingRedirectStatus2.apply(this, arguments);\n}\nfunction _clearRedirectOutcomes() {\n  redirectOutcomeMap.clear();\n}\nfunction _overrideRedirectResult(auth, result) {\n  redirectOutcomeMap.set(auth._key(), result);\n}\nfunction resolverPersistence(resolver) {\n  return _getInstance(resolver._redirectPersistence);\n}\nfunction pendingRedirectKey(auth) {\n  return _persistenceKeyName(PENDING_REDIRECT_KEY, auth.config.apiKey, auth.name);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction signInWithRedirect(auth, provider, resolver) {\n  return _signInWithRedirect(auth, provider, resolver);\n}\nfunction _signInWithRedirect(_x249, _x250, _x251) {\n  return _signInWithRedirect2.apply(this, arguments);\n}\nfunction _signInWithRedirect2() {\n  _signInWithRedirect2 = _asyncToGenerator(function* (auth, provider, resolver) {\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var authInternal = _castAuth(auth);\n    _assertInstanceOf(auth, provider, FederatedAuthProvider);\n    yield authInternal._initializationPromise;\n    var resolverInternal = _withDefaultResolver(authInternal, resolver);\n    yield _setPendingRedirectStatus(resolverInternal, authInternal);\n    return resolverInternal._openRedirect(authInternal, provider, \"signInViaRedirect\");\n  });\n  return _signInWithRedirect2.apply(this, arguments);\n}\nfunction reauthenticateWithRedirect(user, provider, resolver) {\n  return _reauthenticateWithRedirect(user, provider, resolver);\n}\nfunction _reauthenticateWithRedirect(_x252, _x253, _x254) {\n  return _reauthenticateWithRedirect2.apply(this, arguments);\n}\nfunction _reauthenticateWithRedirect2() {\n  _reauthenticateWithRedirect2 = _asyncToGenerator(function* (user, provider, resolver) {\n    var userInternal = getModularInstance(user);\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n    if (_isFirebaseServerApp(userInternal.auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth));\n    }\n    yield userInternal.auth._initializationPromise;\n    var resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n    yield _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n    var eventId = yield prepareUserForRedirect(userInternal);\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"reauthViaRedirect\", eventId);\n  });\n  return _reauthenticateWithRedirect2.apply(this, arguments);\n}\nfunction linkWithRedirect(user, provider, resolver) {\n  return _linkWithRedirect(user, provider, resolver);\n}\nfunction _linkWithRedirect(_x255, _x256, _x257) {\n  return _linkWithRedirect2.apply(this, arguments);\n}\nfunction _linkWithRedirect2() {\n  _linkWithRedirect2 = _asyncToGenerator(function* (user, provider, resolver) {\n    var userInternal = getModularInstance(user);\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n    yield userInternal.auth._initializationPromise;\n    var resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n    yield _assertLinkedStatus(false, userInternal, provider.providerId);\n    yield _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n    var eventId = yield prepareUserForRedirect(userInternal);\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"linkViaRedirect\", eventId);\n  });\n  return _linkWithRedirect2.apply(this, arguments);\n}\nfunction getRedirectResult(_x258, _x259) {\n  return _getRedirectResult2.apply(this, arguments);\n}\nfunction _getRedirectResult2() {\n  _getRedirectResult2 = _asyncToGenerator(function* (auth, resolver) {\n    yield _castAuth(auth)._initializationPromise;\n    return _getRedirectResult(auth, resolver, false);\n  });\n  return _getRedirectResult2.apply(this, arguments);\n}\nfunction _getRedirectResult(_x260, _x261) {\n  return _getRedirectResult3.apply(this, arguments);\n}\nfunction _getRedirectResult3() {\n  _getRedirectResult3 = _asyncToGenerator(function* (auth, resolverExtern) {\n    var bypassAuthState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (_isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    var authInternal = _castAuth(auth);\n    var resolver = _withDefaultResolver(authInternal, resolverExtern);\n    var action = new RedirectAction(authInternal, resolver, bypassAuthState);\n    var result = yield action.execute();\n    if (result && !bypassAuthState) {\n      delete result.user._redirectEventId;\n      yield authInternal._persistUserIfCurrent(result.user);\n      yield authInternal._setRedirectUser(null, resolverExtern);\n    }\n    return result;\n  });\n  return _getRedirectResult3.apply(this, arguments);\n}\nfunction prepareUserForRedirect(_x262) {\n  return _prepareUserForRedirect.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _prepareUserForRedirect() {\n  _prepareUserForRedirect = _asyncToGenerator(function* (user) {\n    var eventId = _generateEventId(`${user.uid}:::`);\n    user._redirectEventId = eventId;\n    yield user.auth._setRedirectUser(user);\n    yield user.auth._persistUserIfCurrent(user);\n    return eventId;\n  });\n  return _prepareUserForRedirect.apply(this, arguments);\n}\nvar EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\nvar AuthEventManager = function () {\n  function AuthEventManager(auth) {\n    _classCallCheck(this, AuthEventManager);\n    this.auth = auth;\n    this.cachedEventUids = new Set();\n    this.consumers = new Set();\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n    this.lastProcessedEventTime = Date.now();\n  }\n  return _createClass(AuthEventManager, [{\n    key: \"registerConsumer\",\n    value: function registerConsumer(authEventConsumer) {\n      this.consumers.add(authEventConsumer);\n      if (this.queuedRedirectEvent && this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)) {\n        this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n        this.saveEventToCache(this.queuedRedirectEvent);\n        this.queuedRedirectEvent = null;\n      }\n    }\n  }, {\n    key: \"unregisterConsumer\",\n    value: function unregisterConsumer(authEventConsumer) {\n      this.consumers.delete(authEventConsumer);\n    }\n  }, {\n    key: \"onEvent\",\n    value: function onEvent(event) {\n      var _this45 = this;\n      if (this.hasEventBeenHandled(event)) {\n        return false;\n      }\n      var handled = false;\n      this.consumers.forEach(function (consumer) {\n        if (_this45.isEventForConsumer(event, consumer)) {\n          handled = true;\n          _this45.sendToConsumer(event, consumer);\n          _this45.saveEventToCache(event);\n        }\n      });\n      if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n        return handled;\n      }\n      this.hasHandledPotentialRedirect = true;\n      if (!handled) {\n        this.queuedRedirectEvent = event;\n        handled = true;\n      }\n      return handled;\n    }\n  }, {\n    key: \"sendToConsumer\",\n    value: function sendToConsumer(event, consumer) {\n      var _a;\n      if (event.error && !isNullRedirectEvent(event)) {\n        var code = ((_a = event.error.code) === null || _a === void 0 ? void 0 : _a.split('auth/')[1]) || \"internal-error\";\n        consumer.onError(_createError(this.auth, code));\n      } else {\n        consumer.onAuthEvent(event);\n      }\n    }\n  }, {\n    key: \"isEventForConsumer\",\n    value: function isEventForConsumer(event, consumer) {\n      var eventIdMatches = consumer.eventId === null || !!event.eventId && event.eventId === consumer.eventId;\n      return consumer.filter.includes(event.type) && eventIdMatches;\n    }\n  }, {\n    key: \"hasEventBeenHandled\",\n    value: function hasEventBeenHandled(event) {\n      if (Date.now() - this.lastProcessedEventTime >= EVENT_DUPLICATION_CACHE_DURATION_MS) {\n        this.cachedEventUids.clear();\n      }\n      return this.cachedEventUids.has(eventUid(event));\n    }\n  }, {\n    key: \"saveEventToCache\",\n    value: function saveEventToCache(event) {\n      this.cachedEventUids.add(eventUid(event));\n      this.lastProcessedEventTime = Date.now();\n    }\n  }]);\n}();\nfunction eventUid(e) {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(function (v) {\n    return v;\n  }).join('-');\n}\nfunction isNullRedirectEvent(_ref35) {\n  var type = _ref35.type,\n    error = _ref35.error;\n  return type === \"unknown\" && (error === null || error === void 0 ? void 0 : error.code) === `auth/${\"no-auth-event\"}`;\n}\nfunction isRedirectEvent(event) {\n  switch (event.type) {\n    case \"signInViaRedirect\":\n    case \"linkViaRedirect\":\n    case \"reauthViaRedirect\":\n      return true;\n    case \"unknown\":\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getProjectConfig(_x263) {\n  return _getProjectConfig2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getProjectConfig2() {\n  _getProjectConfig2 = _asyncToGenerator(function* (auth) {\n    var request = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _performApiRequest(auth, \"GET\", \"/v1/projects\", request);\n  });\n  return _getProjectConfig2.apply(this, arguments);\n}\nvar IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nvar HTTP_REGEX = /^https?/;\nfunction _validateOrigin(_x264) {\n  return _validateOrigin2.apply(this, arguments);\n}\nfunction _validateOrigin2() {\n  _validateOrigin2 = _asyncToGenerator(function* (auth) {\n    if (auth.config.emulator) {\n      return;\n    }\n    var _yield$_getProjectCon = yield _getProjectConfig(auth),\n      authorizedDomains = _yield$_getProjectCon.authorizedDomains;\n    for (var domain of authorizedDomains) {\n      try {\n        if (matchDomain(domain)) {\n          return;\n        }\n      } catch (_a) {}\n    }\n    _fail(auth, \"unauthorized-domain\");\n  });\n  return _validateOrigin2.apply(this, arguments);\n}\nfunction matchDomain(expected) {\n  var currentUrl = _getCurrentUrl();\n  var _URL = new URL(currentUrl),\n    protocol = _URL.protocol,\n    hostname = _URL.hostname;\n  if (expected.startsWith('chrome-extension://')) {\n    var ceUrl = new URL(expected);\n    if (ceUrl.hostname === '' && hostname === '') {\n      return protocol === 'chrome-extension:' && expected.replace('chrome-extension://', '') === currentUrl.replace('chrome-extension://', '');\n    }\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    return hostname === expected;\n  }\n  var escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  var re = new RegExp('^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$', 'i');\n  return re.test(hostname);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar NETWORK_TIMEOUT = new Delay(30000, 60000);\nfunction resetUnloadedGapiModules() {\n  var beacon = _window().___jsl;\n  if (beacon === null || beacon === void 0 ? void 0 : beacon.H) {\n    for (var hint of Object.keys(beacon.H)) {\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      beacon.H[hint].r = _toConsumableArray(beacon.H[hint].L);\n      if (beacon.CP) {\n        for (var i = 0; i < beacon.CP.length; i++) {\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\nfunction loadGapi(auth) {\n  return new Promise(function (resolve, reject) {\n    var _a, _b, _c;\n    function loadGapiIframe() {\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: function callback() {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: function ontimeout() {\n          resetUnloadedGapiModules();\n          reject(_createError(auth, \"network-request-failed\"));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n    if ((_b = (_a = _window().gapi) === null || _a === void 0 ? void 0 : _a.iframes) === null || _b === void 0 ? void 0 : _b.Iframe) {\n      resolve(gapi.iframes.getContext());\n    } else if (!!((_c = _window().gapi) === null || _c === void 0 ? void 0 : _c.load)) {\n      loadGapiIframe();\n    } else {\n      var cbName = _generateCallbackName('iframefcb');\n      _window()[cbName] = function () {\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          reject(_createError(auth, \"network-request-failed\"));\n        }\n      };\n      return _loadJS(`${_gapiScriptUrl()}?onload=${cbName}`).catch(function (e) {\n        return reject(e);\n      });\n    }\n  }).catch(function (error) {\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\nvar cachedGApiLoader = null;\nfunction _loadGapi(auth) {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PING_TIMEOUT = new Delay(5000, 15000);\nvar IFRAME_PATH = '__/auth/iframe';\nvar EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\nvar IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\nvar EID_FROM_APIHOST = new Map([[\"identitytoolkit.googleapis.com\", 'p'], ['staging-identitytoolkit.sandbox.googleapis.com', 's'], ['test-identitytoolkit.sandbox.googleapis.com', 't']]);\nfunction getIframeUrl(auth) {\n  var config = auth.config;\n  _assert(config.authDomain, auth, \"auth-domain-config-required\");\n  var url = config.emulator ? _emulatorUrl(config, EMULATED_IFRAME_PATH) : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n  var params = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  var eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  var frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\nfunction _openIframe(_x265) {\n  return _openIframe2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _openIframe2() {\n  _openIframe2 = _asyncToGenerator(function* (auth) {\n    var context = yield _loadGapi(auth);\n    var gapi = _window().gapi;\n    _assert(gapi, auth, \"internal-error\");\n    return context.open({\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    }, function (iframe) {\n      return new Promise(function () {\n        var _ref46 = _asyncToGenerator(function* (resolve, reject) {\n          yield iframe.restyle({\n            setHideOnLeave: false\n          });\n          var networkError = _createError(auth, \"network-request-failed\");\n          var networkErrorTimer = _window().setTimeout(function () {\n            reject(networkError);\n          }, PING_TIMEOUT.get());\n          function clearTimerAndResolve() {\n            _window().clearTimeout(networkErrorTimer);\n            resolve(iframe);\n          }\n          iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, function () {\n            reject(networkError);\n          });\n        });\n        return function (_x291, _x292) {\n          return _ref46.apply(this, arguments);\n        };\n      }());\n    });\n  });\n  return _openIframe2.apply(this, arguments);\n}\nvar BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\nvar DEFAULT_WIDTH = 500;\nvar DEFAULT_HEIGHT = 600;\nvar TARGET_BLANK = '_blank';\nvar FIREFOX_EMPTY_URL = 'http://localhost';\nvar AuthPopup = function () {\n  function AuthPopup(window) {\n    _classCallCheck(this, AuthPopup);\n    this.window = window;\n    this.associatedEvent = null;\n  }\n  return _createClass(AuthPopup, [{\n    key: \"close\",\n    value: function close() {\n      if (this.window) {\n        try {\n          this.window.close();\n        } catch (e) {}\n      }\n    }\n  }]);\n}();\nfunction _open(auth, url, name) {\n  var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_WIDTH;\n  var height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : DEFAULT_HEIGHT;\n  var top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  var left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  var target = '';\n  var options = Object.assign(Object.assign({}, BASE_POPUP_OPTIONS), {\n    width: width.toString(),\n    height: height.toString(),\n    top: top,\n    left: left\n  });\n  var ua = getUA().toLowerCase();\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n  if (_isFirefox(ua)) {\n    url = url || FIREFOX_EMPTY_URL;\n    options.scrollbars = 'yes';\n  }\n  var optionsString = Object.entries(options).reduce(function (accum, _ref36) {\n    var _ref37 = _slicedToArray(_ref36, 2),\n      key = _ref37[0],\n      value = _ref37[1];\n    return `${accum}${key}=${value},`;\n  }, '');\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n  var newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, \"popup-blocked\");\n  try {\n    newWin.focus();\n  } catch (e) {}\n  return new AuthPopup(newWin);\n}\nfunction openAsNewWindowIOS(url, target) {\n  var el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  var click = document.createEvent('MouseEvent');\n  click.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 1, null);\n  el.dispatchEvent(click);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar WIDGET_PATH = '__/auth/handler';\nvar EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\nvar FIREBASE_APP_CHECK_FRAGMENT_ID = encodeURIComponent('fac');\nfunction _getRedirectUrl(_x266, _x267, _x268, _x269, _x270, _x271) {\n  return _getRedirectUrl2.apply(this, arguments);\n}\nfunction _getRedirectUrl2() {\n  _getRedirectUrl2 = _asyncToGenerator(function* (auth, provider, authType, redirectUrl, eventId, additionalParams) {\n    _assert(auth.config.authDomain, auth, \"auth-domain-config-required\");\n    _assert(auth.config.apiKey, auth, \"invalid-api-key\");\n    var params = {\n      apiKey: auth.config.apiKey,\n      appName: auth.name,\n      authType: authType,\n      redirectUrl: redirectUrl,\n      v: SDK_VERSION,\n      eventId: eventId\n    };\n    if (provider instanceof FederatedAuthProvider) {\n      provider.setDefaultLanguage(auth.languageCode);\n      params.providerId = provider.providerId || '';\n      if (!isEmpty(provider.getCustomParameters())) {\n        params.customParameters = JSON.stringify(provider.getCustomParameters());\n      }\n      for (var _ref47 of Object.entries(additionalParams || {})) {\n        var _ref48 = _slicedToArray(_ref47, 2);\n        var key = _ref48[0];\n        var value = _ref48[1];\n        params[key] = value;\n      }\n    }\n    if (provider instanceof BaseOAuthProvider) {\n      var scopes = provider.getScopes().filter(function (scope) {\n        return scope !== '';\n      });\n      if (scopes.length > 0) {\n        params.scopes = scopes.join(',');\n      }\n    }\n    if (auth.tenantId) {\n      params.tid = auth.tenantId;\n    }\n    var paramsDict = params;\n    for (var _key8 of Object.keys(paramsDict)) {\n      if (paramsDict[_key8] === undefined) {\n        delete paramsDict[_key8];\n      }\n    }\n    var appCheckToken = yield auth._getAppCheckToken();\n    var appCheckTokenFragment = appCheckToken ? `#${FIREBASE_APP_CHECK_FRAGMENT_ID}=${encodeURIComponent(appCheckToken)}` : '';\n    return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(1)}${appCheckTokenFragment}`;\n  });\n  return _getRedirectUrl2.apply(this, arguments);\n}\nfunction getHandlerBase(_ref38) {\n  var config = _ref38.config;\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\nvar BrowserPopupRedirectResolver = function () {\n  function BrowserPopupRedirectResolver() {\n    _classCallCheck(this, BrowserPopupRedirectResolver);\n    this.eventManagers = {};\n    this.iframes = {};\n    this.originValidationPromises = {};\n    this._redirectPersistence = browserSessionPersistence;\n    this._completeRedirectFn = _getRedirectResult;\n    this._overrideRedirectResult = _overrideRedirectResult;\n  }\n  return _createClass(BrowserPopupRedirectResolver, [{\n    key: \"_openPopup\",\n    value: function () {\n      var _openPopup2 = _asyncToGenerator(function* (auth, provider, authType, eventId) {\n        var _a;\n        debugAssert((_a = this.eventManagers[auth._key()]) === null || _a === void 0 ? void 0 : _a.manager, '_initialize() not called before _openPopup()');\n        var url = yield _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId);\n        return _open(auth, url, _generateEventId());\n      });\n      function _openPopup(_x272, _x273, _x274, _x275) {\n        return _openPopup2.apply(this, arguments);\n      }\n      return _openPopup;\n    }()\n  }, {\n    key: \"_openRedirect\",\n    value: function () {\n      var _openRedirect2 = _asyncToGenerator(function* (auth, provider, authType, eventId) {\n        yield this._originValidation(auth);\n        var url = yield _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId);\n        _setWindowLocation(url);\n        return new Promise(function () {});\n      });\n      function _openRedirect(_x276, _x277, _x278, _x279) {\n        return _openRedirect2.apply(this, arguments);\n      }\n      return _openRedirect;\n    }()\n  }, {\n    key: \"_initialize\",\n    value: function _initialize(auth) {\n      var _this46 = this;\n      var key = auth._key();\n      if (this.eventManagers[key]) {\n        var _this$eventManagers$k = this.eventManagers[key],\n          manager = _this$eventManagers$k.manager,\n          _promise = _this$eventManagers$k.promise;\n        if (manager) {\n          return Promise.resolve(manager);\n        } else {\n          debugAssert(_promise, 'If manager is not set, promise should be');\n          return _promise;\n        }\n      }\n      var promise = this.initAndGetManager(auth);\n      this.eventManagers[key] = {\n        promise: promise\n      };\n      promise.catch(function () {\n        delete _this46.eventManagers[key];\n      });\n      return promise;\n    }\n  }, {\n    key: \"initAndGetManager\",\n    value: function () {\n      var _initAndGetManager = _asyncToGenerator(function* (auth) {\n        var iframe = yield _openIframe(auth);\n        var manager = new AuthEventManager(auth);\n        iframe.register('authEvent', function (iframeEvent) {\n          _assert(iframeEvent === null || iframeEvent === void 0 ? void 0 : iframeEvent.authEvent, auth, \"invalid-auth-event\");\n          var handled = manager.onEvent(iframeEvent.authEvent);\n          return {\n            status: handled ? \"ACK\" : \"ERROR\"\n          };\n        }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\n        this.eventManagers[auth._key()] = {\n          manager: manager\n        };\n        this.iframes[auth._key()] = iframe;\n        return manager;\n      });\n      function initAndGetManager(_x280) {\n        return _initAndGetManager.apply(this, arguments);\n      }\n      return initAndGetManager;\n    }()\n  }, {\n    key: \"_isIframeWebStorageSupported\",\n    value: function _isIframeWebStorageSupported(auth, cb) {\n      var iframe = this.iframes[auth._key()];\n      iframe.send(WEB_STORAGE_SUPPORT_KEY, {\n        type: WEB_STORAGE_SUPPORT_KEY\n      }, function (result) {\n        var _a;\n        var isSupported = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n        _fail(auth, \"internal-error\");\n      }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\n    }\n  }, {\n    key: \"_originValidation\",\n    value: function _originValidation(auth) {\n      var key = auth._key();\n      if (!this.originValidationPromises[key]) {\n        this.originValidationPromises[key] = _validateOrigin(auth);\n      }\n      return this.originValidationPromises[key];\n    }\n  }, {\n    key: \"_shouldInitProactively\",\n    get: function get() {\n      return _isMobileBrowser() || _isSafari() || _isIOS();\n    }\n  }]);\n}();\nvar browserPopupRedirectResolver = BrowserPopupRedirectResolver;\nvar MultiFactorAssertionImpl = function () {\n  function MultiFactorAssertionImpl(factorId) {\n    _classCallCheck(this, MultiFactorAssertionImpl);\n    this.factorId = factorId;\n  }\n  return _createClass(MultiFactorAssertionImpl, [{\n    key: \"_process\",\n    value: function _process(auth, session, displayName) {\n      switch (session.type) {\n        case \"enroll\":\n          return this._finalizeEnroll(auth, session.credential, displayName);\n        case \"signin\":\n          return this._finalizeSignIn(auth, session.credential);\n        default:\n          return debugFail('unexpected MultiFactorSessionType');\n      }\n    }\n  }]);\n}();\nvar PhoneMultiFactorAssertionImpl = function (_MultiFactorAssertion) {\n  function PhoneMultiFactorAssertionImpl(credential) {\n    var _this47;\n    _classCallCheck(this, PhoneMultiFactorAssertionImpl);\n    _this47 = _callSuper(this, PhoneMultiFactorAssertionImpl, [\"phone\"]);\n    _this47.credential = credential;\n    return _this47;\n  }\n  _inherits(PhoneMultiFactorAssertionImpl, _MultiFactorAssertion);\n  return _createClass(PhoneMultiFactorAssertionImpl, [{\n    key: \"_finalizeEnroll\",\n    value: function _finalizeEnroll(auth, idToken, displayName) {\n      return finalizeEnrollPhoneMfa(auth, {\n        idToken: idToken,\n        displayName: displayName,\n        phoneVerificationInfo: this.credential._makeVerificationRequest()\n      });\n    }\n  }, {\n    key: \"_finalizeSignIn\",\n    value: function _finalizeSignIn(auth, mfaPendingCredential) {\n      return finalizeSignInPhoneMfa(auth, {\n        mfaPendingCredential: mfaPendingCredential,\n        phoneVerificationInfo: this.credential._makeVerificationRequest()\n      });\n    }\n  }], [{\n    key: \"_fromCredential\",\n    value: function _fromCredential(credential) {\n      return new PhoneMultiFactorAssertionImpl(credential);\n    }\n  }]);\n}(MultiFactorAssertionImpl);\nvar PhoneMultiFactorGenerator = function () {\n  function PhoneMultiFactorGenerator() {\n    _classCallCheck(this, PhoneMultiFactorGenerator);\n  }\n  return _createClass(PhoneMultiFactorGenerator, null, [{\n    key: \"assertion\",\n    value: function assertion(credential) {\n      return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n    }\n  }]);\n}();\nPhoneMultiFactorGenerator.FACTOR_ID = 'phone';\nvar TotpMultiFactorGenerator = function () {\n  function TotpMultiFactorGenerator() {\n    _classCallCheck(this, TotpMultiFactorGenerator);\n  }\n  return _createClass(TotpMultiFactorGenerator, null, [{\n    key: \"assertionForEnrollment\",\n    value: function assertionForEnrollment(secret, oneTimePassword) {\n      return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n    }\n  }, {\n    key: \"assertionForSignIn\",\n    value: function assertionForSignIn(enrollmentId, oneTimePassword) {\n      return TotpMultiFactorAssertionImpl._fromEnrollmentId(enrollmentId, oneTimePassword);\n    }\n  }, {\n    key: \"generateSecret\",\n    value: (function () {\n      var _generateSecret = _asyncToGenerator(function* (session) {\n        var _a;\n        var mfaSession = session;\n        _assert(typeof ((_a = mfaSession.user) === null || _a === void 0 ? void 0 : _a.auth) !== 'undefined', \"internal-error\");\n        var response = yield startEnrollTotpMfa(mfaSession.user.auth, {\n          idToken: mfaSession.credential,\n          totpEnrollmentInfo: {}\n        });\n        return TotpSecret._fromStartTotpMfaEnrollmentResponse(response, mfaSession.user.auth);\n      });\n      function generateSecret(_x281) {\n        return _generateSecret.apply(this, arguments);\n      }\n      return generateSecret;\n    }())\n  }]);\n}();\nTotpMultiFactorGenerator.FACTOR_ID = \"totp\";\nvar TotpMultiFactorAssertionImpl = function (_MultiFactorAssertion2) {\n  function TotpMultiFactorAssertionImpl(otp, enrollmentId, secret) {\n    var _this48;\n    _classCallCheck(this, TotpMultiFactorAssertionImpl);\n    _this48 = _callSuper(this, TotpMultiFactorAssertionImpl, [\"totp\"]);\n    _this48.otp = otp;\n    _this48.enrollmentId = enrollmentId;\n    _this48.secret = secret;\n    return _this48;\n  }\n  _inherits(TotpMultiFactorAssertionImpl, _MultiFactorAssertion2);\n  return _createClass(TotpMultiFactorAssertionImpl, [{\n    key: \"_finalizeEnroll\",\n    value: (function () {\n      var _finalizeEnroll2 = _asyncToGenerator(function* (auth, idToken, displayName) {\n        _assert(typeof this.secret !== 'undefined', auth, \"argument-error\");\n        return finalizeEnrollTotpMfa(auth, {\n          idToken: idToken,\n          displayName: displayName,\n          totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n        });\n      });\n      function _finalizeEnroll(_x282, _x283, _x284) {\n        return _finalizeEnroll2.apply(this, arguments);\n      }\n      return _finalizeEnroll;\n    }())\n  }, {\n    key: \"_finalizeSignIn\",\n    value: (function () {\n      var _finalizeSignIn2 = _asyncToGenerator(function* (auth, mfaPendingCredential) {\n        _assert(this.enrollmentId !== undefined && this.otp !== undefined, auth, \"argument-error\");\n        var totpVerificationInfo = {\n          verificationCode: this.otp\n        };\n        return finalizeSignInTotpMfa(auth, {\n          mfaPendingCredential: mfaPendingCredential,\n          mfaEnrollmentId: this.enrollmentId,\n          totpVerificationInfo: totpVerificationInfo\n        });\n      });\n      function _finalizeSignIn(_x285, _x286) {\n        return _finalizeSignIn2.apply(this, arguments);\n      }\n      return _finalizeSignIn;\n    }())\n  }], [{\n    key: \"_fromSecret\",\n    value: function _fromSecret(secret, otp) {\n      return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n    }\n  }, {\n    key: \"_fromEnrollmentId\",\n    value: function _fromEnrollmentId(enrollmentId, otp) {\n      return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n    }\n  }]);\n}(MultiFactorAssertionImpl);\nvar TotpSecret = function () {\n  function TotpSecret(secretKey, hashingAlgorithm, codeLength, codeIntervalSeconds, enrollmentCompletionDeadline, sessionInfo, auth) {\n    _classCallCheck(this, TotpSecret);\n    this.sessionInfo = sessionInfo;\n    this.auth = auth;\n    this.secretKey = secretKey;\n    this.hashingAlgorithm = hashingAlgorithm;\n    this.codeLength = codeLength;\n    this.codeIntervalSeconds = codeIntervalSeconds;\n    this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n  }\n  return _createClass(TotpSecret, [{\n    key: \"_makeTotpVerificationInfo\",\n    value: function _makeTotpVerificationInfo(otp) {\n      return {\n        sessionInfo: this.sessionInfo,\n        verificationCode: otp\n      };\n    }\n  }, {\n    key: \"generateQrCodeUrl\",\n    value: function generateQrCodeUrl(accountName, issuer) {\n      var _a;\n      var useDefaults = false;\n      if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n        useDefaults = true;\n      }\n      if (useDefaults) {\n        if (_isEmptyString(accountName)) {\n          accountName = ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.email) || 'unknownuser';\n        }\n        if (_isEmptyString(issuer)) {\n          issuer = this.auth.name;\n        }\n      }\n      return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\n    }\n  }], [{\n    key: \"_fromStartTotpMfaEnrollmentResponse\",\n    value: function _fromStartTotpMfaEnrollmentResponse(response, auth) {\n      return new TotpSecret(response.totpSessionInfo.sharedSecretKey, response.totpSessionInfo.hashingAlgorithm, response.totpSessionInfo.verificationCodeLength, response.totpSessionInfo.periodSec, new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(), response.totpSessionInfo.sessionInfo, auth);\n    }\n  }]);\n}();\nfunction _isEmptyString(input) {\n  return typeof input === 'undefined' || (input === null || input === void 0 ? void 0 : input.length) === 0;\n}\nvar name = \"@firebase/auth\";\nvar version = \"1.7.4\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AuthInterop = function () {\n  function AuthInterop(auth) {\n    _classCallCheck(this, AuthInterop);\n    this.auth = auth;\n    this.internalListeners = new Map();\n  }\n  return _createClass(AuthInterop, [{\n    key: \"getUid\",\n    value: function getUid() {\n      var _a;\n      this.assertAuthConfigured();\n      return ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.uid) || null;\n    }\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken2 = _asyncToGenerator(function* (forceRefresh) {\n        this.assertAuthConfigured();\n        yield this.auth._initializationPromise;\n        if (!this.auth.currentUser) {\n          return null;\n        }\n        var accessToken = yield this.auth.currentUser.getIdToken(forceRefresh);\n        return {\n          accessToken: accessToken\n        };\n      });\n      function getToken(_x287) {\n        return _getToken2.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }, {\n    key: \"addAuthTokenListener\",\n    value: function addAuthTokenListener(listener) {\n      this.assertAuthConfigured();\n      if (this.internalListeners.has(listener)) {\n        return;\n      }\n      var unsubscribe = this.auth.onIdTokenChanged(function (user) {\n        listener((user === null || user === void 0 ? void 0 : user.stsTokenManager.accessToken) || null);\n      });\n      this.internalListeners.set(listener, unsubscribe);\n      this.updateProactiveRefresh();\n    }\n  }, {\n    key: \"removeAuthTokenListener\",\n    value: function removeAuthTokenListener(listener) {\n      this.assertAuthConfigured();\n      var unsubscribe = this.internalListeners.get(listener);\n      if (!unsubscribe) {\n        return;\n      }\n      this.internalListeners.delete(listener);\n      unsubscribe();\n      this.updateProactiveRefresh();\n    }\n  }, {\n    key: \"assertAuthConfigured\",\n    value: function assertAuthConfigured() {\n      _assert(this.auth._initializationPromise, \"dependent-sdk-initialized-before-auth\");\n    }\n  }, {\n    key: \"updateProactiveRefresh\",\n    value: function updateProactiveRefresh() {\n      if (this.internalListeners.size > 0) {\n        this.auth._startProactiveRefresh();\n      } else {\n        this.auth._stopProactiveRefresh();\n      }\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getVersionForPlatform(clientPlatform) {\n  switch (clientPlatform) {\n    case \"Node\":\n      return 'node';\n    case \"ReactNative\":\n      return 'rn';\n    case \"Worker\":\n      return 'webworker';\n    case \"Cordova\":\n      return 'cordova';\n    case \"WebExtension\":\n      return 'web-extension';\n    default:\n      return undefined;\n  }\n}\nfunction registerAuth(clientPlatform) {\n  _registerComponent(new Component(\"auth\", function (container, _ref39) {\n    var deps = _ref39.options;\n    var app = container.getProvider('app').getImmediate();\n    var heartbeatServiceProvider = container.getProvider('heartbeat');\n    var appCheckServiceProvider = container.getProvider('app-check-internal');\n    var _app$options = app.options,\n      apiKey = _app$options.apiKey,\n      authDomain = _app$options.authDomain;\n    _assert(apiKey && !apiKey.includes(':'), \"invalid-api-key\", {\n      appName: app.name\n    });\n    var config = {\n      apiKey: apiKey,\n      authDomain: authDomain,\n      clientPlatform: clientPlatform,\n      apiHost: \"identitytoolkit.googleapis.com\",\n      tokenApiHost: \"securetoken.googleapis.com\",\n      apiScheme: \"https\",\n      sdkClientVersion: _getClientVersion(clientPlatform)\n    };\n    var authInstance = new AuthImpl(app, heartbeatServiceProvider, appCheckServiceProvider, config);\n    _initializeAuthInstance(authInstance, deps);\n    return authInstance;\n  }, \"PUBLIC\").setInstantiationMode(\"EXPLICIT\").setInstanceCreatedCallback(function (container, _instanceIdentifier, _instance) {\n    var authInternalProvider = container.getProvider(\"auth-internal\");\n    authInternalProvider.initialize();\n  }));\n  _registerComponent(new Component(\"auth-internal\", function (container) {\n    var auth = _castAuth(container.getProvider(\"auth\").getImmediate());\n    return function (auth) {\n      return new AuthInterop(auth);\n    }(auth);\n  }, \"PRIVATE\").setInstantiationMode(\"EXPLICIT\"));\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  registerVersion(name, version, 'esm2017');\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nvar authIdTokenMaxAge = getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\nvar lastPostedIdToken = null;\nvar mintCookieFactory = function mintCookieFactory(url) {\n  return function () {\n    var _ref40 = _asyncToGenerator(function* (user) {\n      var idTokenResult = user && (yield user.getIdTokenResult());\n      var idTokenAge = idTokenResult && (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1000;\n      if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n        return;\n      }\n      var idToken = idTokenResult === null || idTokenResult === void 0 ? void 0 : idTokenResult.token;\n      if (lastPostedIdToken === idToken) {\n        return;\n      }\n      lastPostedIdToken = idToken;\n      yield fetch(url, {\n        method: idToken ? 'POST' : 'DELETE',\n        headers: idToken ? {\n          'Authorization': `Bearer ${idToken}`\n        } : {}\n      });\n    });\n    return function (_x288) {\n      return _ref40.apply(this, arguments);\n    };\n  }();\n};\nfunction getAuth() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  var provider = _getProvider(app, 'auth');\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n  var auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [indexedDBLocalPersistence, browserLocalPersistence, browserSessionPersistence]\n  });\n  var authTokenSyncPath = getExperimentalSetting('authTokenSyncURL');\n  if (authTokenSyncPath && typeof isSecureContext === 'boolean' && isSecureContext) {\n    var authTokenSyncUrl = new URL(authTokenSyncPath, location.origin);\n    if (location.origin === authTokenSyncUrl.origin) {\n      var mintCookie = mintCookieFactory(authTokenSyncUrl.toString());\n      beforeAuthStateChanged(auth, mintCookie, function () {\n        return mintCookie(auth.currentUser);\n      });\n      onIdTokenChanged(auth, function (user) {\n        return mintCookie(user);\n      });\n    }\n  }\n  var authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n  return auth;\n}\nfunction getScriptParentElement() {\n  var _a, _b;\n  return (_b = (_a = document.getElementsByTagName('head')) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : document;\n}\n_setExternalJSProvider({\n  loadJS: function loadJS(url) {\n    return new Promise(function (resolve, reject) {\n      var el = document.createElement('script');\n      el.setAttribute('src', url);\n      el.onload = resolve;\n      el.onerror = function (e) {\n        var error = _createError(\"internal-error\");\n        error.customData = e;\n        reject(error);\n      };\n      el.type = 'text/javascript';\n      el.charset = 'UTF-8';\n      getScriptParentElement().appendChild(el);\n    });\n  },\n  gapiScript: 'https://apis.google.com/js/api.js',\n  recaptchaV2Script: 'https://www.google.com/recaptcha/api.js',\n  recaptchaEnterpriseScript: 'https://www.google.com/recaptcha/enterprise.js?render='\n});\nregisterAuth(\"Browser\");\nexport { TwitterAuthProvider as $, ActionCodeOperation as A, updateCurrentUser as B, signOut as C, revokeAccessToken as D, deleteUser as E, FactorId as F, debugErrorMap as G, prodErrorMap as H, AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as I, initializeAuth as J, connectAuthEmulator as K, AuthCredential as L, EmailAuthCredential as M, OAuthCredential as N, OperationType as O, PhoneAuthProvider as P, PhoneAuthCredential as Q, RecaptchaVerifier as R, SignInMethod as S, TotpMultiFactorGenerator as T, inMemoryPersistence as U, EmailAuthProvider as V, FacebookAuthProvider as W, GoogleAuthProvider as X, GithubAuthProvider as Y, OAuthProvider as Z, SAMLAuthProvider as _, browserSessionPersistence as a, signInAnonymously as a0, signInWithCredential as a1, linkWithCredential as a2, reauthenticateWithCredential as a3, signInWithCustomToken as a4, sendPasswordResetEmail as a5, confirmPasswordReset as a6, applyActionCode as a7, checkActionCode as a8, verifyPasswordResetCode as a9, _isIOS7Or8 as aA, _createError as aB, _assert as aC, AuthEventManager as aD, _getInstance as aE, _persistenceKeyName as aF, _getRedirectResult as aG, _overrideRedirectResult as aH, _clearRedirectOutcomes as aI, _castAuth as aJ, UserImpl as aK, AuthImpl as aL, _getClientVersion as aM, _generateEventId as aN, AuthPopup as aO, FetchProvider as aP, SAMLAuthCredential as aQ, createUserWithEmailAndPassword as aa, signInWithEmailAndPassword as ab, sendSignInLinkToEmail as ac, isSignInWithEmailLink as ad, signInWithEmailLink as ae, fetchSignInMethodsForEmail as af, sendEmailVerification as ag, verifyBeforeUpdateEmail as ah, ActionCodeURL as ai, parseActionCodeURL as aj, updateProfile as ak, updateEmail as al, updatePassword as am, getIdToken as an, _getIdTokenResult2 as ao, unlink as ap, getAdditionalUserInfo as aq, _reload2 as ar, getMultiFactorResolver as as, multiFactor as at, debugAssert as au, _isIOS as av, _isAndroid as aw, _fail as ax, _getRedirectUrl as ay, _getProjectConfig as az, browserLocalPersistence as b, signInWithPopup as c, linkWithPopup as d, reauthenticateWithPopup as e, signInWithRedirect as f, linkWithRedirect as g, reauthenticateWithRedirect as h, indexedDBLocalPersistence as i, getRedirectResult as j, browserPopupRedirectResolver as k, linkWithPhoneNumber as l, PhoneMultiFactorGenerator as m, TotpSecret as n, getAuth as o, ProviderId as p, setPersistence as q, reauthenticateWithPhoneNumber as r, signInWithPhoneNumber as s, initializeRecaptchaConfig as t, updatePhoneNumber as u, validatePassword as v, onIdTokenChanged as w, beforeAuthStateChanged as x, onAuthStateChanged as y, useDeviceLanguage as z };","map":{"version":3,"names":["FactorId","PHONE","TOTP","ProviderId","FACEBOOK","GITHUB","GOOGLE","PASSWORD","TWITTER","SignInMethod","EMAIL_LINK","EMAIL_PASSWORD","OperationType","LINK","REAUTHENTICATE","SIGN_IN","ActionCodeOperation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","_debugErrorMap","_ref","_defineProperty","_prodErrorMap","debugErrorMap","prodErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","ErrorFactory","AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY","ADMIN_ONLY_OPERATION","ARGUMENT_ERROR","APP_NOT_AUTHORIZED","APP_NOT_INSTALLED","CAPTCHA_CHECK_FAILED","CODE_EXPIRED","CORDOVA_NOT_READY","CORS_UNSUPPORTED","CREDENTIAL_ALREADY_IN_USE","CREDENTIAL_MISMATCH","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","DEPENDENT_SDK_INIT_BEFORE_AUTH","DYNAMIC_LINK_NOT_ACTIVATED","EMAIL_CHANGE_NEEDS_VERIFICATION","EMAIL_EXISTS","EMULATOR_CONFIG_FAILED","EXPIRED_OOB_CODE","EXPIRED_POPUP_REQUEST","INTERNAL_ERROR","INVALID_API_KEY","INVALID_APP_CREDENTIAL","INVALID_APP_ID","INVALID_AUTH","INVALID_AUTH_EVENT","INVALID_CERT_HASH","INVALID_CODE","INVALID_CONTINUE_URI","INVALID_CORDOVA_CONFIGURATION","INVALID_CUSTOM_TOKEN","INVALID_DYNAMIC_LINK_DOMAIN","INVALID_EMAIL","INVALID_EMULATOR_SCHEME","INVALID_IDP_RESPONSE","INVALID_LOGIN_CREDENTIALS","INVALID_MESSAGE_PAYLOAD","INVALID_MFA_SESSION","INVALID_OAUTH_CLIENT_ID","INVALID_OAUTH_PROVIDER","INVALID_OOB_CODE","INVALID_ORIGIN","INVALID_PASSWORD","INVALID_PERSISTENCE","INVALID_PHONE_NUMBER","INVALID_PROVIDER_ID","INVALID_RECIPIENT_EMAIL","INVALID_SENDER","INVALID_SESSION_INFO","INVALID_TENANT_ID","MFA_INFO_NOT_FOUND","MFA_REQUIRED","MISSING_ANDROID_PACKAGE_NAME","MISSING_APP_CREDENTIAL","MISSING_AUTH_DOMAIN","MISSING_CODE","MISSING_CONTINUE_URI","MISSING_IFRAME_START","MISSING_IOS_BUNDLE_ID","MISSING_OR_INVALID_NONCE","MISSING_MFA_INFO","MISSING_MFA_SESSION","MISSING_PHONE_NUMBER","MISSING_SESSION_INFO","MODULE_DESTROYED","NEED_CONFIRMATION","NETWORK_REQUEST_FAILED","NULL_USER","NO_AUTH_EVENT","NO_SUCH_PROVIDER","OPERATION_NOT_ALLOWED","OPERATION_NOT_SUPPORTED","POPUP_BLOCKED","POPUP_CLOSED_BY_USER","PROVIDER_ALREADY_LINKED","QUOTA_EXCEEDED","REDIRECT_CANCELLED_BY_USER","REDIRECT_OPERATION_PENDING","REJECTED_CREDENTIAL","SECOND_FACTOR_ALREADY_ENROLLED","SECOND_FACTOR_LIMIT_EXCEEDED","TENANT_ID_MISMATCH","TIMEOUT","TOKEN_EXPIRED","TOO_MANY_ATTEMPTS_TRY_LATER","UNAUTHORIZED_DOMAIN","UNSUPPORTED_FIRST_FACTOR","UNSUPPORTED_PERSISTENCE","UNSUPPORTED_TENANT_OPERATION","UNVERIFIED_EMAIL","USER_CANCELLED","USER_DELETED","USER_DISABLED","USER_MISMATCH","USER_SIGNED_OUT","WEAK_PASSWORD","WEB_STORAGE_UNSUPPORTED","ALREADY_INITIALIZED","RECAPTCHA_NOT_ENABLED","MISSING_RECAPTCHA_TOKEN","INVALID_RECAPTCHA_TOKEN","INVALID_RECAPTCHA_ACTION","MISSING_CLIENT_TYPE","MISSING_RECAPTCHA_VERSION","INVALID_RECAPTCHA_VERSION","INVALID_REQ_TYPE","logClient","Logger","_logWarn","msg","logLevel","LogLevel","WARN","_len","arguments","length","args","Array","_key2","warn","apply","SDK_VERSION","concat","_logError","ERROR","_len2","_key3","error","_fail","authOrCode","_len3","rest","_key4","createErrorInternal","_createError","_len4","_key5","_errorWithCustomMessage","auth","code","message","errorMap","Object","assign","factory","create","appName","name","_serverAppCurrentUserOperationNotSupportedError","_assertInstanceOf","object","instance","constructorInstance","constructor","_len5","_key6","_authOrCode$_errorFac","fullParams","_toConsumableArray","slice","_errorFactory","_assert","assertion","_len6","_key7","debugFail","failure","Error","debugAssert","_getCurrentUrl","self","_a","location","href","_isHttpOrHttps","_getCurrentScheme","protocol","_isOnline","navigator","onLine","isBrowserExtension","_getUserLanguage","navigatorLanguage","languages","language","Delay","shortDelay","longDelay","_classCallCheck","isMobile","isMobileCordova","isReactNative","_createClass","key","value","get","Math","min","_emulatorUrl","config","path","emulator","url","startsWith","FetchProvider","initialize","fetchImpl","headersImpl","responseImpl","_fetch","fetch","toString","globalThis","headers","Headers","response","Response","SERVER_ERROR_MAP","_SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","request","tenantId","_performApiRequest","_x","_x2","_x3","_x4","_performApiRequest2","_asyncToGenerator","method","customErrorMap","undefined","_performFetchWithErrorHandling","body","params","JSON","stringify","query","querystring","apiKey","_getAdditionalHeaders","languageCode","_getFinalTarget","apiHost","referrerPolicy","_x5","_x6","_x7","_performFetchWithErrorHandling2","fetchFn","_canInitEmulator","networkTimeout","NetworkTimeout","Promise","race","promise","clearNetworkTimeout","json","_makeTaggedError","ok","errorMessage","_errorMessage$split","split","_errorMessage$split2","_slicedToArray","serverErrorCode","serverErrorMessage","authError","toLowerCase","replace","e","FirebaseError","String","_performSignInRequest","_x8","_x9","_x10","_x11","_performSignInRequest2","serverResponse","_serverResponse","host","base","apiScheme","_parseEnforcementState","enforcementStateStr","_this","timer","_","reject","setTimeout","clearTimeout","errorParams","email","phoneNumber","customData","_tokenResponse","isV2","grecaptcha","getResponse","isEnterprise","enterprise","RecaptchaConfig","siteKey","recaptchaEnforcementState","recaptchaKey","getProviderEnforcementState","providerStr","provider","enforcementState","isProviderEnabled","getRecaptchaParams","_x12","_getRecaptchaParams","recaptchaSiteKey","getRecaptchaConfig","_x13","_x14","_getRecaptchaConfig","deleteAccount","_x15","_x16","_deleteAccount","deleteLinkedAccounts","_x17","_x18","_deleteLinkedAccounts","getAccountInfo","_x19","_x20","_getAccountInfo","utcTimestampToDateString","utcTimestamp","date","Date","Number","isNaN","getTime","toUTCString","getIdToken","user","forceRefresh","getModularInstance","getIdTokenResult","_x21","_getIdTokenResult","userInternal","token","claims","_parseToken","exp","auth_time","iat","firebase","signInProvider","authTime","secondsStringToMilliseconds","issuedAtTime","expirationTime","signInSecondFactor","seconds","_token$split","_token$split2","algorithm","payload","signature","decoded","base64Decode","parse","_tokenExpiresIn","parsedToken","_logoutIfInvalidated","_x22","_x23","_logoutIfInvalidated2","bypassAuthState","isUserInvalidated","currentUser","signOut","_ref3","ProactiveRefresh","isRunning","timerId","errorBackoff","_start","schedule","_stop","getInterval","wasError","interval","expTime","stsTokenManager","now","max","_this2","iteration","_iteration","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","_copy","metadata","toJSON","_reloadWithoutSaving","_x24","_reloadWithoutSaving2","idToken","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","extractProviderData","providerData","mergeProviderData","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","uid","localId","displayName","photoURL","photoUrl","emailVerified","reload","_x25","_reload","_persistUserIfCurrent","_notifyListenersIfCurrent","original","newData","deduped","filter","o","some","n","providerId","providers","map","__rest","rawId","requestStsToken","_x26","_x27","_requestStsToken","refreshToken","_auth$config","tokenApiHost","accessToken","access_token","expiresIn","expires_in","refresh_token","revokeToken","_x28","_x29","_revokeToken","StsTokenManager","updateFromServerResponse","updateTokensAndExpiration","updateFromIdToken","_getToken","isExpired","refresh","getToken","_x30","clearRefreshToken","_refresh","oldToken","_yield$requestStsToke","_x31","_x32","expiresInSec","_assign","_clone","_performRefresh","fromJSON","manager","assertStringOrUndefined","UserImpl","opt","proactiveRefresh","reloadUserInfo","reloadListener","_getIdToken","_x33","userInfo","newUser","_onReload","callback","_startProactiveRefresh","_stopProactiveRefresh","_updateTokensIfNecessary2","tokensRefreshed","_updateTokensIfNecessary","_x34","_delete2","_isFirebaseServerApp","app","delete","_redirectEventId","_fromJSON","_b","_c","_d","_e","_f","_g","_h","plainObjectTokenManager","isArray","_fromIdTokenResponse2","idTokenResponse","_fromIdTokenResponse","_x35","_x36","_fromGetAccountInfoResponse2","_fromGetAccountInfoResponse","_x37","_x38","_x39","instanceCache","Map","_getInstance","cls","Function","set","InMemoryPersistence","type","storage","_isAvailable2","_isAvailable","_set2","_set","_x40","_x41","_get2","_get","_x42","_remove2","_remove","_x43","_addListener","_key","_listener","_removeListener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","_this$auth","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","bind","setCurrentUser","_getCurrentUser","blob","getCurrentUser","removeCurrentUser","savePersistenceForRedirect","_setPersistence","newPersistence","setPersistence","_x44","_create","persistenceHierarchy","availablePersistences","all","_ref5","_x47","selectedPersistence","userToMigrate","migrationHierarchy","p","_shouldAllowMigration","_ref6","_x48","_x45","_x46","_getBrowserName","userAgent","ua","includes","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","re","matches","match","getUA","test","_isIOS","_isIOS7Or8","_isIOSStandalone","window","standalone","_isIE10","isIE","document","documentMode","_isMobileBrowser","_isIframe","top","_getClientVersion","clientPlatform","frameworks","reportedPlatform","reportedFrameworks","join","AuthMiddlewareQueue","queue","pushCallback","onAbort","_this3","wrappedCallback","resolve","result","push","index","_runMiddleware","nextUser","onAbortStack","beforeStateCallback","reverse","originalMessage","runMiddleware","_x49","_getPasswordPolicy","_x50","_getPasswordPolicy2","MINIMUM_MIN_PASSWORD_LENGTH","PasswordPolicyImpl","responseOptions","customStrengthOptions","minPasswordLength","maxPasswordLength","containsLowercaseCharacter","containsLowercaseLetter","containsUppercaseCharacter","containsUppercaseLetter","containsNumericCharacter","containsNonAlphanumericCharacter","allowedNonAlphanumericCharacters","forceUpgradeOnSignin","schemaVersion","validatePassword","password","status","isValid","passwordPolicy","validatePasswordLengthOptions","validatePasswordCharacterOptions","meetsMinPasswordLength","meetsMaxPasswordLength","updatePasswordCharacterOptionsStatuses","passwordChar","i","charAt","AuthImpl","heartbeatServiceProvider","appCheckServiceProvider","emulatorConfig","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","redirectUser","isProactiveRefreshEnabled","EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION","_isInitialized","_deleted","_initializationPromise","_popupRedirectResolver","_agentRecaptchaConfig","_tenantRecaptchaConfigs","_projectPasswordPolicy","_tenantPasswordPolicies","lastNotifiedUid","settings","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","_initializeWithPersistence","popupRedirectResolver","_this4","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","_onStorageEvent2","assertedPersistence","_currentUser","_updateCurrentUser","_initializeCurrentUserFromIdToken","directlySetCurrentUser","err","console","initializeCurrentUserFromIdToken","_x51","_initializeCurrentUser","_this5","authIdToken","then","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","storedUserEventId","tryRedirectSignIn","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","_x52","_tryRedirectSignIn","redirectResolver","_completeRedirectFn","_setRedirectUser","_x53","_reloadAndSetCurrentUserOrClear","_x54","useDeviceLanguage","_delete3","_delete","_updateCurrentUser2","userExtern","updateCurrentUser","_x55","_updateCurrentUser3","_this6","skipBeforeStateCallbacks","notifyAuthListeners","_x56","_signOut","redirectPersistenceManager","_this7","_validatePassword","_getPasswordPolicyInternal","_updatePasswordPolicy","_x57","_updatePasswordPolicy2","_getPersistence","_updateErrorMap","onAuthStateChanged","nextOrObserver","completed","registerStateListener","beforeAuthStateChanged","onIdTokenChanged","authStateReady","_this8","unsubscribe","_revokeAccessToken","tokenType","revokeAccessToken","_x58","_setRedirectUser2","redirectManager","_x59","_x60","_getOrInitRedirectPersistenceManager","resolver","_redirectPersistence","_x61","_redirectUserForId2","id","_redirectUserForId","_x62","_persistUserIfCurrent2","_this9","_x63","next","currentUid","subscription","_this10","cb","isUnsubscribed","addObserver","_directlySetCurrentUser","_x64","action","_logFramework","framework","sort","_getFrameworks","_getAdditionalHeaders2","options","appId","heartbeatsHeader","getImmediate","optional","getHeartbeatsHeader","appCheckToken","_getAppCheckToken","_getAppCheckToken2","appCheckTokenResult","_castAuth","_this11","observer","createSubscribe","externalJSProvider","loadJS","_loadJS2","recaptchaV2Script","recaptchaEnterpriseScript","gapiScript","_setExternalJSProvider","_loadJS","_recaptchaV2ScriptUrl","_recaptchaEnterpriseScriptUrl","_gapiScriptUrl","_generateCallbackName","prefix","floor","random","RECAPTCHA_ENTERPRISE_VERIFIER_TYPE","FAKE_TOKEN","RecaptchaEnterpriseVerifier","authExtern","_verify","_this12","retrieveSiteKey","_x65","_retrieveSiteKey","_ref12","clientType","version","catch","_x66","_x67","retrieveRecaptchaToken","ready","execute","verify","injectRecaptchaFields","_x68","_x69","_x70","_injectRecaptchaFields","captchaResp","verifier","captchaResponse","newRequest","handleRecaptchaFlow","_x71","_x72","_x73","_x74","_handleRecaptchaFlow","authInstance","actionName","actionMethod","requestWithRecaptcha","_ref43","log","_x289","_initializeRecaptchaConfig","_x75","_initializeRecaptchaConfig2","authInternal","initializeAuth","deps","_getProvider","isInitialized","initialOptions","getOptions","deepEqual","_initializeAuthInstance","hierarchy","connectAuthEmulator","disableWarnings","extractProtocol","_extractHostAndPort","extractHostAndPort","port","portStr","freeze","emitEmulatorWarning","protocolEnd","indexOf","substr","authority","exec","hostAndPort","pop","bracketedIPv6","parsePort","_hostAndPort$split","_hostAndPort$split2","attachBanner","el","createElement","sty","style","innerText","position","width","backgroundColor","border","color","bottom","left","margin","zIndex","textAlign","classList","add","appendChild","info","readyState","addEventListener","AuthCredential","signInMethod","_getIdTokenResponse","_auth","_linkToIdToken","_idToken","_getReauthenticationResolver","resetPassword","_x76","_x77","_resetPassword","updateEmailPassword","_x78","_x79","_updateEmailPassword","linkEmailPassword","_x80","_x81","_linkEmailPassword","applyActionCode$1","applyActionCode","_x82","_x83","_applyActionCode$","signInWithPassword","_x84","_x85","_signInWithPassword","sendOobCode","_x86","_x87","_sendOobCode","sendEmailVerification$1","sendEmailVerification","_x88","_x89","_sendEmailVerification$","sendPasswordResetEmail$1","sendPasswordResetEmail","_x90","_x91","_sendPasswordResetEmail$","sendSignInLinkToEmail$1","sendSignInLinkToEmail","_x92","_x93","_sendSignInLinkToEmail$","verifyAndChangeEmail","_x94","_x95","_verifyAndChangeEmail","signInWithEmailLink$1","signInWithEmailLink","_x96","_x97","_signInWithEmailLink$","signInWithEmailLinkForLinking","_x98","_x99","_signInWithEmailLinkForLinking","EmailAuthCredential","_AuthCredential","_email","_password","_this13","_tenantId","_callSuper","_inherits","_getIdTokenResponse2","returnSecureToken","oobCode","_x100","_linkToIdToken2","_x101","_x102","_fromEmailAndPassword","_fromEmailAndCode","obj","signInWithIdp","_x103","_x104","_signInWithIdp","IDP_REQUEST_URI$1","OAuthCredential","_AuthCredential2","_this14","pendingToken","secret","nonce","buildRequest","autoCreate","requestUri","postBody","_fromParams","cred","oauthToken","oauthTokenSecret","sendPhoneVerificationCode","_x105","_x106","_sendPhoneVerificationCode","signInWithPhoneNumber$1","signInWithPhoneNumber","_x107","_x108","_signInWithPhoneNumber$","linkWithPhoneNumber$1","linkWithPhoneNumber","_x109","_x110","_linkWithPhoneNumber$","temporaryProof","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","verifyPhoneNumberForExisting","_x111","_x112","_verifyPhoneNumberForExisting","apiRequest","operation","PhoneAuthCredential","_AuthCredential3","_this15","_makeVerificationRequest","_this$params","verificationId","verificationCode","sessionInfo","_fromVerification","_fromTokenResponse","_json","parseMode","mode","parseDeepLink","link","querystringDecode","extractQuerystring","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","ActionCodeURL","actionLink","searchParams","continueUrl","parseLink","parseActionCodeURL","EmailAuthProvider","PROVIDER_ID","credential","credentialWithLink","emailLink","actionCodeUrl","EMAIL_PASSWORD_SIGN_IN_METHOD","EMAIL_LINK_SIGN_IN_METHOD","FederatedAuthProvider","defaultLanguageCode","customParameters","setDefaultLanguage","setCustomParameters","customOAuthParameters","getCustomParameters","BaseOAuthProvider","_FederatedAuthProvide","_this16","scopes","addScope","scope","getScopes","OAuthProvider","_BaseOAuthProvider","_credential","rawNonce","credentialFromJSON","credentialFromResult","userCredential","oauthCredentialFromTaggedObject","credentialFromError","_ref13","tokenResponse","oauthIdToken","oauthAccessToken","FacebookAuthProvider","_BaseOAuthProvider2","FACEBOOK_SIGN_IN_METHOD","credentialFromTaggedObject","_ref14","GoogleAuthProvider","_BaseOAuthProvider3","_this17","GOOGLE_SIGN_IN_METHOD","_ref15","GithubAuthProvider","_BaseOAuthProvider4","GITHUB_SIGN_IN_METHOD","_ref16","IDP_REQUEST_URI","SAMLAuthCredential","_AuthCredential4","_this18","SAML_PROVIDER_PREFIX","SAMLAuthProvider","_FederatedAuthProvide2","samlCredentialFromTaggedObject","_ref17","TwitterAuthProvider","_BaseOAuthProvider5","TWITTER_SIGN_IN_METHOD","_ref18","signUp","_x113","_x114","_signUp","UserCredentialImpl","operationType","_fromIdTokenResponse3","providerIdForResponse","userCred","_x115","_x116","_x117","_forOperation2","_forOperation","_x118","_x119","_x120","signInAnonymously","_x121","_signInAnonymously","MultiFactorError","_FirebaseError","_this19","setPrototypeOf","prototype","_fromErrorAndOperation","_processCredentialSavingMfaContextIfNecessary","idTokenProvider","providerDataAsNames","Set","_ref19","pid","unlink","_x122","_x123","_unlink","_assertLinkedStatus","_yield$deleteLinkedAc","deleteProvider","providersLeft","pd","has","_link$1","_link","_x124","_x125","_link$","_x126","_x127","_x128","_assertLinkedStatus2","expected","providerIds","_reauthenticate","_x129","_x130","_reauthenticate2","parsed","sub","_signInWithCredential","_x131","_x132","_signInWithCredential2","signInWithCredential","_x133","_x134","_signInWithCredential3","linkWithCredential","_x135","_x136","_linkWithCredential","reauthenticateWithCredential","_x137","_x138","_reauthenticateWithCredential","signInWithCustomToken$1","signInWithCustomToken","_x139","_x140","_signInWithCustomToken$","_x141","_x142","_signInWithCustomToken","customToken","MultiFactorInfoImpl","factorId","mfaEnrollmentId","enrollmentTime","enrolledAt","_fromServerResponse","enrollment","PhoneMultiFactorInfoImpl","TotpMultiFactorInfoImpl","_MultiFactorInfoImpl","_this20","phoneInfo","_MultiFactorInfoImpl2","_setActionCodeSettingsOnRequest","actionCodeSettings","dynamicLinkDomain","canHandleCodeInApp","handleCodeInApp","iOS","bundleId","iOSBundleId","android","packageName","androidInstallApp","installApp","androidMinimumVersionCode","minimumVersion","androidPackageName","recachePasswordPolicy","_x143","_recachePasswordPolicy","_x144","_x145","_x146","_sendPasswordResetEmail","requestType","confirmPasswordReset","_x147","_x148","_x149","_confirmPasswordReset","newPassword","_ref44","_x290","_x150","_x151","_applyActionCode","checkActionCode","_x152","_x153","_checkActionCode","authModular","newEmail","mfaInfo","multiFactorInfo","data","previousEmail","verifyPasswordResetCode","_x154","_x155","_verifyPasswordResetCode","_yield$checkActionCod","createUserWithEmailAndPassword","_x156","_x157","_x158","_createUserWithEmailAndPassword","signUpResponse","signInWithEmailAndPassword","_ref20","_x159","_x160","_x161","_x162","_sendSignInLinkToEmail","setActionCodeSettings","isSignInWithEmailLink","_x163","_x164","_x165","_signInWithEmailLink","createAuthUri","_x166","_x167","_createAuthUri","fetchSignInMethodsForEmail","_x168","_x169","_fetchSignInMethodsForEmail","continueUri","identifier","_yield$createAuthUri","signinMethods","_x170","_x171","_sendEmailVerification","_yield$sendEmailVerif","verifyBeforeUpdateEmail","_x172","_x173","_x174","_verifyBeforeUpdateEmail","_yield$verifyAndChang","updateProfile$1","updateProfile","_x175","_x176","_updateProfile$","_x177","_x178","_updateProfile","_ref21","profileRequest","passwordProvider","find","_ref45","updateEmail","updateEmailOrPassword","updatePassword","_x179","_x180","_x181","_updateEmailOrPassword","profile","rawUserInfo","isNewUser","kind","filteredProviderId","GenericAdditionalUserInfo","FacebookAdditionalUserInfo","GithubAdditionalUserInfo","GoogleAdditionalUserInfo","TwitterAdditionalUserInfo","screenName","FederatedAdditionalUserInfoWithUsername","_GenericAdditionalUse","username","_this21","_GenericAdditionalUse2","_FederatedAdditionalU","login","_GenericAdditionalUse3","_FederatedAdditionalU2","getAdditionalUserInfo","initializeRecaptchaConfig","_x182","_x183","_validatePassword2","deleteUser","_x184","_deleteUser","MultiFactorSessionImpl","multiFactorSession","_fromIdtoken","_fromMfaPendingCredential","mfaPendingCredential","pendingCredential","MultiFactorResolverImpl","session","hints","signInResolver","_resolveSignIn","assertionExtern","resolveSignIn","_x185","_fromError","_ref22","mfaResponse","_process","_x186","getMultiFactorResolver","errorInternal","startEnrollPhoneMfa","finalizeEnrollPhoneMfa","startEnrollTotpMfa","finalizeEnrollTotpMfa","withdrawMfa","MultiFactorUserImpl","_this22","enrolledFactors","_getSession","getSession","_enroll","finalizeMfaResponse","enroll","_x187","_x188","_unenroll","infoOrUid","_ref23","unenroll","_x189","_fromUser","multiFactorUserCache","WeakMap","multiFactor","userModular","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","setItem","removeItem","getItem","_iframeCannotSyncWebStorage","_POLLING_INTERVAL_MS$1","IE10_LOCAL_STORAGE_SYNC_DELAY","BrowserLocalPersistence","_BrowserPersistenceCl","_this23","localStorage","event","poll","onStorageEvent","listeners","localCache","pollTimer","safariLocalStorageNotSynced","fallbackToPolling","forAllChangedKeys","keys","newValue","oldValue","_this24","_oldValue","notifyListeners","detachListener","stopPolling","storedValue","triggerListeners","listener","from","startPolling","_this25","setInterval","StorageEvent","clearInterval","attachListener","removeEventListener","size","_set3","_superPropGet","_x190","_x191","_get4","_x192","_remove3","_x193","browserLocalPersistence","BrowserSessionPersistence","_BrowserPersistenceCl2","sessionStorage","browserSessionPersistence","_allSettled","promises","_ref24","fulfilled","reason","_x194","Receiver","eventTarget","handlersMap","handleEvent","isListeningto","_handleEvent","messageEvent","_messageEvent$data","eventId","eventType","handlers","ports","postMessage","_ref25","handler","origin","_x196","_x195","_subscribe","eventHandler","_unsubscribe","existingInstance","receivers","receiver","newInstance","_generateEventId","digits","Sender","target","removeMessageHandler","messageChannel","port1","onMessage","close","_send2","_this26","timeout","MessageChannel","completionTimer","start","ackTimer","port2","finally","_send","_x197","_x198","_window","_setWindowLocation","_isWorker","_getActiveServiceWorker","_getActiveServiceWorker2","serviceWorker","registration","active","_getServiceWorkerController","controller","_getWorkerGlobalScope","DB_NAME","DB_VERSION","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","toPromise","_this27","getObjectStore","db","isReadWrite","transaction","objectStore","_deleteDatabase","indexedDB","deleteDatabase","_openDatabase","open","createObjectStore","keyPath","objectStoreNames","contains","_putObject","_x199","_x200","_x201","_putObject2","put","getObject","_x202","_x203","_getObject","_deleteObject","_POLLING_INTERVAL_MS","_TRANSACTION_RETRY_COUNT","IndexedDBLocalPersistence","pendingWrites","sender","serviceWorkerReceiverAvailable","activeServiceWorker","_workerInitializationPromise","initializeServiceWorkerMessaging","_openDb2","_openDb","_withRetries2","op","numAttempts","_withRetries","_x204","_initializeServiceWorkerMessaging","initializeReceiver","initializeSender","_initializeReceiver","_this28","_ref27","_origin","_poll","keyProcessed","_x205","_x206","_ref28","_data","_x207","_x208","_initializeSender","results","_notifyServiceWorker","notifyServiceWorker","_x209","_isAvailable3","_withPendingWrite2","write","_withPendingWrite","_x210","_set4","_this29","_x211","_x212","_get5","_x213","_remove4","_this30","_x214","_poll2","getAllRequest","getAll","keysInResult","_ref31","fbase_key","localKey","_this31","indexedDBLocalPersistence","startSignInPhoneMfa","finalizeSignInPhoneMfa","finalizeSignInTotpMfa","_SOLVE_TIME_MS","_EXPIRATION_TIME_MS","_WIDGET_ID_START","MockReCaptcha","counter","_widgets","render","container","parameters","MockWidget","reset","optWidgetId","_execute","_x215","containerOrId","_this32","deleted","responseToken","clickHandler","getElementById","isVisible","checkIfDeleted","_this33","generateRandomAlphaNumericString","_this33$params","expiredCallback","len","chars","allowedChars","_JSLOAD_CALLBACK","NETWORK_TIMEOUT_DELAY","ReCaptchaLoaderImpl","hostLanguage","librarySeparatelyLoaded","load","_this34","hl","isHostLanguageValid","shouldResolveImmediately","recaptcha","widgetId","onload","clearedOneInstance","MockReCaptchaLoaderImpl","_load","_x216","RECAPTCHA_VERIFIER_TYPE","DEFAULT_PARAMS","theme","RecaptchaVerifier","destroyed","tokenChangeListeners","renderPromise","isInvisible","makeTokenCallback","_recaptchaLoader","validateStartingState","_verify2","_this35","assertNotDestroyed","getAssertedRecaptcha","tokenChange","_this36","makeRenderPromise","_reset","clear","_this37","childNodes","forEach","node","removeChild","sitekey","hasChildNodes","existing","_this38","globalFunc","_makeRenderPromise","init","guaranteedEmpty","_init","domReady","ConfirmationResultImpl","onConfirmation","confirm","authCredential","_x217","_x218","_x219","_signInWithPhoneNumber","appVerifier","_verifyPhoneNumber","_x220","_x221","_x222","_linkWithPhoneNumber","reauthenticateWithPhoneNumber","_x223","_x224","_x225","_reauthenticateWithPhoneNumber","_x226","_x227","_x228","_verifyPhoneNumber2","recaptchaToken","phoneInfoOptions","phoneEnrollmentInfo","phoneSessionInfo","multiFactorHint","multiFactorUid","phoneSignInInfo","phoneResponseInfo","_yield$sendPhoneVerif","updatePhoneNumber","_x229","_x230","_updatePhoneNumber","PhoneAuthProvider","verifyPhoneNumber","phoneOptions","applicationVerifier","_ref33","PHONE_SIGN_IN_METHOD","_withDefaultResolver","resolverOverride","IdpCredential","_AuthCredential5","_this39","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","_x231","_link2","AbstractPopupRedirectOperation","pendingPromise","eventManager","_this40","_ref34","onExecution","registerConsumer","_x232","_x233","_onAuthEvent","urlResponse","getIdpTask","onAuthEvent","_x234","onError","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","signInWithPopup","_x235","_x236","_x237","_signInWithPopup","resolverInternal","PopupOperation","executeNotNull","reauthenticateWithPopup","_x238","_x239","_x240","_reauthenticateWithPopup","linkWithPopup","_x241","_x242","_x243","_linkWithPopup","_AbstractPopupRedirec","_this41","authWindow","pollId","currentPopupAction","cancel","_executeNotNull","_onExecution","_this42","_openPopup","associatedEvent","_originValidation","_isIframeWebStorageSupported","isSupported","pollUserCancellation","_this43","closed","PENDING_REDIRECT_KEY","redirectOutcomeMap","RedirectAction","_AbstractPopupRedirec2","_this44","_execute2","readyOutcome","hasPendingRedirect","_getAndClearPendingRedirectStatus","_onAuthEvent2","_x244","_onExecution2","_x245","_x246","_getAndClearPendingRedirectStatus2","pendingRedirectKey","resolverPersistence","_setPendingRedirectStatus","_x247","_x248","_setPendingRedirectStatus2","_clearRedirectOutcomes","signInWithRedirect","_signInWithRedirect","_x249","_x250","_x251","_signInWithRedirect2","_openRedirect","reauthenticateWithRedirect","_reauthenticateWithRedirect","_x252","_x253","_x254","_reauthenticateWithRedirect2","prepareUserForRedirect","linkWithRedirect","_linkWithRedirect","_x255","_x256","_x257","_linkWithRedirect2","getRedirectResult","_x258","_x259","_getRedirectResult2","_getRedirectResult","_x260","_x261","_getRedirectResult3","resolverExtern","_x262","_prepareUserForRedirect","EVENT_DUPLICATION_CACHE_DURATION_MS","AuthEventManager","cachedEventUids","consumers","queuedRedirectEvent","hasHandledPotentialRedirect","lastProcessedEventTime","authEventConsumer","isEventForConsumer","sendToConsumer","saveEventToCache","onEvent","_this45","hasEventBeenHandled","handled","consumer","isRedirectEvent","isNullRedirectEvent","eventIdMatches","eventUid","v","_ref35","_getProjectConfig","_x263","_getProjectConfig2","IP_ADDRESS_REGEX","HTTP_REGEX","_validateOrigin","_x264","_validateOrigin2","_yield$_getProjectCon","authorizedDomains","domain","matchDomain","currentUrl","_URL","URL","hostname","ceUrl","escapedDomainPattern","RegExp","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","r","L","CP","loadGapi","loadGapiIframe","gapi","iframes","getContext","ontimeout","Iframe","cbName","cachedGApiLoader","_loadGapi","PING_TIMEOUT","IFRAME_PATH","EMULATED_IFRAME_PATH","IFRAME_ATTRIBUTES","height","tabindex","EID_FROM_APIHOST","getIframeUrl","eid","fw","_openIframe","_x265","_openIframe2","context","where","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","iframe","_ref46","restyle","setHideOnLeave","networkError","networkErrorTimer","clearTimerAndResolve","ping","_x291","_x292","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","DEFAULT_WIDTH","DEFAULT_HEIGHT","TARGET_BLANK","FIREFOX_EMPTY_URL","AuthPopup","_open","screen","availHeight","availWidth","scrollbars","optionsString","entries","reduce","accum","_ref36","_ref37","openAsNewWindowIOS","newWin","focus","click","createEvent","initMouseEvent","dispatchEvent","WIDGET_PATH","EMULATOR_WIDGET_PATH","FIREBASE_APP_CHECK_FRAGMENT_ID","encodeURIComponent","_getRedirectUrl","_x266","_x267","_x268","_x269","_x270","_x271","_getRedirectUrl2","authType","redirectUrl","additionalParams","isEmpty","_ref47","_ref48","tid","paramsDict","appCheckTokenFragment","getHandlerBase","_ref38","WEB_STORAGE_SUPPORT_KEY","BrowserPopupRedirectResolver","eventManagers","originValidationPromises","_openPopup2","_x272","_x273","_x274","_x275","_openRedirect2","_x276","_x277","_x278","_x279","_this46","_this$eventManagers$k","initAndGetManager","_initAndGetManager","register","iframeEvent","authEvent","_x280","send","browserPopupRedirectResolver","MultiFactorAssertionImpl","_finalizeEnroll","_finalizeSignIn","PhoneMultiFactorAssertionImpl","_MultiFactorAssertion","_this47","phoneVerificationInfo","_fromCredential","PhoneMultiFactorGenerator","FACTOR_ID","TotpMultiFactorGenerator","assertionForEnrollment","oneTimePassword","TotpMultiFactorAssertionImpl","_fromSecret","assertionForSignIn","enrollmentId","_fromEnrollmentId","_generateSecret","mfaSession","totpEnrollmentInfo","TotpSecret","_fromStartTotpMfaEnrollmentResponse","generateSecret","_x281","_MultiFactorAssertion2","otp","_this48","_finalizeEnroll2","totpVerificationInfo","_makeTotpVerificationInfo","_x282","_x283","_x284","_finalizeSignIn2","_x285","_x286","secretKey","hashingAlgorithm","codeLength","codeIntervalSeconds","enrollmentCompletionDeadline","generateQrCodeUrl","accountName","issuer","useDefaults","_isEmptyString","totpSessionInfo","sharedSecretKey","verificationCodeLength","periodSec","finalizeEnrollmentTime","input","AuthInterop","internalListeners","getUid","assertAuthConfigured","_getToken2","_x287","addAuthTokenListener","updateProactiveRefresh","removeAuthTokenListener","getVersionForPlatform","registerAuth","_registerComponent","Component","_ref39","getProvider","_app$options","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","authInternalProvider","registerVersion","DEFAULT_ID_TOKEN_MAX_AGE","authIdTokenMaxAge","getExperimentalSetting","lastPostedIdToken","mintCookieFactory","_ref40","idTokenResult","idTokenAge","_x288","getAuth","getApp","authTokenSyncPath","isSecureContext","authTokenSyncUrl","mintCookie","authEmulatorHost","getDefaultEmulatorHost","getScriptParentElement","getElementsByTagName","setAttribute","onerror","charset"],"sources":["C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\model\\enum_maps.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\errors.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\log.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\assert.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\location.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\navigator.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\delay.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\emulator.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\fetch_provider.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\errors.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\index.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\recaptcha\\recaptcha.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\recaptcha.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\account_management\\account.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\time.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\id_token_result.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\invalidation.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\proactive_refresh.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\user_metadata.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\reload.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\token.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\token_manager.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\user_impl.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\instantiator.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\persistence\\in_memory.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\persistence\\persistence_user_manager.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\browser.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\version.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\middleware.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\password_policy\\get_password_policy.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\password_policy_impl.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\auth_impl.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\load_js.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\recaptcha\\recaptcha_enterprise_verifier.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\initialize.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\emulator.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\credentials\\auth_credential.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\account_management\\email_and_password.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\email_and_password.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\email_link.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\credentials\\email.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\idp.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\credentials\\oauth.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\sms.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\credentials\\phone.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\action_code_url.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\email.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\federated.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\oauth.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\facebook.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\google.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\github.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\credentials\\saml.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\saml.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\providers\\twitter.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\sign_up.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\user_credential_impl.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\anonymous.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\mfa\\mfa_error.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\providers.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\link_unlink.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\reauthenticate.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\credential.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\custom_token.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\custom_token.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\mfa\\mfa_info.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\action_code_settings.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\email_and_password.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\email_link.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\create_auth_uri.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\email.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\account_management\\profile.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\account_info.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\user\\additional_user_info.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\index.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\mfa\\mfa_session.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\mfa\\mfa_resolver.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\account_management\\mfa.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\mfa\\mfa_user.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\persistence\\index.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\persistence\\browser.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\persistence\\local_storage.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\persistence\\session_storage.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\messagechannel\\promise.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\messagechannel\\receiver.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\event_id.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\messagechannel\\sender.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\auth_window.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\util\\worker.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\persistence\\indexed_db.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\authentication\\mfa.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\recaptcha\\recaptcha_mock.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\recaptcha\\recaptcha_loader.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\recaptcha\\recaptcha_verifier.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\strategies\\phone.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\providers\\phone.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\resolver.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\idp.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\abstract_popup_redirect_operation.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\strategies\\popup.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\strategies\\redirect.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\strategies\\redirect.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\auth_event_manager.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\api\\project_config\\get_project_config.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\validate_origin.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\iframe\\gapi.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\iframe\\iframe.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\util\\popup.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\util\\handler.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\popup_redirect.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\mfa\\mfa_assertion.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\mfa\\assertions\\phone.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\mfa\\assertions\\totp.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\firebase_internal.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\core\\auth\\register.ts","C:\\Users\\richard.5935\\Downloads\\Yzon\\node_modules\\@react-native-firebase\\app\\node_modules\\@firebase\\auth\\src\\platform_browser\\index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An enum of factors that may be used for multifactor authentication.\n *\n * @public\n */\nexport const FactorId = {\n  /** Phone as second factor */\n  PHONE: 'phone',\n  TOTP: 'totp'\n} as const;\n\n/**\n * Enumeration of supported providers.\n *\n * @public\n */\nexport const ProviderId = {\n  /** Facebook provider ID */\n  FACEBOOK: 'facebook.com',\n  /** GitHub provider ID */\n  GITHUB: 'github.com',\n  /** Google provider ID */\n  GOOGLE: 'google.com',\n  /** Password provider */\n  PASSWORD: 'password',\n  /** Phone provider */\n  PHONE: 'phone',\n  /** Twitter provider ID */\n  TWITTER: 'twitter.com'\n} as const;\n\n/**\n * Enumeration of supported sign-in methods.\n *\n * @public\n */\nexport const SignInMethod = {\n  /** Email link sign in method */\n  EMAIL_LINK: 'emailLink',\n  /** Email/password sign in method */\n  EMAIL_PASSWORD: 'password',\n  /** Facebook sign in method */\n  FACEBOOK: 'facebook.com',\n  /** GitHub sign in method */\n  GITHUB: 'github.com',\n  /** Google sign in method */\n  GOOGLE: 'google.com',\n  /** Phone sign in method */\n  PHONE: 'phone',\n  /** Twitter sign in method */\n  TWITTER: 'twitter.com'\n} as const;\n\n/**\n * Enumeration of supported operation types.\n *\n * @public\n */\nexport const OperationType = {\n  /** Operation involving linking an additional provider to an already signed-in user. */\n  LINK: 'link',\n  /** Operation involving using a provider to reauthenticate an already signed-in user. */\n  REAUTHENTICATE: 'reauthenticate',\n  /** Operation involving signing in a user. */\n  SIGN_IN: 'signIn'\n} as const;\n\n/**\n * An enumeration of the possible email action types.\n *\n * @public\n */\nexport const ActionCodeOperation = {\n  /** The email link sign-in action. */\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  /** The password reset action. */\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  /** The email revocation action. */\n  RECOVER_EMAIL: 'RECOVER_EMAIL',\n  /** The revert second factor addition email action. */\n  REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\n  /** The revert second factor addition email action. */\n  VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\n  /** The email verification action. */\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_CREDENTIAL = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_PASSWORD = 'missing-password',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized',\n  RECAPTCHA_NOT_ENABLED = 'recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN = 'missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN = 'invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION = 'invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE = 'missing-client-type',\n  MISSING_RECAPTCHA_VERSION = 'missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION = 'invalid-recaptcha-version',\n  INVALID_REQ_TYPE = 'invalid-req-type',\n  UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION = 'unsupported-password-policy-schema-version',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'password-does-not-meet-requirements'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_CREDENTIAL]:\n      'The supplied auth credential is incorrect, malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_PASSWORD]: 'A non-empty password must be provided',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.',\n    [AuthErrorCode.MISSING_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is invalid when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_ACTION]:\n      'The reCAPTCHA action is invalid when sending request to the backend.',\n    [AuthErrorCode.RECAPTCHA_NOT_ENABLED]:\n      'reCAPTCHA Enterprise integration is not enabled for this project.',\n    [AuthErrorCode.MISSING_CLIENT_TYPE]:\n      'The reCAPTCHA client type is missing when sending request to the backend.',\n    [AuthErrorCode.MISSING_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_REQ_TYPE]: 'Invalid request parameters.',\n    [AuthErrorCode.INVALID_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is invalid when sending request to the backend.',\n    [AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION]:\n      'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.',\n    [AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n      'The password does not meet the requirements.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized',\n  RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n  MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n  INVALID_REQ_TYPE: 'auth/invalid-req-type'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logWarn(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    logClient.warn(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams,\n  prodErrorMap,\n  ErrorMapRetriever\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _errorWithCustomMessage(\n  auth: Auth,\n  code: AuthErrorCode,\n  message: string\n): FirebaseError {\n  const errorMap = {\n    ...(prodErrorMap as ErrorMapRetriever)(),\n    [code]: message\n  };\n  const factory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n    'auth',\n    'Firebase',\n    errorMap\n  );\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\n\nexport function _serverAppCurrentUserOperationNotSupportedError(\n  auth: Auth\n): FirebaseError {\n  return _errorWithCustomMessage(\n    auth,\n    AuthErrorCode.OPERATION_NOT_SUPPORTED,\n    'Operations that alter the current user are not supported in conjunction with FirebaseServerApp'\n  );\n}\n\nexport function _assertInstanceOf(\n  auth: Auth,\n  object: object,\n  instance: unknown\n): void {\n  const constructorInstance = instance as { new (...args: unknown[]): unknown };\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    throw _errorWithCustomMessage(\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR,\n      `Type of ${object.constructor.name} does not match expected instance.` +\n        `Did you pass a reference from a different Auth SDK?`\n    );\n  }\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n      return globalThis.fetch;\n    }\n    if (typeof fetch !== 'undefined') {\n      return fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n      return globalThis.Headers;\n    }\n    if (typeof Headers !== 'undefined') {\n      return Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Response) {\n      return globalThis.Response;\n    }\n    if (typeof Response !== 'undefined') {\n      return Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_LOGIN_CREDENTIALS = 'INVALID_LOGIN_CREDENTIALS',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD',\n  RECAPTCHA_NOT_ENABLED = 'RECAPTCHA_NOT_ENABLED',\n  MISSING_RECAPTCHA_TOKEN = 'MISSING_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_TOKEN = 'INVALID_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_ACTION = 'INVALID_RECAPTCHA_ACTION',\n  MISSING_CLIENT_TYPE = 'MISSING_CLIENT_TYPE',\n  MISSING_RECAPTCHA_VERSION = 'MISSING_RECAPTCHA_VERSION',\n  INVALID_RECAPTCHA_VERSION = 'INVALID_RECAPTCHA_VERSION',\n  INVALID_REQ_TYPE = 'INVALID_REQ_TYPE',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'PASSWORD_DOES_NOT_MEET_REQUIREMENTS'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.MISSING_PASSWORD,\n  // Thrown if Email Enumeration Protection is enabled in the project and the email or password is\n  // invalid.\n  [ServerError.INVALID_LOGIN_CREDENTIALS]: AuthErrorCode.INVALID_CREDENTIAL,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n  [ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n    AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Recaptcha related errors.\n  [ServerError.RECAPTCHA_NOT_ENABLED]: AuthErrorCode.RECAPTCHA_NOT_ENABLED,\n  [ServerError.MISSING_RECAPTCHA_TOKEN]: AuthErrorCode.MISSING_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_TOKEN]: AuthErrorCode.INVALID_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_ACTION]:\n    AuthErrorCode.INVALID_RECAPTCHA_ACTION,\n  [ServerError.MISSING_CLIENT_TYPE]: AuthErrorCode.MISSING_CLIENT_TYPE,\n  [ServerError.MISSING_RECAPTCHA_VERSION]:\n    AuthErrorCode.MISSING_RECAPTCHA_VERSION,\n  [ServerError.INVALID_RECAPTCHA_VERSION]:\n    AuthErrorCode.INVALID_RECAPTCHA_VERSION,\n  [ServerError.INVALID_REQ_TYPE]: AuthErrorCode.INVALID_REQ_TYPE\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client',\n  X_FIREBASE_APP_CHECK = 'X-Firebase-AppCheck'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects',\n  GET_RECAPTCHA_CONFIG = '/v2/recaptchaConfig',\n  GET_PASSWORD_POLICY = '/v2/passwordPolicy',\n  TOKEN = '/v1/token',\n  REVOKE_TOKEN = '/v2/accounts:revokeToken'\n}\n\nexport const enum RecaptchaClientType {\n  WEB = 'CLIENT_TYPE_WEB',\n  ANDROID = 'CLIENT_TYPE_ANDROID',\n  IOS = 'CLIENT_TYPE_IOS'\n}\n\nexport const enum RecaptchaVersion {\n  ENTERPRISE = 'RECAPTCHA_ENTERPRISE'\n}\n\nexport const enum RecaptchaActionName {\n  SIGN_IN_WITH_PASSWORD = 'signInWithPassword',\n  GET_OOB_CODE = 'getOobCode',\n  SIGN_UP_PASSWORD = 'signUpPassword'\n}\n\nexport const enum EnforcementState {\n  ENFORCE = 'ENFORCE',\n  AUDIT = 'AUDIT',\n  OFF = 'OFF',\n  ENFORCEMENT_STATE_UNSPECIFIED = 'ENFORCEMENT_STATE_UNSPECIFIED'\n}\n\n// Providers that have reCAPTCHA Enterprise support.\nexport const enum RecaptchaProvider {\n  EMAIL_PASSWORD_PROVIDER = 'EMAIL_PASSWORD_PROVIDER'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    // Changing this to a different error code will log user out when there is a network error\n    // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\n    // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED, { 'message': String(e) });\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nexport function _parseEnforcementState(\n  enforcementStateStr: string\n): EnforcementState {\n  switch (enforcementStateStr) {\n    case 'ENFORCE':\n      return EnforcementState.ENFORCE;\n    case 'AUDIT':\n      return EnforcementState.AUDIT;\n    case 'OFF':\n      return EnforcementState.OFF;\n    default:\n      return EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED;\n  }\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RecaptchaParameters } from '../../model/public_types';\nimport {\n  GetRecaptchaConfigResponse,\n  RecaptchaEnforcementProviderState\n} from '../../api/authentication/recaptcha';\nimport { EnforcementState, _parseEnforcementState } from '../../api/index';\n\n// reCAPTCHA v2 interface\nexport interface Recaptcha {\n  render: (container: HTMLElement, parameters: RecaptchaParameters) => number;\n  getResponse: (id: number) => string;\n  execute: (id: number) => unknown;\n  reset: (id: number) => unknown;\n}\n\nexport function isV2(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is Recaptcha {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as Recaptcha).getResponse !== undefined\n  );\n}\n\n// reCAPTCHA Enterprise & v3 shared interface\nexport interface GreCAPTCHATopLevel extends GreCAPTCHA {\n  enterprise: GreCAPTCHA;\n}\n\n// reCAPTCHA Enterprise interface\nexport interface GreCAPTCHA {\n  ready: (callback: () => void) => void;\n  execute: (siteKey: string, options: { action: string }) => Promise<string>;\n  render: (\n    container: string | HTMLElement,\n    parameters: GreCAPTCHARenderOption\n  ) => string;\n}\n\nexport interface GreCAPTCHARenderOption {\n  sitekey: string;\n  size: 'invisible';\n}\n\nexport function isEnterprise(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is GreCAPTCHATopLevel {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as GreCAPTCHATopLevel).enterprise !== undefined\n  );\n}\n\n// TODO(chuanr): Replace this with the AuthWindow after resolving the dependency issue in Node.js env.\ndeclare global {\n  interface Window {\n    grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  }\n}\n\nexport class RecaptchaConfig {\n  /**\n   * The reCAPTCHA site key.\n   */\n  siteKey: string = '';\n\n  /**\n   * The list of providers and their enablement status for reCAPTCHA Enterprise.\n   */\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[] = [];\n\n  constructor(response: GetRecaptchaConfigResponse) {\n    if (response.recaptchaKey === undefined) {\n      throw new Error('recaptchaKey undefined');\n    }\n    // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\n    this.siteKey = response.recaptchaKey.split('/')[3];\n    this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n  }\n\n  /**\n   * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\n   *\n   * @param providerStr - The provider whose enforcement state is to be returned.\n   * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\n   */\n  getProviderEnforcementState(providerStr: string): EnforcementState | null {\n    if (\n      !this.recaptchaEnforcementState ||\n      this.recaptchaEnforcementState.length === 0\n    ) {\n      return null;\n    }\n\n    for (const recaptchaEnforcementState of this.recaptchaEnforcementState) {\n      if (\n        recaptchaEnforcementState.provider &&\n        recaptchaEnforcementState.provider === providerStr\n      ) {\n        return _parseEnforcementState(\n          recaptchaEnforcementState.enforcementState\n        );\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\n   *\n   * @param providerStr - The provider whose enablement state is to be returned.\n   * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\n   */\n  isProviderEnabled(providerStr: string): boolean {\n    return (\n      this.getProviderEnforcementState(providerStr) ===\n        EnforcementState.ENFORCE ||\n      this.getProviderEnforcementState(providerStr) === EnforcementState.AUDIT\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _performApiRequest,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\ninterface GetRecaptchaParamResponse {\n  recaptchaSiteKey?: string;\n}\n\nexport async function getRecaptchaParams(auth: Auth): Promise<string> {\n  return (\n    (\n      await _performApiRequest<void, GetRecaptchaParamResponse>(\n        auth,\n        HttpMethod.GET,\n        Endpoint.GET_RECAPTCHA_PARAM\n      )\n    ).recaptchaSiteKey || ''\n  );\n}\n\n// The following functions are for reCAPTCHA enterprise integration.\ninterface GetRecaptchaConfigRequest {\n  tenantId?: string;\n  clientType?: RecaptchaClientType;\n  version?: RecaptchaVersion;\n}\n\nexport interface RecaptchaEnforcementProviderState {\n  provider: string;\n  enforcementState: string;\n}\n\nexport interface GetRecaptchaConfigResponse {\n  recaptchaKey: string;\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[];\n}\n\nexport async function getRecaptchaConfig(\n  auth: Auth,\n  request: GetRecaptchaConfigRequest\n): Promise<GetRecaptchaConfigResponse> {\n  return _performApiRequest<\n    GetRecaptchaConfigRequest,\n    GetRecaptchaConfigResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_RECAPTCHA_CONFIG,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nexport function extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  _performApiRequest,\n  _addTidIfNecessary,\n  HttpMethod,\n  HttpHeader,\n  Endpoint\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum TokenType {\n  REFRESH_TOKEN = 'REFRESH_TOKEN',\n  ACCESS_TOKEN = 'ACCESS_TOKEN'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport interface RevokeTokenRequest {\n  providerId: string;\n  tokenType: TokenType;\n  token: string;\n  idToken: string;\n  tenantId?: string;\n}\n\nexport interface RevokeTokenResponse {}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n\nexport async function revokeToken(\n  auth: Auth,\n  request: RevokeTokenRequest\n): Promise<RevokeTokenResponse> {\n  return _performApiRequest<RevokeTokenRequest, RevokeTokenResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.REVOKE_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  updateFromIdToken(idToken: string): void {\n    _assert(idToken.length !== 0, AuthErrorCode.INTERNAL_ERROR);\n    const expiresIn = _tokenExpiresIn(idToken);\n    this.updateTokensAndExpiration(idToken, null, expiresIn);\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    _assert(this.refreshToken, auth, AuthErrorCode.TOKEN_EXPIRED);\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string | null,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, UserInfo } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\nimport {\n  APIUserInfo,\n  GetAccountInfoResponse,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { extractProviderData, _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    const newUser = new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n    newUser.metadata._copy(this.metadata);\n    return newUser;\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    if (_isFirebaseServerApp(this.auth.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this.auth)\n      );\n    }\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromGetAccountInfoResponse(\n    auth: AuthInternal,\n    response: GetAccountInfoResponse,\n    idToken: string\n  ): Promise<UserInternal> {\n    const coreAccount = response.users[0];\n    _assert(coreAccount.localId !== undefined, AuthErrorCode.INTERNAL_ERROR);\n\n    const providerData: UserInfo[] =\n      coreAccount.providerUserInfo !== undefined\n        ? extractProviderData(coreAccount.providerUserInfo)\n        : [];\n\n    const isAnonymous =\n      !(coreAccount.email && coreAccount.passwordHash) && !providerData?.length;\n\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromIdToken(idToken);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: coreAccount.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // update the user with data from the GetAccountInfo response.\n    const updates: Partial<UserInternal> = {\n      uid: coreAccount.localId,\n      displayName: coreAccount.displayName || null,\n      photoURL: coreAccount.photoUrl || null,\n      email: coreAccount.email || null,\n      emailVerified: coreAccount.emailVerified || false,\n      phoneNumber: coreAccount.phoneNumber || null,\n      tenantId: coreAccount.tenantId || null,\n      providerData,\n      metadata: new UserMetadata(\n        coreAccount.createdAt,\n        coreAccount.lastLoginAt\n      ),\n      isAnonymous:\n        !(coreAccount.email && coreAccount.passwordHash) &&\n        !providerData?.length\n    };\n\n    Object.assign(user, updates);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker',\n  WEB_EXTENSION = 'WebExtension'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\n/**\n * Request object for fetching the password policy.\n */\nexport interface GetPasswordPolicyRequest {\n  tenantId?: string;\n}\n\n/**\n * Response object for fetching the password policy.\n */\nexport interface GetPasswordPolicyResponse {\n  customStrengthOptions: {\n    minPasswordLength?: number;\n    maxPasswordLength?: number;\n    containsLowercaseCharacter?: boolean;\n    containsUppercaseCharacter?: boolean;\n    containsNumericCharacter?: boolean;\n    containsNonAlphanumericCharacter?: boolean;\n  };\n  allowedNonAlphanumericCharacters?: string[];\n  enforcementState: string;\n  forceUpgradeOnSignin?: boolean;\n  schemaVersion: number;\n}\n\n/**\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\n *\n * @param auth Auth object.\n * @param request Password policy request.\n * @returns Password policy response.\n */\nexport async function _getPasswordPolicy(\n  auth: Auth,\n  request: GetPasswordPolicyRequest = {}\n): Promise<GetPasswordPolicyResponse> {\n  return _performApiRequest<\n    GetPasswordPolicyRequest,\n    GetPasswordPolicyResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PASSWORD_POLICY,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetPasswordPolicyResponse } from '../../api/password_policy/get_password_policy';\nimport {\n  PasswordPolicyCustomStrengthOptions,\n  PasswordPolicyInternal,\n  PasswordValidationStatusInternal\n} from '../../model/password_policy';\nimport { PasswordValidationStatus } from '../../model/public_types';\n\n// Minimum min password length enforced by the backend, even if no minimum length is set.\nconst MINIMUM_MIN_PASSWORD_LENGTH = 6;\n\n/**\n * Stores password policy requirements and provides password validation against the policy.\n *\n * @internal\n */\nexport class PasswordPolicyImpl implements PasswordPolicyInternal {\n  readonly customStrengthOptions: PasswordPolicyCustomStrengthOptions;\n  readonly allowedNonAlphanumericCharacters: string;\n  readonly enforcementState: string;\n  readonly forceUpgradeOnSignin: boolean;\n  readonly schemaVersion: number;\n\n  constructor(response: GetPasswordPolicyResponse) {\n    // Only include custom strength options defined in the response.\n    const responseOptions = response.customStrengthOptions;\n    this.customStrengthOptions = {};\n    // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\n    this.customStrengthOptions.minPasswordLength =\n      responseOptions.minPasswordLength ?? MINIMUM_MIN_PASSWORD_LENGTH;\n    if (responseOptions.maxPasswordLength) {\n      this.customStrengthOptions.maxPasswordLength =\n        responseOptions.maxPasswordLength;\n    }\n    if (responseOptions.containsLowercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsLowercaseLetter =\n        responseOptions.containsLowercaseCharacter;\n    }\n    if (responseOptions.containsUppercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsUppercaseLetter =\n        responseOptions.containsUppercaseCharacter;\n    }\n    if (responseOptions.containsNumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNumericCharacter =\n        responseOptions.containsNumericCharacter;\n    }\n    if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNonAlphanumericCharacter =\n        responseOptions.containsNonAlphanumericCharacter;\n    }\n\n    this.enforcementState = response.enforcementState;\n    if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n      this.enforcementState = 'OFF';\n    }\n\n    // Use an empty string if no non-alphanumeric characters are specified in the response.\n    this.allowedNonAlphanumericCharacters =\n      response.allowedNonAlphanumericCharacters?.join('') ?? '';\n\n    this.forceUpgradeOnSignin = response.forceUpgradeOnSignin ?? false;\n    this.schemaVersion = response.schemaVersion;\n  }\n\n  validatePassword(password: string): PasswordValidationStatus {\n    const status: PasswordValidationStatusInternal = {\n      isValid: true,\n      passwordPolicy: this\n    };\n\n    // Check the password length and character options.\n    this.validatePasswordLengthOptions(password, status);\n    this.validatePasswordCharacterOptions(password, status);\n\n    // Combine the status into single isValid property.\n    status.isValid &&= status.meetsMinPasswordLength ?? true;\n    status.isValid &&= status.meetsMaxPasswordLength ?? true;\n    status.isValid &&= status.containsLowercaseLetter ?? true;\n    status.isValid &&= status.containsUppercaseLetter ?? true;\n    status.isValid &&= status.containsNumericCharacter ?? true;\n    status.isValid &&= status.containsNonAlphanumericCharacter ?? true;\n\n    return status;\n  }\n\n  /**\n   * Validates that the password meets the length options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordLengthOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    const minPasswordLength = this.customStrengthOptions.minPasswordLength;\n    const maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n    if (minPasswordLength) {\n      status.meetsMinPasswordLength = password.length >= minPasswordLength;\n    }\n    if (maxPasswordLength) {\n      status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n    }\n  }\n\n  /**\n   * Validates that the password meets the character options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordCharacterOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    // Assign statuses for requirements even if the password is an empty string.\n    this.updatePasswordCharacterOptionsStatuses(\n      status,\n      /* containsLowercaseCharacter= */ false,\n      /* containsUppercaseCharacter= */ false,\n      /* containsNumericCharacter= */ false,\n      /* containsNonAlphanumericCharacter= */ false\n    );\n\n    let passwordChar;\n    for (let i = 0; i < password.length; i++) {\n      passwordChar = password.charAt(i);\n      this.updatePasswordCharacterOptionsStatuses(\n        status,\n        /* containsLowercaseCharacter= */ passwordChar >= 'a' &&\n          passwordChar <= 'z',\n        /* containsUppercaseCharacter= */ passwordChar >= 'A' &&\n          passwordChar <= 'Z',\n        /* containsNumericCharacter= */ passwordChar >= '0' &&\n          passwordChar <= '9',\n        /* containsNonAlphanumericCharacter= */ this.allowedNonAlphanumericCharacters.includes(\n          passwordChar\n        )\n      );\n    }\n  }\n\n  /**\n   * Updates the running validation status with the statuses for the character options.\n   * Expected to be called each time a character is processed to update each option status\n   * based on the current character.\n   *\n   * @param status Validation status.\n   * @param containsLowercaseCharacter Whether the character is a lowercase letter.\n   * @param containsUppercaseCharacter Whether the character is an uppercase letter.\n   * @param containsNumericCharacter Whether the character is a numeric character.\n   * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\n   */\n  private updatePasswordCharacterOptionsStatuses(\n    status: PasswordValidationStatusInternal,\n    containsLowercaseCharacter: boolean,\n    containsUppercaseCharacter: boolean,\n    containsNumericCharacter: boolean,\n    containsNonAlphanumericCharacter: boolean\n  ): void {\n    if (this.customStrengthOptions.containsLowercaseLetter) {\n      status.containsLowercaseLetter ||= containsLowercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsUppercaseLetter) {\n      status.containsUppercaseLetter ||= containsUppercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsNumericCharacter) {\n      status.containsNumericCharacter ||= containsNumericCharacter;\n    }\n    if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n      status.containsNonAlphanumericCharacter ||=\n        containsNonAlphanumericCharacter;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _isFirebaseServerApp,\n  _FirebaseService,\n  FirebaseApp\n} from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport {\n  RevokeTokenRequest,\n  TokenType,\n  revokeToken\n} from '../../api/authentication/token';\nimport { AuthMiddlewareQueue } from './middleware';\nimport { RecaptchaConfig } from '../../platform_browser/recaptcha/recaptcha';\nimport { _logWarn } from '../util/log';\nimport { _getPasswordPolicy } from '../../api/password_policy/get_password_policy';\nimport { PasswordPolicyInternal } from '../../model/password_policy';\nimport { PasswordPolicyImpl } from './password_policy_impl';\nimport { getAccountInfo } from '../../api/account_management/account';\nimport { UserImpl } from '../user/user_impl';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n  private readonly EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION: number = 1;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  _agentRecaptchaConfig: RecaptchaConfig | null = null;\n  _tenantRecaptchaConfigs: Record<string, RecaptchaConfig> = {};\n  _projectPasswordPolicy: PasswordPolicyInternal | null = null;\n  _tenantPasswordPolicies: Record<string, PasswordPolicyInternal> = {};\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    private readonly appCheckServiceProvider: Provider<AppCheckInternalComponentName>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUserFromIdToken(\n    idToken: string\n  ): Promise<void> {\n    try {\n      const response = await getAccountInfo(this, { idToken });\n      const user = await UserImpl._fromGetAccountInfoResponse(\n        this,\n        response,\n        idToken\n      );\n      await this.directlySetCurrentUser(user);\n    } catch (err) {\n      console.warn(\n        'FirebaseServerApp could not login user with provided authIdToken: ',\n        err\n      );\n      await this.directlySetCurrentUser(null);\n    }\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      const idToken = this.app.settings.authIdToken;\n      if (idToken) {\n        // Start the auth operation in the next tick to allow a moment for the customer's app to\n        // attach an emulator, if desired.\n        return new Promise<void>(resolve => {\n          setTimeout(() =>\n            this.initializeCurrentUserFromIdToken(idToken).then(\n              resolve,\n              resolve\n            )\n          );\n        });\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getRecaptchaConfig(): RecaptchaConfig | null {\n    if (this.tenantId == null) {\n      return this._agentRecaptchaConfig;\n    } else {\n      return this._tenantRecaptchaConfigs[this.tenantId];\n    }\n  }\n\n  async validatePassword(password: string): Promise<PasswordValidationStatus> {\n    if (!this._getPasswordPolicyInternal()) {\n      await this._updatePasswordPolicy();\n    }\n\n    // Password policy will be defined after fetching.\n    const passwordPolicy: PasswordPolicyInternal =\n      this._getPasswordPolicyInternal()!;\n\n    // Check that the policy schema version is supported by the SDK.\n    // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\n    if (\n      passwordPolicy.schemaVersion !==\n      this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION\n    ) {\n      return Promise.reject(\n        this._errorFactory.create(\n          AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION,\n          {}\n        )\n      );\n    }\n\n    return passwordPolicy.validatePassword(password);\n  }\n\n  _getPasswordPolicyInternal(): PasswordPolicyInternal | null {\n    if (this.tenantId === null) {\n      return this._projectPasswordPolicy;\n    } else {\n      return this._tenantPasswordPolicies[this.tenantId];\n    }\n  }\n\n  async _updatePasswordPolicy(): Promise<void> {\n    const response = await _getPasswordPolicy(this);\n\n    const passwordPolicy: PasswordPolicyInternal = new PasswordPolicyImpl(\n      response\n    );\n\n    if (this.tenantId === null) {\n      this._projectPasswordPolicy = passwordPolicy;\n    } else {\n      this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n    }\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  authStateReady(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.currentUser) {\n        resolve();\n      } else {\n        const unsubscribe = this.onAuthStateChanged(() => {\n          unsubscribe();\n          resolve();\n        }, reject);\n      }\n    });\n  }\n\n  /**\n   * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n   */\n  async revokeAccessToken(token: string): Promise<void> {\n    if (this.currentUser) {\n      const idToken = await this.currentUser.getIdToken();\n      // Generalize this to accept other providers once supported.\n      const request: RevokeTokenRequest = {\n        providerId: 'apple.com',\n        tokenType: TokenType.ACCESS_TOKEN,\n        token,\n        idToken\n      };\n      if (this.tenantId != null) {\n        request.tenantId = this.tenantId;\n      }\n      await revokeToken(this, request);\n    }\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    let isUnsubscribed = false;\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => {\n      if (isUnsubscribed) {\n        return;\n      }\n      cb(this.currentUser);\n    });\n\n    if (typeof nextOrObserver === 'function') {\n      const unsubscribe = subscription.addObserver(\n        nextOrObserver,\n        error,\n        completed\n      );\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    } else {\n      const unsubscribe = subscription.addObserver(nextOrObserver);\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n\n    // If the App Check service exists, add the App Check token in the headers\n    const appCheckToken = await this._getAppCheckToken();\n    if (appCheckToken) {\n      headers[HttpHeader.X_FIREBASE_APP_CHECK] = appCheckToken;\n    }\n\n    return headers;\n  }\n\n  async _getAppCheckToken(): Promise<string | undefined> {\n    const appCheckTokenResult = await this.appCheckServiceProvider\n      .getImmediate({ optional: true })\n      ?.getToken();\n    if (appCheckTokenResult?.error) {\n      // Context: appCheck.getToken() will never throw even if an error happened.\n      // In the error case, a dummy token will be returned along with an error field describing\n      // the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      _logWarn(\n        `Error while retrieving App Check token: ${appCheckTokenResult.error}`\n      );\n    }\n    return appCheckTokenResult?.token;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface ExternalJSProvider {\n  loadJS(url: string): Promise<Event>;\n  recaptchaV2Script: string;\n  recaptchaEnterpriseScript: string;\n  gapiScript: string;\n}\n\nlet externalJSProvider: ExternalJSProvider = {\n  async loadJS() {\n    throw new Error('Unable to load external scripts');\n  },\n\n  recaptchaV2Script: '',\n  recaptchaEnterpriseScript: '',\n  gapiScript: ''\n};\n\nexport function _setExternalJSProvider(p: ExternalJSProvider): void {\n  externalJSProvider = p;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  return externalJSProvider.loadJS(url);\n}\n\nexport function _recaptchaV2ScriptUrl(): string {\n  return externalJSProvider.recaptchaV2Script;\n}\n\nexport function _recaptchaEnterpriseScriptUrl(): string {\n  return externalJSProvider.recaptchaEnterpriseScript;\n}\n\nexport function _gapiScriptUrl(): string {\n  return externalJSProvider.gapiScript;\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n","/* eslint-disable @typescript-eslint/no-require-imports */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEnterprise, RecaptchaConfig } from './recaptcha';\nimport { getRecaptchaConfig } from '../../api/authentication/recaptcha';\nimport {\n  RecaptchaClientType,\n  RecaptchaVersion,\n  RecaptchaActionName,\n  RecaptchaProvider\n} from '../../api';\n\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport * as jsHelpers from '../load_js';\nimport { AuthErrorCode } from '../../core/errors';\n\nexport const RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\nexport const FAKE_TOKEN = 'NO_RECAPTCHA';\n\nexport class RecaptchaEnterpriseVerifier {\n  /**\n   * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\n   */\n  readonly type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n\n  private readonly auth: AuthInternal;\n\n  /**\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   */\n  constructor(authExtern: Auth) {\n    this.auth = _castAuth(authExtern);\n  }\n\n  /**\n   * Executes the verification process.\n   *\n   * @returns A Promise for a token that can be used to assert the validity of a request.\n   */\n  async verify(\n    action: string = 'verify',\n    forceRefresh = false\n  ): Promise<string> {\n    async function retrieveSiteKey(auth: AuthInternal): Promise<string> {\n      if (!forceRefresh) {\n        if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n          return auth._agentRecaptchaConfig.siteKey;\n        }\n        if (\n          auth.tenantId != null &&\n          auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined\n        ) {\n          return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\n        }\n      }\n\n      return new Promise<string>(async (resolve, reject) => {\n        getRecaptchaConfig(auth, {\n          clientType: RecaptchaClientType.WEB,\n          version: RecaptchaVersion.ENTERPRISE\n        })\n          .then(response => {\n            if (response.recaptchaKey === undefined) {\n              reject(new Error('recaptcha Enterprise site key undefined'));\n            } else {\n              const config = new RecaptchaConfig(response);\n              if (auth.tenantId == null) {\n                auth._agentRecaptchaConfig = config;\n              } else {\n                auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n              }\n              return resolve(config.siteKey);\n            }\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n    }\n\n    function retrieveRecaptchaToken(\n      siteKey: string,\n      resolve: (value: string | PromiseLike<string>) => void,\n      reject: (reason?: unknown) => void\n    ): void {\n      const grecaptcha = window.grecaptcha;\n      if (isEnterprise(grecaptcha)) {\n        grecaptcha.enterprise.ready(() => {\n          grecaptcha.enterprise\n            .execute(siteKey, { action })\n            .then(token => {\n              resolve(token);\n            })\n            .catch(() => {\n              resolve(FAKE_TOKEN);\n            });\n        });\n      } else {\n        reject(Error('No reCAPTCHA enterprise script loaded.'));\n      }\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      retrieveSiteKey(this.auth)\n        .then(siteKey => {\n          if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n            retrieveRecaptchaToken(siteKey, resolve, reject);\n          } else {\n            if (typeof window === 'undefined') {\n              reject(\n                new Error('RecaptchaVerifier is only supported in browser')\n              );\n              return;\n            }\n            let url = jsHelpers._recaptchaEnterpriseScriptUrl();\n            if (url.length !== 0) {\n              url += siteKey;\n            }\n            jsHelpers\n              ._loadJS(url)\n              .then(() => {\n                retrieveRecaptchaToken(siteKey, resolve, reject);\n              })\n              .catch(error => {\n                reject(error);\n              });\n          }\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n}\n\nexport async function injectRecaptchaFields<T>(\n  auth: AuthInternal,\n  request: T,\n  action: RecaptchaActionName,\n  captchaResp = false\n): Promise<T> {\n  const verifier = new RecaptchaEnterpriseVerifier(auth);\n  let captchaResponse;\n  try {\n    captchaResponse = await verifier.verify(action);\n  } catch (error) {\n    captchaResponse = await verifier.verify(action, true);\n  }\n  const newRequest = { ...request };\n  if (!captchaResp) {\n    Object.assign(newRequest, { captchaResponse });\n  } else {\n    Object.assign(newRequest, { 'captchaResp': captchaResponse });\n  }\n  Object.assign(newRequest, { 'clientType': RecaptchaClientType.WEB });\n  Object.assign(newRequest, {\n    'recaptchaVersion': RecaptchaVersion.ENTERPRISE\n  });\n  return newRequest;\n}\n\ntype ActionMethod<TRequest, TResponse> = (\n  auth: Auth,\n  request: TRequest\n) => Promise<TResponse>;\n\nexport async function handleRecaptchaFlow<TRequest, TResponse>(\n  authInstance: AuthInternal,\n  request: TRequest,\n  actionName: RecaptchaActionName,\n  actionMethod: ActionMethod<TRequest, TResponse>\n): Promise<TResponse> {\n  if (\n    authInstance\n      ._getRecaptchaConfig()\n      ?.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)\n  ) {\n    const requestWithRecaptcha = await injectRecaptchaFields(\n      authInstance,\n      request,\n      actionName,\n      actionName === RecaptchaActionName.GET_OOB_CODE\n    );\n    return actionMethod(authInstance, requestWithRecaptcha);\n  } else {\n    return actionMethod(authInstance, request).catch(async error => {\n      if (error.code === `auth/${AuthErrorCode.MISSING_RECAPTCHA_TOKEN}`) {\n        console.log(\n          `${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`\n        );\n        const requestWithRecaptcha = await injectRecaptchaFields(\n          authInstance,\n          request,\n          actionName,\n          actionName === RecaptchaActionName.GET_OOB_CODE\n        );\n        return actionMethod(authInstance, requestWithRecaptcha);\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n}\n\nexport async function _initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n\n  const response = await getRecaptchaConfig(authInternal, {\n    clientType: RecaptchaClientType.WEB,\n    version: RecaptchaVersion.ENTERPRISE\n  });\n\n  const config = new RecaptchaConfig(response);\n  if (authInternal.tenantId == null) {\n    authInternal._agentRecaptchaConfig = config;\n  } else {\n    authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n  }\n\n  if (config.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)) {\n    const verifier = new RecaptchaEnterpriseVerifier(authInternal);\n    void verifier.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\nimport { SignUpRequest, SignUpResponse } from '../authentication/sign_up';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\n// Used for linking an email/password account to an existing idToken. Uses the same request/response\n// format as updateEmailPassword.\nexport async function linkEmailPassword(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performApiRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    request\n  );\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { linkEmailPassword } from '../../api/account_management/email_and_password';\nimport {\n  signInWithPassword,\n  SignInWithPasswordRequest\n} from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { SignUpRequest } from '../../api/authentication/sign_up';\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignInWithPasswordRequest = {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_IN_WITH_PASSWORD,\n          signInWithPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignUpRequest = {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_UP_PASSWORD,\n          linkEmailPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, pendingToken }: Record<string, string> =\n      obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredential } from '../../model/public_types';\nimport { UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { SAMLAuthCredential } from '../credentials/saml';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { FederatedAuthProvider } from './federated';\n\nconst SAML_PROVIDER_PREFIX = 'saml.';\n\n/**\n * An {@link AuthProvider} for SAML.\n *\n * @public\n */\nexport class SAMLAuthProvider extends FederatedAuthProvider {\n  /**\n   * Constructor. The providerId must start with \"saml.\"\n   * @param providerId - SAML provider ID.\n   */\n  constructor(providerId: string) {\n    _assert(\n      providerId.startsWith(SAML_PROVIDER_PREFIX),\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    super(providerId);\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential} after a\n   * successful SAML flow completes.\n   *\n   * @remarks\n   *\n   * For example, to get an {@link AuthCredential}, you could write the\n   * following code:\n   *\n   * ```js\n   * const userCredential = await signInWithPopup(auth, samlProvider);\n   * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\n   * ```\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  /**\n   * Creates an {@link AuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: string | object): AuthCredential {\n    const credential = SAMLAuthCredential.fromJSON(json);\n    _assert(credential, AuthErrorCode.ARGUMENT_ERROR);\n    return credential;\n  }\n\n  private static samlCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): SAMLAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { pendingToken, providerId } = tokenResponse as SignInWithIdpResponse;\n\n    if (!pendingToken || !providerId) {\n      return null;\n    }\n\n    try {\n      return SAMLAuthCredential._create(providerId, pendingToken);\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  idToken?: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  await authInternal._initializationPromise;\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ProviderAssociatedObject {\n  providerId?: string;\n}\n\n/**\n * Takes a set of UserInfo provider data and converts it to a set of names\n */\nexport function providerDataAsNames<T extends ProviderAssociatedObject>(\n  providerData: T[]\n): Set<string> {\n  return new Set(\n    providerData\n      .map(({ providerId }) => providerId)\n      .filter(pid => !!pid) as string[]\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\n * or a `TOKEN_EXPIRED` error.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithCustomTokenRequest {\n  token: string;\n  returnSecureToken: boolean;\n  tenantId?: string;\n}\n\nexport interface SignInWithCustomTokenResponse extends IdTokenResponse {}\n\nexport async function signInWithCustomToken(\n  auth: Auth,\n  request: SignInWithCustomTokenRequest\n): Promise<SignInWithCustomTokenResponse> {\n  return _performSignInRequest<\n    SignInWithCustomTokenRequest,\n    SignInWithCustomTokenResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\n\nimport { signInWithCustomToken as getIdTokenResponse } from '../../api/authentication/custom_token';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n/**\n * Asynchronously signs in using a custom token.\n *\n * @remarks\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\n * be generated by an auth backend using the\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\n *\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param customToken - The custom token to sign in with.\n *\n * @public\n */\nexport async function signInWithCustomToken(\n  auth: Auth,\n  customToken: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const response: IdTokenResponse = await getIdTokenResponse(authInternal, {\n    token: customToken,\n    returnSecureToken: true\n  });\n  const cred = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(cred.user);\n  return cred;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactorId,\n  MultiFactorInfo,\n  PhoneMultiFactorInfo,\n  TotpMultiFactorInfo\n} from '../model/public_types';\nimport {\n  PhoneMfaEnrollment,\n  MfaEnrollment,\n  TotpMfaEnrollment\n} from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _fail } from '../core/util/assert';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorInfoImpl implements MultiFactorInfo {\n  readonly uid: string;\n  readonly displayName?: string | null;\n  readonly enrollmentTime: string;\n\n  protected constructor(readonly factorId: FactorId, response: MfaEnrollment) {\n    this.uid = response.mfaEnrollmentId;\n    this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n    this.displayName = response.displayName;\n  }\n\n  static _fromServerResponse(\n    auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): MultiFactorInfoImpl {\n    if ('phoneInfo' in enrollment) {\n      return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n    } else if ('totpInfo' in enrollment) {\n      return TotpMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n    }\n    return _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n}\n\nexport class PhoneMultiFactorInfoImpl\n  extends MultiFactorInfoImpl\n  implements PhoneMultiFactorInfo\n{\n  readonly phoneNumber: string;\n\n  private constructor(response: PhoneMfaEnrollment) {\n    super(FactorId.PHONE, response);\n    this.phoneNumber = response.phoneInfo;\n  }\n\n  static _fromServerResponse(\n    _auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): PhoneMultiFactorInfoImpl {\n    return new PhoneMultiFactorInfoImpl(enrollment as PhoneMfaEnrollment);\n  }\n}\nexport class TotpMultiFactorInfoImpl\n  extends MultiFactorInfoImpl\n  implements TotpMultiFactorInfo\n{\n  private constructor(response: TotpMfaEnrollment) {\n    super(FactorId.TOTP, response);\n  }\n\n  static _fromServerResponse(\n    _auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): TotpMultiFactorInfoImpl {\n    return new TotpMultiFactorInfoImpl(enrollment as TotpMfaEnrollment);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeSettings, Auth } from '../../model/public_types';\n\nimport { GetOobCodeRequest } from '../../api/authentication/email_and_password';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\nexport function _setActionCodeSettingsOnRequest(\n  auth: Auth,\n  request: GetOobCodeRequest,\n  actionCodeSettings: ActionCodeSettings\n): void {\n  _assert(\n    actionCodeSettings.url?.length > 0,\n    auth,\n    AuthErrorCode.INVALID_CONTINUE_URI\n  );\n  _assert(\n    typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\n      actionCodeSettings.dynamicLinkDomain.length > 0,\n    auth,\n    AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN\n  );\n\n  request.continueUrl = actionCodeSettings.url;\n  request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n  request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n\n  if (actionCodeSettings.iOS) {\n    _assert(\n      actionCodeSettings.iOS.bundleId.length > 0,\n      auth,\n      AuthErrorCode.MISSING_IOS_BUNDLE_ID\n    );\n    request.iOSBundleId = actionCodeSettings.iOS.bundleId;\n  }\n\n  if (actionCodeSettings.android) {\n    _assert(\n      actionCodeSettings.android.packageName.length > 0,\n      auth,\n      AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME\n    );\n    request.androidInstallApp = actionCodeSettings.android.installApp;\n    request.androidMinimumVersionCode =\n      actionCodeSettings.android.minimumVersion;\n    request.androidPackageName = actionCodeSettings.android.packageName;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeInfo,\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as account from '../../api/account_management/email_and_password';\nimport * as authentication from '../../api/authentication/email_and_password';\nimport { signUp, SignUpRequest } from '../../api/authentication/sign_up';\nimport { MultiFactorInfoImpl } from '../../mfa/mfa_info';\nimport { EmailAuthProvider } from '../providers/email';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { _castAuth } from '../auth/auth_impl';\nimport { AuthErrorCode } from '../errors';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Updates the password policy cached in the {@link Auth} instance if a policy is already\n * cached for the project or tenant.\n *\n * @remarks\n * We only fetch the password policy if the password did not meet policy requirements and\n * there is an existing policy cached. A developer must call validatePassword at least\n * once for the cache to be automatically updated.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @private\n */\nasync function recachePasswordPolicy(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n  if (authInternal._getPasswordPolicyInternal()) {\n    await authInternal._updatePasswordPolicy();\n  }\n}\n\n/**\n * Sends a password reset email to the given email address. This method does not throw an error when\n * there's no user account with the given email address and\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings?: ActionCodeSettings\n): Promise<void> {\n  const authInternal = _castAuth(auth);\n  const request: authentication.PasswordResetRequest = {\n    requestType: ActionCodeOperation.PASSWORD_RESET,\n    email,\n    clientType: RecaptchaClientType.WEB\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n  }\n  await handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.GET_OOB_CODE,\n    authentication.sendPasswordResetEmail\n  );\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport async function confirmPasswordReset(\n  auth: Auth,\n  oobCode: string,\n  newPassword: string\n): Promise<void> {\n  await account\n    .resetPassword(getModularInstance(auth), {\n      oobCode,\n      newPassword\n    })\n    .catch(async error => {\n      if (\n        error.code ===\n        `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n      ) {\n        void recachePasswordPolicy(auth);\n      }\n\n      throw error;\n    });\n  // Do not return the email.\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function applyActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<void> {\n  await account.applyActionCode(getModularInstance(auth), { oobCode });\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function checkActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<ActionCodeInfo> {\n  const authModular = getModularInstance(auth);\n  const response = await account.resetPassword(authModular, { oobCode });\n\n  // Email could be empty only if the request type is EMAIL_SIGNIN or\n  // VERIFY_AND_CHANGE_EMAIL.\n  // New email should not be empty if the request type is\n  // VERIFY_AND_CHANGE_EMAIL.\n  // Multi-factor info could not be empty if the request type is\n  // REVERT_SECOND_FACTOR_ADDITION.\n  const operation = response.requestType;\n  _assert(operation, authModular, AuthErrorCode.INTERNAL_ERROR);\n  switch (operation) {\n    case ActionCodeOperation.EMAIL_SIGNIN:\n      break;\n    case ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL:\n      _assert(response.newEmail, authModular, AuthErrorCode.INTERNAL_ERROR);\n      break;\n    case ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION:\n      _assert(response.mfaInfo, authModular, AuthErrorCode.INTERNAL_ERROR);\n    // fall through\n    default:\n      _assert(response.email, authModular, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  // The multi-factor info for revert second factor addition\n  let multiFactorInfo: MultiFactorInfoImpl | null = null;\n  if (response.mfaInfo) {\n    multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(\n      _castAuth(authModular),\n      response.mfaInfo\n    );\n  }\n\n  return {\n    data: {\n      email:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.newEmail\n          : response.email) || null,\n      previousEmail:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.email\n          : response.newEmail) || null,\n      multiFactorInfo\n    },\n    operation\n  };\n}\n\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The {@link Auth} instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nexport async function verifyPasswordResetCode(\n  auth: Auth,\n  code: string\n): Promise<string> {\n  const { data } = await checkActionCode(getModularInstance(auth), code);\n  // Email should always be present since a code was sent to it\n  return data.email!;\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nexport async function createUserWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const request: SignUpRequest = {\n    returnSecureToken: true,\n    email,\n    password,\n    clientType: RecaptchaClientType.WEB\n  };\n  const signUpResponse: Promise<IdTokenResponse> = handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.SIGN_UP_PASSWORD,\n    signUp\n  );\n  const response = await signUpResponse.catch(error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match. When\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled, this method fails with \"auth/invalid-credential\" in case of an invalid\n * email/password.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nexport function signInWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  return signInWithCredential(\n    getModularInstance(auth),\n    EmailAuthProvider.credential(email, password)\n  ).catch(async error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as api from '../../api/authentication/email_and_password';\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthProvider } from '../providers/email';\nimport { _getCurrentUrl } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { getModularInstance } from '@firebase/util';\nimport { _castAuth } from '../auth/auth_impl';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\n/**\n * Sends a sign-in email link to the user with the specified email.\n *\n * @remarks\n * The sign-in operation has to always be completed in the app unlike other out of band email\n * actions (password reset and email verifications). This is because, at the end of the flow,\n * the user is expected to be signed in and their Auth state persisted within the app.\n *\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\n * address and the email link supplied in the email sent to the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param authInternal - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings: ActionCodeSettings\n): Promise<void> {\n  const authInternal = _castAuth(auth);\n  const request: api.EmailSignInRequest = {\n    requestType: ActionCodeOperation.EMAIL_SIGNIN,\n    email,\n    clientType: RecaptchaClientType.WEB\n  };\n  function setActionCodeSettings(\n    request: api.EmailSignInRequest,\n    actionCodeSettings: ActionCodeSettings\n  ): void {\n    _assert(\n      actionCodeSettings.handleCodeInApp,\n      authInternal,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    if (actionCodeSettings) {\n      _setActionCodeSettingsOnRequest(\n        authInternal,\n        request,\n        actionCodeSettings\n      );\n    }\n  }\n  setActionCodeSettings(request, actionCodeSettings);\n  await handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.GET_OOB_CODE,\n    api.sendSignInLinkToEmail\n  );\n}\n\n/**\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\n *\n * @param auth - The {@link Auth} instance.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport function isSignInWithEmailLink(auth: Auth, emailLink: string): boolean {\n  const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n  return actionCodeUrl?.operation === ActionCodeOperation.EMAIL_SIGNIN;\n}\n\n/**\n * Asynchronously signs in using an email and sign-in email link.\n *\n * @remarks\n * If no link is passed, the link is inferred from the current URL.\n *\n * Fails with an error if the email address is invalid or OTP in email link expires.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport async function signInWithEmailLink(\n  auth: Auth,\n  email: string,\n  emailLink?: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authModular = getModularInstance(auth);\n  const credential = EmailAuthProvider.credentialWithLink(\n    email,\n    emailLink || _getCurrentUrl()\n  );\n  // Check if the tenant ID in the email link matches the tenant ID on Auth\n  // instance.\n  _assert(\n    credential._tenantId === (authModular.tenantId || null),\n    authModular,\n    AuthErrorCode.TENANT_ID_MISMATCH\n  );\n  return signInWithCredential(authModular, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface CreateAuthUriRequest {\n  identifier: string;\n  continueUri: string;\n  tenantId?: string;\n}\n\nexport interface CreateAuthUriResponse {\n  signinMethods: string[];\n}\n\nexport async function createAuthUri(\n  auth: Auth,\n  request: CreateAuthUriRequest\n): Promise<CreateAuthUriResponse> {\n  return _performApiRequest<CreateAuthUriRequest, CreateAuthUriResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.CREATE_AUTH_URI,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  User\n} from '../../model/public_types';\n\nimport {\n  createAuthUri,\n  CreateAuthUriRequest\n} from '../../api/authentication/create_auth_uri';\nimport * as api from '../../api/authentication/email_and_password';\nimport { UserInternal } from '../../model/user';\nimport { _getCurrentUrl, _isHttpOrHttps } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Gets the list of possible sign in methods for the given email address. This method returns an\n * empty list when\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled, irrespective of the number of authentication methods available for the given email.\n *\n * @remarks\n * This is useful to differentiate methods of sign-in for the same provider, eg.\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\n * {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n *\n * Deprecated. Migrating off of this method is recommended as a security best-practice.\n * Learn more in the Identity Platform documentation for\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}.\n * @public\n */\nexport async function fetchSignInMethodsForEmail(\n  auth: Auth,\n  email: string\n): Promise<string[]> {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n  const request: CreateAuthUriRequest = {\n    identifier: email,\n    continueUri\n  };\n\n  const { signinMethods } = await createAuthUri(\n    getModularInstance(auth),\n    request\n  );\n\n  return signinMethods || [];\n}\n\n/**\n * Sends a verification email to a user.\n *\n * @remarks\n * The verification process is completed by calling {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendEmailVerification(user, actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendEmailVerification(\n  user: User,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_EMAIL,\n    idToken\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.sendEmailVerification(userInternal.auth, request);\n\n  if (email !== user.email) {\n    await user.reload();\n  }\n}\n\n/**\n * Sends a verification email to a new email address.\n *\n * @remarks\n * The user's email will be updated to the new one after being verified.\n *\n * If you have a custom email action handler, you can complete the verification process by calling\n * {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param newEmail - The new email address to be verified before update.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function verifyBeforeUpdateEmail(\n  user: User,\n  newEmail: string,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyAndChangeEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n    idToken,\n    newEmail\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.verifyAndChangeEmail(userInternal.auth, request);\n\n  if (email !== user.email) {\n    // If the local copy of the email on user is outdated, reload the\n    // user.\n    await user.reload();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface UpdateProfileRequest {\n  idToken: string;\n  displayName?: string | null;\n  photoUrl?: string | null;\n  returnSecureToken: boolean;\n}\n\nexport interface UpdateProfileResponse extends IdTokenResponse {\n  displayName?: string | null;\n  photoUrl?: string | null;\n}\n\nexport async function updateProfile(\n  auth: Auth,\n  request: UpdateProfileRequest\n): Promise<UpdateProfileResponse> {\n  return _performApiRequest<UpdateProfileRequest, UpdateProfileResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport {\n  updateEmailPassword as apiUpdateEmailPassword,\n  UpdateEmailPasswordRequest\n} from '../../api/account_management/email_and_password';\nimport { updateProfile as apiUpdateProfile } from '../../api/account_management/profile';\nimport { UserInternal } from '../../model/user';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\n/**\n * Updates a user's profile data.\n *\n * @param user - The user.\n * @param profile - The profile's `displayName` and `photoURL` to update.\n *\n * @public\n */\nexport async function updateProfile(\n  user: User,\n  {\n    displayName,\n    photoURL: photoUrl\n  }: { displayName?: string | null; photoURL?: string | null }\n): Promise<void> {\n  if (displayName === undefined && photoUrl === undefined) {\n    return;\n  }\n\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await userInternal.getIdToken();\n  const profileRequest = {\n    idToken,\n    displayName,\n    photoUrl,\n    returnSecureToken: true\n  };\n  const response = await _logoutIfInvalidated(\n    userInternal,\n    apiUpdateProfile(userInternal.auth, profileRequest)\n  );\n\n  userInternal.displayName = response.displayName || null;\n  userInternal.photoURL = response.photoUrl || null;\n\n  // Update the password provider as well\n  const passwordProvider = userInternal.providerData.find(\n    ({ providerId }) => providerId === ProviderId.PASSWORD\n  );\n  if (passwordProvider) {\n    passwordProvider.displayName = userInternal.displayName;\n    passwordProvider.photoURL = userInternal.photoURL;\n  }\n\n  await userInternal._updateTokensIfNecessary(response);\n}\n\n/**\n * Updates the user's email address.\n *\n * @remarks\n * An email will be sent to the original email address (if it was set) that allows to revoke the\n * email address change, in order to protect them from account hijacking.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newEmail - The new email address.\n *\n * Throws \"auth/operation-not-allowed\" error when\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled.\n * Deprecated - Use {@link verifyBeforeUpdateEmail} instead.\n *\n * @public\n */\nexport function updateEmail(user: User, newEmail: string): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  return updateEmailOrPassword(userInternal, newEmail, null);\n}\n\n/**\n * Updates the user's password.\n *\n * @remarks\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport function updatePassword(user: User, newPassword: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    null,\n    newPassword\n  );\n}\n\nasync function updateEmailOrPassword(\n  user: UserInternal,\n  email: string | null,\n  password: string | null\n): Promise<void> {\n  const { auth } = user;\n  const idToken = await user.getIdToken();\n  const request: UpdateEmailPasswordRequest = {\n    idToken,\n    returnSecureToken: true\n  };\n\n  if (email) {\n    request.email = email;\n  }\n\n  if (password) {\n    request.password = password;\n  }\n\n  const response = await _logoutIfInvalidated(\n    user,\n    apiUpdateEmailPassword(auth, request)\n  );\n  await user._updateTokensIfNecessary(response, /* reload */ true);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AdditionalUserInfo, UserCredential } from '../../model/public_types';\nimport { IdTokenResponse, IdTokenResponseKind } from '../../model/id_token';\nimport { _parseToken } from './id_token_result';\nimport { UserCredentialInternal } from '../../model/user';\nimport { ProviderId } from '../../model/enums';\n\n/**\n * Parse the `AdditionalUserInfo` from the ID token response.\n *\n */\nexport function _fromIdTokenResponse(\n  idTokenResponse?: IdTokenResponse\n): AdditionalUserInfo | null {\n  if (!idTokenResponse) {\n    return null;\n  }\n  const { providerId } = idTokenResponse;\n  const profile = idTokenResponse.rawUserInfo\n    ? JSON.parse(idTokenResponse.rawUserInfo)\n    : {};\n  const isNewUser =\n    idTokenResponse.isNewUser ||\n    idTokenResponse.kind === IdTokenResponseKind.SignupNewUser;\n  if (!providerId && idTokenResponse?.idToken) {\n    const signInProvider = _parseToken(idTokenResponse.idToken)?.firebase?.[\n      'sign_in_provider'\n    ];\n    if (signInProvider) {\n      const filteredProviderId =\n        signInProvider !== ProviderId.ANONYMOUS &&\n        signInProvider !== ProviderId.CUSTOM\n          ? (signInProvider as ProviderId)\n          : null;\n      // Uses generic class in accordance with the legacy SDK.\n      return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n    }\n  }\n  if (!providerId) {\n    return null;\n  }\n  switch (providerId) {\n    case ProviderId.FACEBOOK:\n      return new FacebookAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GITHUB:\n      return new GithubAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GOOGLE:\n      return new GoogleAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.TWITTER:\n      return new TwitterAdditionalUserInfo(\n        isNewUser,\n        profile,\n        idTokenResponse.screenName || null\n      );\n    case ProviderId.CUSTOM:\n    case ProviderId.ANONYMOUS:\n      return new GenericAdditionalUserInfo(isNewUser, null);\n    default:\n      return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n  }\n}\n\nclass GenericAdditionalUserInfo implements AdditionalUserInfo {\n  constructor(\n    readonly isNewUser: boolean,\n    readonly providerId: ProviderId | string | null,\n    readonly profile: Record<string, unknown> = {}\n  ) {}\n}\n\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\n  constructor(\n    isNewUser: boolean,\n    providerId: ProviderId,\n    profile: Record<string, unknown>,\n    readonly username: string | null\n  ) {\n    super(isNewUser, providerId, profile);\n  }\n}\n\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.FACEBOOK, profile);\n  }\n}\n\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(\n      isNewUser,\n      ProviderId.GITHUB,\n      profile,\n      typeof profile?.login === 'string' ? profile?.login : null\n    );\n  }\n}\n\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.GOOGLE, profile);\n  }\n}\n\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(\n    isNewUser: boolean,\n    profile: Record<string, unknown>,\n    screenName: string | null\n  ) {\n    super(isNewUser, ProviderId.TWITTER, profile, screenName);\n  }\n}\n\n/**\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\n *\n * @param userCredential - The user credential.\n *\n * @public\n */\nexport function getAdditionalUserInfo(\n  userCredential: UserCredential\n): AdditionalUserInfo | null {\n  const { user, _tokenResponse } = userCredential as UserCredentialInternal;\n  if (user.isAnonymous && !_tokenResponse) {\n    // Handle the special case where signInAnonymously() gets called twice.\n    // No network call is made so there's nothing to actually fill this in\n    return {\n      providerId: null,\n      isNewUser: false,\n      profile: null\n    };\n  }\n\n  return _fromIdTokenResponse(_tokenResponse);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../model/public_types';\nimport { _initializeRecaptchaConfig } from '../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { _castAuth } from '../core/auth/auth_impl';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n\n/**\n * Loads the reCAPTCHA configuration into the `Auth` instance.\n *\n * @remarks\n * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\n * verification flow should be triggered for each auth provider, into the\n * current Auth session.\n *\n * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\n * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\n * verification, the SDK will transparently load the reCAPTCHA config and restart the\n * auth flows.\n *\n * Thus, by calling this optional method, you will reduce the latency of future auth flows.\n * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * initializeRecaptchaConfig(auth);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  return _initializeRecaptchaConfig(auth);\n}\n\n/**\n * Validates the password against the password policy configured for the project or tenant.\n *\n * @remarks\n * If no tenant ID is set on the `Auth` instance, then this method will use the password\n * policy configured for the project. Otherwise, this method will use the policy configured\n * for the tenant. If a password policy has not been configured, then the default policy\n * configured for all projects will be used.\n *\n * If an auth flow fails because a submitted password does not meet the password policy\n * requirements and this method has previously been called, then this method will use the\n * most recent policy available when called again.\n *\n * @example\n * ```javascript\n * validatePassword(auth, 'some-password');\n * ```\n *\n * @param auth The {@link Auth} instance.\n * @param password The password to validate.\n *\n * @public\n */\nexport async function validatePassword(\n  auth: Auth,\n  password: string\n): Promise<PasswordValidationStatus> {\n  const authInternal = _castAuth(auth);\n  return authInternal.validatePassword(password);\n}\n\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @remarks\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\n/**\n * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n *\n * @param auth - The {@link Auth} instance.\n * @param token - The Apple OAuth access token.\n *\n * @public\n */\nexport function revokeAccessToken(auth: Auth, token: string): Promise<void> {\n  const authInternal = _castAuth(auth);\n  return authInternal.revokeAccessToken(token);\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserInternal } from '../model/user';\nimport { MultiFactorSession } from '../model/public_types';\n\nexport const enum MultiFactorSessionType {\n  ENROLL = 'enroll',\n  SIGN_IN = 'signin'\n}\n\ninterface SerializedMultiFactorSession {\n  multiFactorSession: {\n    idToken?: string;\n    pendingCredential?: string;\n  };\n}\n\nexport class MultiFactorSessionImpl implements MultiFactorSession {\n  private constructor(\n    readonly type: MultiFactorSessionType,\n    readonly credential: string,\n    readonly user?: UserInternal\n  ) {}\n\n  static _fromIdtoken(\n    idToken: string,\n    user?: UserInternal\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.ENROLL,\n      idToken,\n      user\n    );\n  }\n\n  static _fromMfaPendingCredential(\n    mfaPendingCredential: string\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.SIGN_IN,\n      mfaPendingCredential\n    );\n  }\n\n  toJSON(): SerializedMultiFactorSession {\n    const key =\n      this.type === MultiFactorSessionType.ENROLL\n        ? 'idToken'\n        : 'pendingCredential';\n    return {\n      multiFactorSession: {\n        [key]: this.credential\n      }\n    };\n  }\n\n  static fromJSON(\n    obj: Partial<SerializedMultiFactorSession>\n  ): MultiFactorSessionImpl | null {\n    if (obj?.multiFactorSession) {\n      if (obj.multiFactorSession?.pendingCredential) {\n        return MultiFactorSessionImpl._fromMfaPendingCredential(\n          obj.multiFactorSession.pendingCredential\n        );\n      } else if (obj.multiFactorSession?.idToken) {\n        return MultiFactorSessionImpl._fromIdtoken(\n          obj.multiFactorSession.idToken\n        );\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  MultiFactorResolver,\n  UserCredential,\n  MultiFactorError\n} from '../model/public_types';\n\nimport { _castAuth } from '../core/auth/auth_impl';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserCredentialImpl } from '../core/user/user_credential_impl';\nimport { _assert, _fail } from '../core/util/assert';\nimport { UserCredentialInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorError as MultiFactorErrorInternal } from './mfa_error';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../model/enums';\n\nexport class MultiFactorResolverImpl implements MultiFactorResolver {\n  private constructor(\n    readonly session: MultiFactorSessionImpl,\n    readonly hints: MultiFactorInfoImpl[],\n    private readonly signInResolver: (\n      assertion: MultiFactorAssertionImpl\n    ) => Promise<UserCredentialInternal>\n  ) {}\n\n  /** @internal */\n  static _fromError(\n    authExtern: Auth,\n    error: MultiFactorErrorInternal\n  ): MultiFactorResolverImpl {\n    const auth = _castAuth(authExtern);\n    const serverResponse = error.customData._serverResponse;\n    const hints = (serverResponse.mfaInfo || []).map(enrollment =>\n      MultiFactorInfoImpl._fromServerResponse(auth, enrollment)\n    );\n\n    _assert(\n      serverResponse.mfaPendingCredential,\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const session = MultiFactorSessionImpl._fromMfaPendingCredential(\n      serverResponse.mfaPendingCredential\n    );\n\n    return new MultiFactorResolverImpl(\n      session,\n      hints,\n      async (\n        assertion: MultiFactorAssertionImpl\n      ): Promise<UserCredentialInternal> => {\n        const mfaResponse = await assertion._process(auth, session);\n        // Clear out the unneeded fields from the old login response\n        delete serverResponse.mfaInfo;\n        delete serverResponse.mfaPendingCredential;\n\n        // Use in the new token & refresh token in the old response\n        const idTokenResponse = {\n          ...serverResponse,\n          idToken: mfaResponse.idToken,\n          refreshToken: mfaResponse.refreshToken\n        };\n\n        // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\n        switch (error.operationType) {\n          case OperationType.SIGN_IN:\n            const userCredential =\n              await UserCredentialImpl._fromIdTokenResponse(\n                auth,\n                error.operationType,\n                idTokenResponse\n              );\n            await auth._updateCurrentUser(userCredential.user);\n            return userCredential;\n          case OperationType.REAUTHENTICATE:\n            _assert(error.user, auth, AuthErrorCode.INTERNAL_ERROR);\n            return UserCredentialImpl._forOperation(\n              error.user,\n              error.operationType,\n              idTokenResponse\n            );\n          default:\n            _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n        }\n      }\n    );\n  }\n\n  async resolveSignIn(\n    assertionExtern: MultiFactorAssertionImpl\n  ): Promise<UserCredential> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    return this.signInResolver(assertion);\n  }\n}\n\n/**\n * Provides a {@link MultiFactorResolver} suitable for completion of a\n * multi-factor flow.\n *\n * @param auth - The {@link Auth} instance.\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\n * reauthentication operation.\n *\n * @public\n */\nexport function getMultiFactorResolver(\n  auth: Auth,\n  error: MultiFactorError\n): MultiFactorResolver {\n  const authModular = getModularInstance(auth);\n  const errorInternal = error as MultiFactorErrorInternal;\n  _assert(\n    error.customData.operationType,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n  _assert(\n    errorInternal.customData._serverResponse?.mfaPendingCredential,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API.\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification.\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * An MFA provided by TOTP (Time-based One Time Password).\n */\nexport interface TotpMfaEnrollment extends BaseMfaEnrollment {}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment and TotpMfaEnrollment are supported.\n */\nexport type MfaEnrollment = PhoneMfaEnrollment | TotpMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: StartPhoneMfaEnrollmentRequest\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: FinalizePhoneMfaEnrollmentRequest\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface StartTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpEnrollmentInfo: {};\n  tenantId?: string;\n}\n\nexport interface StartTotpMfaEnrollmentResponse {\n  totpSessionInfo: {\n    sharedSecretKey: string;\n    verificationCodeLength: number;\n    hashingAlgorithm: string;\n    periodSec: number;\n    sessionInfo: string;\n    finalizeEnrollmentTime: number;\n  };\n}\n\nexport function startEnrollTotpMfa(\n  auth: AuthInternal,\n  request: StartTotpMfaEnrollmentRequest\n): Promise<StartTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartTotpMfaEnrollmentRequest,\n    StartTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface TotpVerificationInfo {\n  sessionInfo: string;\n  verificationCode: string;\n}\nexport interface FinalizeTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpVerificationInfo: TotpVerificationInfo;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizeTotpMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollTotpMfa(\n  auth: AuthInternal,\n  request: FinalizeTotpMfaEnrollmentRequest\n): Promise<FinalizeTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaEnrollmentRequest,\n    FinalizeTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId?: string;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: WithdrawMfaRequest\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    try {\n      const idTokenResponse = await _logoutIfInvalidated(\n        this.user,\n        withdrawMfa(this.user.auth, {\n          idToken,\n          mfaEnrollmentId\n        })\n      );\n      // Remove the second factor from the user's list.\n      this.enrolledFactors = this.enrolledFactors.filter(\n        ({ uid }) => uid !== mfaEnrollmentId\n      );\n      // Depending on whether the backend decided to revoke the user's session,\n      // the tokenResponse may be empty. If the tokens were not updated (and they\n      // are now invalid), reloading the user will discover this and invalidate\n      // the user's state accordingly.\n      await this.user._updateTokensIfNecessary(idTokenResponse);\n      await this.user.reload();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(() => window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined =\n      this.handlersMap[eventType];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix = '', digits = 10): string {\n  let random = '';\n  for (let i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha, GreCAPTCHATopLevel } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return window as unknown as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? (self as unknown as ServiceWorker) : null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    if (result.length !== 0) {\n      for (const { fbase_key: key, value } of result) {\n        keysInResult.add(key);\n        if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n          this.notifyListeners(key, value as PersistenceValue);\n          keys.push(key);\n        }\n      }\n    }\n\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\n/**\n * @internal\n */\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: StartPhoneMfaSignInRequest\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId?: string;\n}\n\n// TOTP MFA Sign in only has a finalize phase. Phone MFA has a start phase to initiate sending an\n// SMS and a finalize phase to complete sign in. With TOTP, the user already has the OTP in the\n// TOTP/Authenticator app.\nexport interface FinalizeTotpMfaSignInRequest {\n  mfaPendingCredential: string;\n  totpVerificationInfo: { verificationCode: string };\n  tenantId?: string;\n  mfaEnrollmentId: string;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport interface FinalizeTotpMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: FinalizePhoneMfaSignInRequest\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport function finalizeSignInTotpMfa(\n  auth: Auth,\n  request: FinalizeTotpMfaSignInRequest\n): Promise<FinalizeTotpMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaSignInRequest,\n    FinalizeTotpMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport { RecaptchaParameters } from '../../model/public_types';\nimport {\n  Recaptcha,\n  GreCAPTCHATopLevel,\n  GreCAPTCHARenderOption,\n  GreCAPTCHA\n} from './recaptcha';\n\nexport const _SOLVE_TIME_MS = 500;\nexport const _EXPIRATION_TIME_MS = 60_000;\nexport const _WIDGET_ID_START = 1_000_000_000_000;\n\nexport interface Widget {\n  getResponse: () => string | null;\n  delete: () => void;\n  execute: () => void;\n}\n\nexport class MockReCaptcha implements Recaptcha {\n  private counter = _WIDGET_ID_START;\n  _widgets = new Map<number, Widget>();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  render(\n    container: string | HTMLElement,\n    parameters?: RecaptchaParameters\n  ): number {\n    const id = this.counter;\n    this._widgets.set(\n      id,\n      new MockWidget(container, this.auth.name, parameters || {})\n    );\n    this.counter++;\n    return id;\n  }\n\n  reset(optWidgetId?: number): void {\n    const id = optWidgetId || _WIDGET_ID_START;\n    void this._widgets.get(id)?.delete();\n    this._widgets.delete(id);\n  }\n\n  getResponse(optWidgetId?: number): string {\n    const id = optWidgetId || _WIDGET_ID_START;\n    return this._widgets.get(id)?.getResponse() || '';\n  }\n\n  async execute(optWidgetId?: number | string): Promise<string> {\n    const id: number = (optWidgetId as number) || _WIDGET_ID_START;\n    void this._widgets.get(id)?.execute();\n    return '';\n  }\n}\n\nexport class MockGreCAPTCHATopLevel implements GreCAPTCHATopLevel {\n  enterprise: GreCAPTCHA = new MockGreCAPTCHA();\n  ready(callback: () => void): void {\n    callback();\n  }\n\n  execute(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _siteKey: string,\n    _options: { action: string }\n  ): Promise<string> {\n    return Promise.resolve('token');\n  }\n  render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _container: string | HTMLElement,\n    _parameters: GreCAPTCHARenderOption\n  ): string {\n    return '';\n  }\n}\n\nexport class MockGreCAPTCHA implements GreCAPTCHA {\n  ready(callback: () => void): void {\n    callback();\n  }\n\n  execute(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _siteKey: string,\n    _options: { action: string }\n  ): Promise<string> {\n    return Promise.resolve('token');\n  }\n  render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _container: string | HTMLElement,\n    _parameters: GreCAPTCHARenderOption\n  ): string {\n    return '';\n  }\n}\n\nexport class MockWidget {\n  private readonly container: HTMLElement;\n  private readonly isVisible: boolean;\n  private timerId: number | null = null;\n  private deleted = false;\n  private responseToken: string | null = null;\n  private readonly clickHandler = (): void => {\n    this.execute();\n  };\n\n  constructor(\n    containerOrId: string | HTMLElement,\n    appName: string,\n    private readonly params: RecaptchaParameters\n  ) {\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, AuthErrorCode.ARGUMENT_ERROR, { appName });\n\n    this.container = container;\n    this.isVisible = this.params.size !== 'invisible';\n    if (this.isVisible) {\n      this.execute();\n    } else {\n      this.container.addEventListener('click', this.clickHandler);\n    }\n  }\n\n  getResponse(): string | null {\n    this.checkIfDeleted();\n    return this.responseToken;\n  }\n\n  delete(): void {\n    this.checkIfDeleted();\n    this.deleted = true;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n    this.container.removeEventListener('click', this.clickHandler);\n  }\n\n  execute(): void {\n    this.checkIfDeleted();\n    if (this.timerId) {\n      return;\n    }\n\n    this.timerId = window.setTimeout(() => {\n      this.responseToken = generateRandomAlphaNumericString(50);\n      const { callback, 'expired-callback': expiredCallback } = this.params;\n      if (callback) {\n        try {\n          callback(this.responseToken);\n        } catch (e) {}\n      }\n\n      this.timerId = window.setTimeout(() => {\n        this.timerId = null;\n        this.responseToken = null;\n        if (expiredCallback) {\n          try {\n            expiredCallback();\n          } catch (e) {}\n        }\n\n        if (this.isVisible) {\n          this.execute();\n        }\n      }, _EXPIRATION_TIME_MS);\n    }, _SOLVE_TIME_MS);\n  }\n\n  private checkIfDeleted(): void {\n    if (this.deleted) {\n      throw new Error('reCAPTCHA mock was already deleted!');\n    }\n  }\n}\n\nfunction generateRandomAlphaNumericString(len: number): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < len; i++) {\n    chars.push(\n      allowedChars.charAt(Math.floor(Math.random() * allowedChars.length))\n    );\n  }\n  return chars.join('');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha, isV2 } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\n      return Promise.resolve(_window().grecaptcha! as Recaptcha);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha as Recaptcha;\n\n        if (!recaptcha || !isV2(recaptcha)) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${jsHelpers._recaptchaV2ScriptUrl()}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @remarks\n * `RecaptchaVerifier` does not work in a Node.js environment.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   */\n  constructor(\n    authExtern: Auth,\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    }\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  await _link(userInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @remarks\n * `PhoneAuthProvider` does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer\n{\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    protected readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e as Error);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e as Error);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _assert,\n  debugAssert,\n  _createError,\n  _assertInstanceOf\n} from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay. Set this to 8s since\n * blocking functions can take upto 7s to complete sign in, as documented in:\n * https://cloud.google.com/identity-platform/docs/blocking-functions#understanding_blocking_functions\n * https://firebase.google.com/docs/auth/extend-with-blocking-functions#understanding_blocking_functions\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 8000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _createError(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _createError(userInternal.auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight. This is specifically true for\n        // Firefox or if the opener is in an iframe, in which case the oauth\n        // helper closes the popup.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    // If we're not bypassing auth state, the ready outcome should be set to\n    // null.\n    if (!this.bypassAuthState) {\n      redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const persistence = resolverPersistence(resolver);\n  if (!(await persistence._isAvailable())) {\n    return false;\n  }\n  const hasPendingRedirect = (await persistence._get(key)) === 'true';\n  await persistence._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nexport function _overrideRedirectResult(\n  auth: AuthInternal,\n  result: () => Promise<UserCredentialInternal | null>\n): void {\n  redirectOutcomeMap.set(auth._key(), result);\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport {\n  _assertInstanceOf,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link signInWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await authInternal._initializationPromise;\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link reauthenticateWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Reauthenticate using a redirect.\n * await reauthenticateWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link linkWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns `null`.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {\n  androidPackageName?: string;\n  iosBundleId?: string;\n}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth,\n  request: GetProjectConfigRequest = {}\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js\n        ._loadJS(`${js._gapiScriptUrl()}?onload=${cbName}`)\n        .catch(e => reject(e));\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n/**\n * Fragment name for the App Check token that gets passed to the widget\n *\n * @internal\n */\nconst FIREBASE_APP_CHECK_FRAGMENT_ID = encodeURIComponent('fac');\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport async function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): Promise<string> {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n\n  // Sets the App Check token to pass to the widget\n  const appCheckToken = await auth._getAppCheckToken();\n  const appCheckTokenFragment = appCheckToken\n    ? `#${FIREBASE_APP_CHECK_FRAGMENT_ID}=${encodeURIComponent(appCheckToken)}`\n    : '';\n\n  // Start at index 1 to skip the leading '&' in the query string\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(\n    1\n  )}${appCheckTokenFragment}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\nimport { _overrideRedirectResult } from '../core/strategies/redirect';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    _setWindowLocation(url);\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n\n    // If the promise is rejected, the key should be removed so that the\n    // operation can be retried later.\n    promise.catch(() => {\n      delete this.eventManagers[key];\n    });\n\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n\n  _overrideRedirectResult = _overrideRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver =\n  BrowserPopupRedirectResolver;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion\n{\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @remarks\n   * This method does not work in a Node.js environment.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n\n  /**\n   * The identifier of the phone second factor: `phone`.\n   */\n  static FACTOR_ID = 'phone';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  TotpMultiFactorAssertion,\n  MultiFactorSession,\n  FactorId\n} from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  finalizeEnrollTotpMfa,\n  startEnrollTotpMfa,\n  StartTotpMfaEnrollmentResponse,\n  TotpVerificationInfo\n} from '../../api/account_management/mfa';\nimport {\n  FinalizeMfaResponse,\n  finalizeSignInTotpMfa\n} from '../../api/authentication/mfa';\nimport { MultiFactorAssertionImpl } from '../../mfa/mfa_assertion';\nimport { MultiFactorSessionImpl } from '../mfa_session';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * @public\n */\nexport class TotpMultiFactorGenerator {\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\n   * the TOTP (time-based one-time password) second factor.\n   * This assertion is used to complete enrollment in TOTP second factor.\n   *\n   * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorUser.enroll}.\n   */\n  static assertionForEnrollment(\n    secret: TotpSecret,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n  }\n\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\n   * This assertion is used to complete signIn with TOTP as the second factor.\n   *\n   * @param enrollmentId identifies the enrolled TOTP second factor.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}.\n   */\n  static assertionForSignIn(\n    enrollmentId: string,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromEnrollmentId(\n      enrollmentId,\n      oneTimePassword\n    );\n  }\n\n  /**\n   * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\n   * Creates a TOTP secret as part of enrolling a TOTP second factor.\n   * Used for generating a QR code URL or inputting into a TOTP app.\n   * This method uses the auth instance corresponding to the user in the multiFactorSession.\n   *\n   * @param session The {@link MultiFactorSession} that the user is part of.\n   * @returns A promise to {@link TotpSecret}.\n   */\n  static async generateSecret(\n    session: MultiFactorSession\n  ): Promise<TotpSecret> {\n    const mfaSession = session as MultiFactorSessionImpl;\n    _assert(\n      typeof mfaSession.user?.auth !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const response = await startEnrollTotpMfa(mfaSession.user.auth, {\n      idToken: mfaSession.credential,\n      totpEnrollmentInfo: {}\n    });\n    return TotpSecret._fromStartTotpMfaEnrollmentResponse(\n      response,\n      mfaSession.user.auth\n    );\n  }\n\n  /**\n   * The identifier of the TOTP second factor: `totp`.\n   */\n  static FACTOR_ID: 'totp' = FactorId.TOTP;\n}\n\nexport class TotpMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements TotpMultiFactorAssertion\n{\n  constructor(\n    readonly otp: string,\n    readonly enrollmentId?: string,\n    readonly secret?: TotpSecret\n  ) {\n    super(FactorId.TOTP);\n  }\n\n  /** @internal */\n  static _fromSecret(\n    secret: TotpSecret,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n  }\n\n  /** @internal */\n  static _fromEnrollmentId(\n    enrollmentId: string,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n  }\n\n  /** @internal */\n  async _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      typeof this.secret !== 'undefined',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return finalizeEnrollTotpMfa(auth, {\n      idToken,\n      displayName,\n      totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n    });\n  }\n\n  /** @internal */\n  async _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      this.enrollmentId !== undefined && this.otp !== undefined,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    const totpVerificationInfo = { verificationCode: this.otp };\n    return finalizeSignInTotpMfa(auth, {\n      mfaPendingCredential,\n      mfaEnrollmentId: this.enrollmentId,\n      totpVerificationInfo\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * Stores the shared secret key and other parameters to generate time-based OTPs.\n * Implements methods to retrieve the shared secret key and generate a QR code URL.\n * @public\n */\nexport class TotpSecret {\n  /**\n   * Shared secret key/seed used for enrolling in TOTP MFA and generating OTPs.\n   */\n  readonly secretKey: string;\n  /**\n   * Hashing algorithm used.\n   */\n  readonly hashingAlgorithm: string;\n  /**\n   * Length of the one-time passwords to be generated.\n   */\n  readonly codeLength: number;\n  /**\n   * The interval (in seconds) when the OTP codes should change.\n   */\n  readonly codeIntervalSeconds: number;\n  /**\n   * The timestamp (UTC string) by which TOTP enrollment should be completed.\n   */\n  // This can be used by callers to show a countdown of when to enter OTP code by.\n  readonly enrollmentCompletionDeadline: string;\n\n  // The public members are declared outside the constructor so the docs can be generated.\n  private constructor(\n    secretKey: string,\n    hashingAlgorithm: string,\n    codeLength: number,\n    codeIntervalSeconds: number,\n    enrollmentCompletionDeadline: string,\n    private readonly sessionInfo: string,\n    private readonly auth: AuthInternal\n  ) {\n    this.secretKey = secretKey;\n    this.hashingAlgorithm = hashingAlgorithm;\n    this.codeLength = codeLength;\n    this.codeIntervalSeconds = codeIntervalSeconds;\n    this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n  }\n\n  /** @internal */\n  static _fromStartTotpMfaEnrollmentResponse(\n    response: StartTotpMfaEnrollmentResponse,\n    auth: AuthInternal\n  ): TotpSecret {\n    return new TotpSecret(\n      response.totpSessionInfo.sharedSecretKey,\n      response.totpSessionInfo.hashingAlgorithm,\n      response.totpSessionInfo.verificationCodeLength,\n      response.totpSessionInfo.periodSec,\n      new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(),\n      response.totpSessionInfo.sessionInfo,\n      auth\n    );\n  }\n\n  /** @internal */\n  _makeTotpVerificationInfo(otp: string): TotpVerificationInfo {\n    return { sessionInfo: this.sessionInfo, verificationCode: otp };\n  }\n\n  /**\n   * Returns a QR code URL as described in\n   * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n   * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\n   * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\n   *\n   * @param accountName the name of the account/app along with a user identifier.\n   * @param issuer issuer of the TOTP (likely the app name).\n   * @returns A QR code URL string.\n   */\n  generateQrCodeUrl(accountName?: string, issuer?: string): string {\n    let useDefaults = false;\n    if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n      useDefaults = true;\n    }\n    if (useDefaults) {\n      if (_isEmptyString(accountName)) {\n        accountName = this.auth.currentUser?.email || 'unknownuser';\n      }\n      if (_isEmptyString(issuer)) {\n        issuer = this.auth.name;\n      }\n    }\n    return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\n  }\n}\n\n/** @internal */\nfunction _isEmptyString(input?: string): boolean {\n  return typeof input === 'undefined' || input?.length === 0;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    case ClientPlatform.WEB_EXTENSION:\n      return 'web-extension';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const heartbeatServiceProvider =\n          container.getProvider<'heartbeat'>('heartbeat');\n        const appCheckServiceProvider =\n          container.getProvider<'app-check-internal'>('app-check-internal');\n        const { apiKey, authDomain } = app.options;\n\n        _assert(\n          apiKey && !apiKey.includes(':'),\n          AuthErrorCode.INVALID_API_KEY,\n          { appName: app.name }\n        );\n\n        const config: ConfigInternal = {\n          apiKey,\n          authDomain,\n          clientPlatform,\n          apiHost: DefaultConfig.API_HOST,\n          tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n          apiScheme: DefaultConfig.API_SCHEME,\n          sdkClientVersion: _getClientVersion(clientPlatform)\n        };\n\n        const authInstance = new AuthImpl(\n          app,\n          heartbeatServiceProvider,\n          appCheckServiceProvider,\n          config\n        );\n        _initializeAuthInstance(authInstance, deps);\n\n        return authInstance;\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\n\nimport {\n  initializeAuth,\n  beforeAuthStateChanged,\n  onIdTokenChanged,\n  connectAuthEmulator\n} from '..';\nimport { registerAuth } from '../core/auth/register';\nimport { ClientPlatform } from '../core/util/version';\nimport { browserLocalPersistence } from './persistence/local_storage';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { indexedDBLocalPersistence } from './persistence/indexed_db';\nimport { browserPopupRedirectResolver } from './popup_redirect';\nimport { Auth, User } from '../model/public_types';\nimport { getDefaultEmulatorHost, getExperimentalSetting } from '@firebase/util';\nimport { _setExternalJSProvider } from './load_js';\nimport { _createError } from '../core/util/assert';\nimport { AuthErrorCode } from '../core/errors';\n\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nconst authIdTokenMaxAge =\n  getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\n\nlet lastPostedIdToken: string | undefined | null = null;\n\nconst mintCookieFactory = (url: string) => async (user: User | null) => {\n  const idTokenResult = user && (await user.getIdTokenResult());\n  const idTokenAge =\n    idTokenResult &&\n    (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1_000;\n  if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n    return;\n  }\n  // Specifically trip null => undefined when logged out, to delete any existing cookie\n  const idToken = idTokenResult?.token;\n  if (lastPostedIdToken === idToken) {\n    return;\n  }\n  lastPostedIdToken = idToken;\n  await fetch(url, {\n    method: idToken ? 'POST' : 'DELETE',\n    headers: idToken\n      ? {\n          'Authorization': `Bearer ${idToken}`\n        }\n      : {}\n  });\n};\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [\n      indexedDBLocalPersistence,\n      browserLocalPersistence,\n      browserSessionPersistence\n    ]\n  });\n\n  const authTokenSyncPath = getExperimentalSetting('authTokenSyncURL');\n  // Only do the Cookie exchange in a secure context\n  if (\n    authTokenSyncPath &&\n    typeof isSecureContext === 'boolean' &&\n    isSecureContext\n  ) {\n    // Don't allow urls (XSS possibility), only paths on the same domain\n    const authTokenSyncUrl = new URL(authTokenSyncPath, location.origin);\n    if (location.origin === authTokenSyncUrl.origin) {\n      const mintCookie = mintCookieFactory(authTokenSyncUrl.toString());\n      beforeAuthStateChanged(auth, mintCookie, () =>\n        mintCookie(auth.currentUser)\n      );\n      onIdTokenChanged(auth, user => mintCookie(user));\n    }\n  }\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\n_setExternalJSProvider({\n  loadJS(url: string): Promise<Event> {\n    // TODO: consider adding timeout support & cancellation\n    return new Promise((resolve, reject) => {\n      const el = document.createElement('script');\n      el.setAttribute('src', url);\n      el.onload = resolve;\n      el.onerror = e => {\n        const error = _createError(AuthErrorCode.INTERNAL_ERROR);\n        error.customData = e as unknown as Record<string, unknown>;\n        reject(error);\n      };\n      el.type = 'text/javascript';\n      el.charset = 'UTF-8';\n      getScriptParentElement().appendChild(el);\n    });\n  },\n\n  gapiScript: 'https://apis.google.com/js/api.js',\n  recaptchaV2Script: 'https://www.google.com/recaptcha/api.js',\n  recaptchaEnterpriseScript:\n    'https://www.google.com/recaptcha/enterprise.js?render='\n});\n\nregisterAuth(ClientPlatform.BROWSER);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}